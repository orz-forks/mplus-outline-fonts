%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(TM) 7.0
%%For: (coz) (underforest)
%%Title: (2535.eps)
%%CreationDate: (5/29/04) (11:44 AM)
%%BoundingBox: 0 0 500 700
%%HiResBoundingBox: 0 0 500 700
%%DocumentProcessColors: Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_ColorImage_AI6 1.1 0
%%+ procset Adobe_Illustrator_AI5 1.2 0
%%+ procset Adobe_cshow 2.0 8
%AI5_FileFormat 3
%AI3_ColorUsage: Black&White
%AI3_IncludePlacedImages
%AI7_ImageSettings: 1
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 8.5 0 0 0 0 0 0 0 0 -1 -1
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () 
%AI3_TemplateBox: 244.5 356.5 244.5 356.5
%AI3_TileBox: -41.5 -19.5 534.5 742.5
%AI3_DocumentPreview: Macintosh_ColorPic
%AI5_ArtSize: 592 840
%AI5_RulerUnits: 2
%AI5_ArtFlags: 1 0 0 1 0 0 1 1 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI5_OpenToView: -331.5 752.5 -1.5 794 556 25 0 0 3 40 0 0
%AI5_OpenViewLayers: 5
%%PageOrigin:-41.5 -19.5
%%AI3_PaperRect:-10 808 585 -34
%%AI3_Margin:10 -43 -9 34
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 25 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			0
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			1
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop 
			0 eq
			{
				pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				pop
				3
				{
					1 exch sub
					3 index mul 
					1 exch sub
					3 1 roll
				} repeat
				4 -1 roll pop
				setrgbcolor
			} ifelse
		}
		def
	} if
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	level2?
	{
		gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
		add add add 4 eq
	}
	{
		1 0 0 0 testCMYKColorThrough
		0 1 0 0 testCMYKColorThrough
		0 0 1 0 testCMYKColorThrough
		0 0 0 1 testCMYKColorThrough
		and and and
	} ifelse
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.1 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 24 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize
{ 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6
	{
		dup type /arraytype eq
		{
			dup xcheck
			{
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not
{
	/Adobe_ColorImage_AI6_Vars 15 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/channelcount 0 def
	/sourcecount 0 def
	/sourcearray 4 array def
	/plateindex -1 def
	/XIMask 0 def
	/XIBinary 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIBuffer null def
	/XIDataProc null def
	/XIVersion 6 def
end
/WalkRGBString null def
/WalkCMYKString null def
/StuffRGBIntoGrayString null def
/RGBToGrayImageProc null def
/StuffCMYKIntoGrayString null def
/CMYKToGrayImageProc null def
/ColorImageCompositeEmulator null def
/SeparateCMYKImageProc null def
/FourEqual null def
/TestPlateIndex null def
currentdict /_colorimage known not
{
	/colorimage where
	{
		/colorimage get /_colorimage exch def
	}
	{
		/_colorimage null def
	} ifelse
} if
/_currenttransfer systemdict /currenttransfer get def
/colorimage null def
/XI null def
/WalkRGBString
{
	0 3 index
	dup length 1 sub 0 3 3 -1 roll
	{
		3 getinterval { } forall
		5 index exec
		3 index
	} for
	
	 5 { pop } repeat
} def
/WalkCMYKString
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll
	{
		4 getinterval { } forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/StuffRGBIntoGrayString
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/RGBToGrayImageProc
{	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		dup length 3 idiv string
		dup 3 1 roll 
		
		/StuffRGBIntoGrayString load exch
		WalkRGBString
 end
} def
/StuffCMYKIntoGrayString
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/CMYKToGrayImageProc
{	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		dup length 4 idiv string
		dup 3 1 roll 
		
		/StuffCMYKIntoGrayString load exch
		WalkCMYKString
 end
} def
/ColorImageCompositeEmulator
{
	pop true eq
	{
		Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat
	}
	{
		Adobe_ColorImage_AI6_Vars /channelcount get 1 ne
		{
			Adobe_ColorImage_AI6_Vars begin
				sourcearray 0 3 -1 roll put
			
				channelcount 3 eq 
				{ 
					/RGBToGrayImageProc 
				}
				{ 
					/CMYKToGrayImageProc
				} ifelse
				load
		 end
		} if
		image
	} ifelse
} def
/SeparateCMYKImageProc
{	
	Adobe_ColorImage_AI6_Vars begin
		sourcecount 0 ne
		{
			sourcearray plateindex get exec
		}
		{			
			sourcearray 0 get exec
			
			dup length 4 idiv string
			
			0 2 index
			
			plateindex 4 2 index length 1 sub
			{
				get 255 exch sub
				
				3 copy put pop 1 add
				
				2 index
			} for
			pop pop exch pop
		} ifelse
 end
} def
	
/FourEqual
{
	4 index ne
	{
		pop pop pop false
	}
	{
		4 index ne
		{
			pop pop false
		}
		{
			4 index ne
			{
				pop false
			}
			{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/TestPlateIndex
{
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where
		{
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 FourEqual 
			{ 
				/plateindex 0 def
			}
			{
				0 1 0 0 FourEqual
				{ 
					/plateindex 1 def
				}
				{
					0 0 1 0 FourEqual
					{
						/plateindex 2 def
					}
					{
						0 0 0 1 FourEqual
						{ 
							/plateindex 3 def
						}
						{
							0 0 0 0 FourEqual
							{
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/colorimage
{
	Adobe_ColorImage_AI6_Vars begin
		/channelcount 1 index def
		/sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def
		4 sourcecount add index dup 
		8 eq exch 1 eq or not
 end
	
	{
		/_colorimage load null ne
		{
			_colorimage
		}
		{
			Adobe_ColorImage_AI6_Vars /sourcecount get
			7 add { pop } repeat
		} ifelse
	}
	{
		dup 3 eq
		TestPlateIndex
		dup -1 eq exch 5 eq or or
		{
			/_colorimage load null eq
			{
				ColorImageCompositeEmulator
			}
			{
				dup 1 eq
				{
					pop pop image
				}
				{
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
					{
						gsave
						
						0 _currenttransfer exec
						1 _currenttransfer exec
						eq
						{ 0 _currenttransfer exec 0.5 lt }
						{ 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse
						
						{ { pop 0 } } { { pop 1 } } ifelse
						systemdict /settransfer get exec
					} if
					
					_colorimage
					
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
					{
						grestore
					} if
				} ifelse
			} ifelse
		}
		{
			dup 1 eq
			{
				pop pop
				image
			}
			{
				pop pop
				Adobe_ColorImage_AI6_Vars begin
					sourcecount -1 0
					{			
						exch sourcearray 3 1 roll put
					} for
					/SeparateCMYKImageProc load
			 end
				systemdict /image get exec
			} ifelse
		} ifelse
	} ifelse
} def
/XG
{
	pop pop
} def
/XF
{
	13 {pop} repeat
} def
/Xh
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIMask exch 0 ne def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		XIMask
		{
			/_lp /null ddef
			_fc
			/_lp /imagemask ddef
		}
		if
		/XIVersion 7 def
 end
} def
/XH
{
	Adobe_ColorImage_AI6_Vars begin
		/XIVersion 6 def
		grestore
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIMask exch 0 ne def
		/XIBinary exch 0 ne def
		pop
		pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq
		{
			XIImageWidth 8 div ceiling cvi
		}
		{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIBuffer exch string def
		XIBinary
		{
			/XIDataProc { currentfile XIBuffer readstring pop } def
			XIVersion 6 le
			{
				currentfile 128 string readline pop pop
			}
			if
		}
		{
			/XIDataProc { currentfile XIBuffer readhexstring pop } def
		} ifelse
		
		XIVersion 6 le
		{
			0 0 moveto
			XIImageMatrix concat
			XIImageWidth XIImageHeight scale
			XIMask
			{
				/_lp /null ddef
				_fc
				/_lp /imagemask ddef
			} if
		} if
		
		XIMask
		{
			XIImageWidth XIImageHeight
			false
			[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
			/XIDataProc load
			imagemask
		}
		{
			XIImageWidth XIImageHeight
			XIBitsPerPixel
			[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
			/XIDataProc load
			
			XIChannelCount 1 eq
			{
				gsave
				0 setgray
				image
				grestore
			}
			{
				false
				XIChannelCount
				colorimage
			} ifelse
		} ifelse
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 7.0 Full Prolog)
%%Version: 1.2 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 107 dict dup begin
put
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XA
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/_rgbtocmyk
{
3
	{
	1 exch sub 3 1 roll
	} repeat
3 copy 1 4 1 roll
3
	{
	3 index 2 copy gt
		{
		exch
		} if
	pop 4 1 roll
	} repeat
pop pop pop
4 1 roll
3
	{
	3 index sub
	3 1 roll
	} repeat
4 -1 roll
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq
	{
		findcmykcustomcolor
	}
	{
		/findrgbcustomcolor where not {
			4 1 roll _rgbtocmyk
			5 -1 roll
			findcmykcustomcolor
		}
		{
			pop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq
	{
		findcmykcustomcolor
	}
	{
		/findrgbcustomcolor where not {
			4 1 roll _rgbtocmyk
			5 -1 roll
			findcmykcustomcolor
		}
		{
			pop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%EndProlog
%%BeginSetup
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_BeginPalette
0 0 Pb
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 0 1 1 0 0 3 79 79 255 Lb
(glyphs) Ln
0 A
u
1 Ap
800 Ar
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
0 XR
100 600 m
100 700 L
0 700 L
0 600 L
100 600 L
n
500 600 m
500 700 L
400 700 L
400 600 L
500 600 L
n
200 600 m
200 700 L
100 700 L
100 600 L
200 600 L
n
300 600 m
300 700 L
200 700 L
200 600 L
300 600 L
n
400 600 m
400 700 L
300 700 L
300 600 L
400 600 L
n
100 500 m
100 600 L
0 600 L
0 500 L
100 500 L
n
500 500 m
500 600 L
400 600 L
400 500 L
500 500 L
n
200 500 m
200 600 L
100 600 L
100 500 L
200 500 L
n
300 500 m
300 600 L
200 600 L
200 500 L
300 500 L
n
400 500 m
400 600 L
300 600 L
300 500 L
400 500 L
n
100 400 m
100 500 L
0 500 L
0 400 L
100 400 L
n
500 400 m
500 500 L
400 500 L
400 400 L
500 400 L
n
200 400 m
200 500 L
100 500 L
100 400 L
200 400 L
n
300 400 m
300 500 L
200 500 L
200 400 L
300 400 L
n
400 400 m
400 500 L
300 500 L
300 400 L
400 400 L
n
100 300 m
100 400 L
0 400 L
0 300 L
100 300 L
n
500 300 m
500 400 L
400 400 L
400 300 L
500 300 L
n
200 300 m
200 400 L
100 400 L
100 300 L
200 300 L
n
300 300 m
300 400 L
200 400 L
200 300 L
300 300 L
n
400 300 m
400 400 L
300 400 L
300 300 L
400 300 L
n
100 200 m
100 300 L
0 300 L
0 200 L
100 200 L
n
500 200 m
500 300 L
400 300 L
400 200 L
500 200 L
n
200 200 m
200 300 L
100 300 L
100 200 L
200 200 L
n
300 200 m
300 300 L
200 300 L
200 200 L
300 200 L
n
400 200 m
400 300 L
300 300 L
300 200 L
400 200 L
n
100 100 m
100 200 L
0 200 L
0 100 L
100 100 L
n
500 100 m
500 200 L
400 200 L
400 100 L
500 100 L
n
200 100 m
200 200 L
100 200 L
100 100 L
200 100 L
n
300 100 m
300 200 L
200 200 L
200 100 L
300 100 L
n
400 100 m
400 200 L
300 200 L
300 100 L
400 100 L
n
100 0 m
100 100 L
0 100 L
0 0 L
100 0 L
n
500 0 m
500 100 L
400 100 L
400 0 L
500 0 L
n
200 0 m
200 100 L
100 100 L
100 0 L
200 0 L
n
300 0 m
300 100 L
200 100 L
200 0 L
300 0 L
n
400 0 m
400 100 L
300 100 L
300 0 L
400 0 L
n
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
0 Ap
0 O
0 g
1 D
92 672 m
75 672 L
75 691 L
72 691 L
72 672 L
27 672 L
27 691 L
24 691 L
24 672 L
8 672 L
8 669 L
24 669 L
24 645 L
27 645 L
27 669 L
72 669 L
72 663 L
72 626.6734 62.8831 616.7459 28.7 614 C
29 611 L
64.4688 613.8492 75 624.5983 75 663 C
75 669 L
92 669 L
92 672 L
f
251.8 644 m
264.0149 633.5215 275.2654 623.247 285.8 613 C
288 615 L
277.2142 625.4914 266.0858 635.7464 253.9 646.2 C
251.8 644 L
f
274.6 684 m
267.3821 659.4214 246.101 634.8661 212 615.5 C
213.6 613 L
248.5605 632.8543 270.8063 658.1532 278 685 C
219 685 L
219 682 L
276 682 L
274.6 684 L
f
187 674.5 m
179.607 632.5733 163.1958 618.9804 117.7 615 C
118 612 L
164.9134 616.1045 182.4521 631.1952 190 674 C
187 674.5 L
f
150 682 m
138.8125 684.1875 128.5625 686.0625 117 688 C
116.4 685 L
127.564 683.1293 137.8968 681.2688 149.5 679 C
150 682 L
f
145.6 658 m
134.4125 660.1875 124.1625 662.0625 112.6 664 C
112 661 L
123.164 659.1293 133.4968 657.2688 145.1 655 C
145.6 658 L
f
425 612 m
469.2598 615.8722 486 635.4721 486 687 C
483 687 L
483 636.6688 466.8819 618.6904 424.7 615 C
425 612 L
f
411 683.3 m
417.875 673.7625 424.697 663.5572 431 653.3 C
433.6 654.8 L
427.3308 665.0023 420.583 675.1739 413.5 685 C
411 683.3 L
f
u
117.6667 511.4969 m
165.4862 515.6807 182.961 530.6305 190.6667 574.3303 C
185.2666 575.2136 L
177.9878 533.9346 162.3549 520.9245 117.0833 516.9637 C
117.6667 511.4969 L
f
117.3333 410.9938 m
166.059 415.2569 183.4699 430.0658 191.3334 474.6606 C
183.5332 475.9272 L
176.3686 435.2959 161.5139 422.8686 116.4666 418.9273 C
117.3333 410.9938 L
f
117 310.5 m
166.6317 314.8423 183.9787 329.5102 192 375 C
181.8 376.65 L
174.7496 336.6662 160.673 324.8216 115.85 320.9 C
117 310.5 L
f
116.6667 209.9969 m
167.2045 214.4185 184.4876 228.9455 192.6667 275.3303 C
180.0666 277.3636 L
173.1304 238.0275 159.832 226.7657 115.2333 222.8636 C
116.6667 209.9969 L
f
116.3333 109.503 m
167.7772 114.0039 184.9964 128.39 193.3333 175.6697 C
178.3334 178.0863 L
171.5114 139.3978 158.9911 128.7187 114.6167 124.8363 C
116.3333 109.503 L
f
U
116 9 m
168.35 13.5801 185.5053 27.8253 194 76 C
176.6 78.8 L
169.8922 40.759 158.1502 30.6627 114 26.8 C
116 9 L
f
u
150.4 582.7803 m
139.022 585.005 128.6799 586.8843 117.0667 588.8303 C
116 583.6136 L
127.303 581.7195 137.7445 579.8524 149.45 577.5635 C
150.4 582.7803 L
f
150.8 483.5606 m
139.2315 485.8226 128.7974 487.7061 117.1333 489.6606 C
115.6 482.2271 L
127.0421 480.3098 137.5923 478.4359 149.4 476.1271 C
150.8 483.5606 L
f
151.2 384.35 m
139.4409 386.6492 128.9148 388.5369 117.2 390.5 C
115.2 380.85 L
126.7812 378.9093 137.44 377.0288 149.35 374.7 C
151.2 384.35 L
f
151.6 285.1303 m
139.6504 287.4668 129.0322 289.3587 117.2667 291.3303 C
114.8 279.4635 L
126.5203 277.4996 137.2878 275.6123 149.3 273.2635 C
151.6 285.1303 L
f
152 185.9197 m
139.8599 188.2934 129.1497 190.1896 117.3333 192.1697 C
114.4 178.0864 L
126.2594 176.0991 137.1356 174.2052 149.25 171.8364 C
152 185.9197 L
f
U
152.4 86.7 m
140.0693 89.111 129.2671 91.0114 117.4 93 C
114 76.7 L
125.9985 74.6894 136.9833 72.7888 149.2 70.4 C
152.4 86.7 L
f
u
145.9 558.6136 m
134.522 560.8384 124.1799 562.7176 112.5666 564.6636 C
111.5 559.4469 L
122.803 557.5528 133.2445 555.6857 144.95 553.3969 C
145.9 558.6136 L
f
146.2 459.2272 m
134.6315 461.4893 124.1974 463.3727 112.5333 465.3273 C
111 457.8938 L
122.4421 455.9764 132.9923 454.1026 144.8 451.7938 C
146.2 459.2272 L
f
146.5 359.85 m
134.7409 362.1492 124.2148 364.0369 112.5 366 C
110.5 356.35 L
122.0812 354.4093 132.74 352.5288 144.65 350.2 C
146.5 359.85 L
f
146.8 260.4636 m
134.8504 262.8001 124.2322 264.6921 112.4666 266.6636 C
110 254.7969 L
121.7203 252.8329 132.4878 250.9457 144.5 248.5969 C
146.8 260.4636 L
f
147.1 161.0863 m
134.9599 163.4601 124.2497 165.3563 112.4333 167.3363 C
109.5 153.2531 L
121.3594 151.2658 132.2356 149.3719 144.35 147.0031 C
147.1 161.0863 L
f
U
147.4 61.7 m
135.0693 64.111 124.2671 66.0114 112.4 68 C
109 51.7 L
120.9985 49.6894 131.9833 47.7888 144.2 45.4 C
147.4 61.7 L
f
u
250.3469 543.5686 m
262.6633 533.0256 273.9935 522.712 284.6666 512.3302 C
288.6667 516.0803 L
277.8249 526.6261 266.5088 537.0117 254.097 547.6353 C
250.3469 543.5686 L
f
248.8939 443.1372 m
261.3117 432.5298 272.7217 422.1769 283.5333 411.6605 C
289.3334 417.1606 L
278.4356 427.7608 266.9318 438.277 254.294 449.0706 C
248.8939 443.1372 L
f
247.441 342.715 m
259.9602 332.0432 271.45 321.6511 282.4 311 C
290 318.25 L
279.0463 328.9046 267.3547 339.5513 254.4909 350.515 C
247.441 342.715 L
f
245.9879 242.2836 m
258.6085 231.5473 270.1781 221.116 281.2666 210.3302 C
290.6667 219.3303 L
279.657 230.0394 267.7777 240.8167 254.6879 251.9503 C
245.9879 242.2836 L
f
244.535 141.8614 m
257.2571 131.0607 268.9064 120.5902 280.1334 109.6697 C
291.3333 120.4197 L
280.2677 131.1831 268.2006 142.091 254.8849 153.3946 C
244.535 141.8614 L
f
U
243.0819 41.43 m
255.9054 30.5649 267.6345 20.0552 279 9 C
292 21.5 L
280.8784 32.3179 268.6236 43.3563 255.0819 54.83 C
243.0819 41.43 L
f
u
272.3666 584.4969 m
265.6622 559.568 244.3192 534.9448 211.3333 517.1803 C
213.8333 512.3302 L
248.7585 530.9368 272.008 557.6079 278.5 585.6636 C
218.5 585.6636 L
218.5 580.3302 L
276 580.3302 L
272.3666 584.4969 L
f
270.1332 484.9939 m
263.9422 459.7146 242.5374 435.0235 210.6666 418.8606 C
214.0667 411.6605 L
248.9565 429.0194 273.2097 457.0627 279 486.3273 C
218 486.3273 L
218 478.6604 L
276 478.6604 L
270.1332 484.9939 L
f
267.9 385.5 m
262.2224 359.8703 240.7558 335.1113 210 320.55 C
214.3 311 L
249.1545 327.1113 274.4114 356.5266 279.5 387 C
217.5 387 L
217.5 377 L
276 377 L
267.9 385.5 L
f
265.6666 285.9969 m
260.5024 260.017 238.9741 235.19 209.3333 222.2303 C
214.5333 210.3302 L
249.3524 225.1938 275.6131 255.9814 280 287.6636 C
217 287.6636 L
217 275.3302 L
276 275.3302 L
265.6666 285.9969 L
f
263.4334 186.503 m
258.7826 160.1727 237.1924 135.2778 208.6667 123.9196 C
214.7666 109.6697 L
249.5504 123.2857 276.8147 155.4454 280.5 188.3363 C
216.5 188.3363 L
216.5 173.6697 L
276 173.6697 L
263.4334 186.503 L
f
U
261.2 87 m
257.0627 60.3193 235.4107 35.3565 208 25.6 C
215 9 L
249.7484 21.3683 278.0164 54.9001 281 89 C
216 89 L
216 72 L
276 72 L
261.2 87 L
f
u
481.1666 587.3303 m
481.1666 537.7691 465.8148 520.7089 424.15 517.0637 C
424.8333 511.6636 L
469.6347 515.5832 486.6667 535.1148 486.6667 587.3303 C
481.1666 587.3303 L
f
479.3332 487.6606 m
479.3332 438.8694 464.7478 422.7273 423.6 419.1273 C
424.6667 411.3272 L
470.0096 415.2942 487.3334 434.7576 487.3334 487.6606 C
479.3332 487.6606 L
f
477.5 388 m
477.5 339.9786 463.6808 324.7547 423.05 321.2 C
424.5 311 L
470.3845 315.0144 488 334.4096 488 388 C
477.5 388 L
f
475.6666 288.3303 m
475.6666 241.0789 462.6138 226.7731 422.5 223.2637 C
424.3333 210.6636 L
470.7593 214.7254 488.6667 234.0523 488.6667 288.3303 C
475.6666 288.3303 L
f
473.8334 188.6697 m
473.8334 142.1882 461.5468 128.8006 421.95 125.3363 C
424.1667 110.3364 L
471.1342 114.4455 489.3333 133.7043 489.3333 188.6697 C
473.8334 188.6697 L
f
U
472 89 m
472 43.2885 460.4798 30.819 421.4 27.4 C
424 10 L
471.5091 14.1565 490 33.3471 490 89 C
472 89 L
f
u
410.3333 582.6802 m
417.241 572.9461 424.1903 562.4482 430.5 552.1802 C
435.4167 554.9636 L
429.0661 565.2984 422.1835 575.761 415.1501 585.6636 C
410.3333 582.6802 L
f
409.6666 482.0605 m
416.607 472.1296 423.6837 461.3392 430 451.0605 C
437.2334 455.1272 L
430.8014 465.5945 423.784 476.348 416.8001 486.3273 C
409.6666 482.0605 L
f
409 381.45 m
415.973 371.3224 423.1771 360.2394 429.5 349.95 C
439.05 355.3 L
432.5365 365.8997 425.3844 376.9442 418.45 387 C
409 381.45 L
f
408.3333 280.8303 m
415.339 270.5059 422.6705 259.1304 429 248.8302 C
440.8667 255.4636 L
434.2718 266.1958 426.9849 277.5313 420.1 287.6636 C
408.3333 280.8303 L
f
407.6667 180.2197 m
414.7051 169.6987 422.1639 158.0307 428.5 147.7197 C
442.6833 155.6364 L
436.0069 166.5011 428.5853 178.1275 421.7499 188.3363 C
407.6667 180.2197 L
f
U
407 79.6 m
414.0711 68.8823 421.6573 56.9217 428 46.6 C
444.5 55.8 L
437.7422 66.7972 430.1858 78.7146 423.4 89 C
407 79.6 L
f
385 616 m
354 616 l
337.9065 616 333 620.9065 333 637 c
333 692 L
330 692 L
330 637 L
330 619.0591 336.4797 613 354 613 C
385 613 L
385 616 L
f
386.9512 677.8119 m
386.0654 657.4691 381.8432 650.1707 367 642.9 C
368.4 640.2 L
384.1856 647.9323 389.1963 655.9909 390 679 C
306.8243 667.3255 L
307.2418 664.3547 L
388.6886 675.8013 L
386.9512 677.8119 L
f
u
329.1667 592.1636 m
329.1667 536.9969 L
329.1667 518.6641 335.7231 512.4969 353.6667 512.4969 C
385.3334 512.4969 L
385.3334 517.8303 L
354.1667 517.8303 l
339.1478 517.8303 334.8334 522.1441 334.8334 537.3303 c
334.8334 592.1636 L
329.1667 592.1636 L
f
328.3333 492.3272 m
328.3333 436.9939 L
328.3333 418.2692 334.9664 411.9939 353.3333 411.9939 C
385.6667 411.9939 L
385.6667 419.6607 L
354.3333 419.6607 l
340.3892 419.6607 336.6668 423.3818 336.6668 437.6606 c
336.6668 492.3272 L
328.3333 492.3272 L
f
327.5 392.5 m
327.5 337 L
327.5 317.8834 334.2099 311.5 353 311.5 C
386 311.5 L
386 321.5 L
354.5 321.5 l
341.6304 321.5 338.5 324.6285 338.5 338 c
338.5 392.5 L
327.5 392.5 L
f
326.6667 292.6636 m
326.6667 236.9969 L
326.6667 217.4885 333.4533 210.9969 352.6667 210.9969 C
386.3334 210.9969 L
386.3334 223.3303 L
354.6667 223.3303 l
342.8718 223.3303 340.3334 225.8661 340.3334 238.3303 c
340.3334 292.6636 L
326.6667 292.6636 L
f
325.8334 192.8364 m
325.8334 137.003 L
325.8334 117.1027 332.6967 110.503 352.3334 110.503 C
386.6667 110.503 L
386.6667 125.1696 L
354.8333 125.1696 l
344.113 125.1696 342.1666 127.1128 342.1666 138.6697 c
342.1666 192.8364 L
325.8334 192.8364 L
f
U
u
325 93 m
325 37 L
325 16.7078 331.9401 10 352 10 C
387 10 L
387 27 L
355 27 l
345.3544 27 344 28.3505 344 39 c
344 93 L
325 93 L
f
U
u
384.623 577.7984 m
383.8573 557.2298 380.3294 551.1153 365.6666 543.2969 C
368.8333 538.6636 L
385.1962 547.5682 389.6636 554.9983 390.3334 579.6636 C
306.4255 568.4011 L
307.0069 563.0401 L
388.3999 573.9999 L
384.623 577.7984 L
f
382.2948 477.785 m
381.6493 456.9905 378.8157 452.0599 364.3332 443.6939 C
369.2667 437.1271 L
386.2068 447.2042 390.1309 454.0057 390.6667 480.3273 C
306.0268 469.4767 L
306.7719 461.7255 L
388.1112 472.1984 L
382.2948 477.785 L
f
379.9668 377.7807 m
379.4414 356.7604 377.3021 353.0135 363 344.1 C
369.7 335.6 L
387.2174 346.8493 390.5981 353.0224 391 381 C
305.6281 370.5614 L
306.537 360.4201 L
387.8225 370.4063 L
379.9668 377.7807 L
f
377.6386 277.7672 m
377.2334 256.5211 375.7883 253.9581 361.6666 244.4969 C
370.1333 234.0635 L
388.228 246.4853 391.0654 252.0298 391.3334 281.6636 C
305.2293 271.6371 L
306.3021 259.1055 L
387.5338 268.6049 L
377.6386 277.7672 L
f
375.3106 177.763 m
375.0255 156.291 374.2747 154.9118 360.3334 144.903 C
370.5667 132.5364 L
389.2385 146.1304 391.5326 151.0465 391.6667 182.3363 C
304.8306 172.7218 L
306.0672 157.8002 L
387.2451 166.8128 L
375.3106 177.763 L
f
U
372.9824 77.7495 m
372.8175 56.0517 372.761 55.8564 359 45.3 C
371 31 L
390.2491 45.7664 391.9999 50.0539 392 83 C
304.4319 73.7974 L
305.8323 56.4856 L
386.9564 65.0114 L
372.9824 77.7495 L
f
u
92.3334 572.8303 m
75.6667 572.8303 L
75.6667 590.9969 L
70.1666 590.9969 L
70.1666 572.8303 L
28.8334 572.8303 L
28.8334 590.9969 L
23.3333 590.9969 L
23.3333 572.8303 L
7.6667 572.8303 L
7.6667 567.4969 L
23.3333 567.4969 L
23.3333 544.3302 L
28.8334 544.3302 L
28.8334 567.4969 L
70.1666 567.4969 L
70.1666 561.1635 L
70.1666 527.3769 61.8126 518.3677 28.15 515.6636 C
28.6667 510.3302 L
64.9965 513.2486 75.6667 523.9707 75.6667 561.1635 C
75.6667 567.4969 L
92.3334 567.4969 L
92.3334 572.8303 L
f
92.6667 473.6606 m
76.3334 473.6606 L
76.3334 490.9939 L
68.3332 490.9939 L
68.3332 473.6606 L
30.6668 473.6606 L
30.6668 490.9939 L
22.6666 490.9939 L
22.6666 473.6606 L
7.3333 473.6606 L
7.3333 465.9938 L
22.6666 465.9938 L
22.6666 443.6605 L
30.6668 443.6605 L
30.6668 465.9938 L
68.3332 465.9938 L
68.3332 459.3271 L
68.3332 428.0803 60.7422 419.9896 27.6 417.3273 C
28.3333 409.6605 L
65.5242 412.6481 76.3334 423.3431 76.3334 459.3271 C
76.3334 465.9938 L
92.6667 465.9938 L
92.6667 473.6606 L
f
93 374.5 m
77 374.5 L
77 391 L
66.5 391 L
66.5 374.5 L
32.5 374.5 L
32.5 391 L
22 391 L
22 374.5 L
7 374.5 L
7 364.5 L
22 364.5 L
22 343 L
32.5 343 L
32.5 364.5 L
66.5 364.5 L
66.5 357.5 L
66.5 328.7929 59.6718 321.6205 27.05 319 C
28 309 L
66.0518 312.0567 77 322.7247 77 357.5 C
77 364.5 L
93 364.5 L
93 374.5 L
f
93.3334 275.3303 m
77.6667 275.3303 L
77.6667 290.9969 L
64.6666 290.9969 L
64.6666 275.3303 L
34.3334 275.3303 L
34.3334 290.9969 L
21.3333 290.9969 L
21.3333 275.3303 L
6.6667 275.3303 L
6.6667 262.9969 L
21.3333 262.9969 L
21.3333 242.3302 L
34.3334 242.3302 L
34.3334 262.9969 L
64.6666 262.9969 L
64.6666 255.6635 L
64.6666 229.4964 58.6014 223.2424 26.5 220.6636 C
27.6667 208.3302 L
66.5795 211.4561 77.6667 222.0971 77.6667 255.6635 C
77.6667 262.9969 L
93.3334 262.9969 L
93.3334 275.3303 L
f
93.6667 176.1697 m
78.3333 176.1697 L
78.3333 191.003 L
62.8334 191.003 L
62.8334 176.1697 L
36.1666 176.1697 L
36.1666 191.003 L
20.6667 191.003 L
20.6667 176.1697 L
6.3334 176.1697 L
6.3334 161.5031 L
20.6667 161.5031 L
20.6667 141.6697 L
36.1666 141.6697 L
36.1666 161.5031 L
62.8334 161.5031 L
62.8334 153.8364 L
62.8334 130.209 57.531 124.8732 25.95 122.3363 C
27.3334 107.6697 L
67.1071 110.8648 78.3333 121.4788 78.3333 153.8364 C
78.3333 161.5031 L
93.6667 161.5031 L
93.6667 176.1697 L
f
U
27 7 m
67.6348 10.2642 79 20.8512 79 52 C
79 60 L
94 60 L
94 77 L
79 77 L
79 91 L
61 91 L
61 77 L
38 77 L
38 91 L
20 91 L
20 77 L
6 77 L
6 60 L
20 60 L
20 41 L
38 41 L
38 60 L
61 60 L
61 52 l
61 30.9125 56.4606 26.4951 25.4 24 C
27 7 L
f
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
