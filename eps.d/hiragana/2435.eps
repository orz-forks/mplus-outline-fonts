%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(TM) 7.0
%%For: (coz) (underforest)
%%Title: (2435.eps)
%%CreationDate: (2/1/04) (8:51 PM)
%%BoundingBox: 0 0 500 500
%%HiResBoundingBox: 0 0 500 500
%%DocumentProcessColors: Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_ColorImage_AI6 1.1 0
%%+ procset Adobe_Illustrator_AI5 1.2 0
%%+ procset Adobe_cshow 2.0 8
%AI5_FileFormat 3
%AI3_ColorUsage: Black&White
%AI3_IncludePlacedImages
%AI7_ImageSettings: 1
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 8.5 0 0 0 0 0 0 0 0 -1 -1
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () 
%AI3_TemplateBox: 244.5 256.5 244.5 256.5
%AI3_TileBox: -41.5 -119.5 534.5 642.5
%AI3_DocumentPreview: Macintosh_ColorPic
%AI5_ArtSize: 592 840
%AI5_RulerUnits: 2
%AI5_ArtFlags: 1 0 0 1 0 0 1 1 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI5_OpenToView: -139.5 520.5 1 794 556 25 0 0 3 40 0 0
%AI5_OpenViewLayers: 5
%%PageOrigin:-41.5 -119.5
%%AI3_PaperRect:-10 808 585 -34
%%AI3_Margin:10 -43 -9 34
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 25 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			0
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			1
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop 
			0 eq
			{
				pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				pop
				3
				{
					1 exch sub
					3 index mul 
					1 exch sub
					3 1 roll
				} repeat
				4 -1 roll pop
				setrgbcolor
			} ifelse
		}
		def
	} if
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	level2?
	{
		gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
		add add add 4 eq
	}
	{
		1 0 0 0 testCMYKColorThrough
		0 1 0 0 testCMYKColorThrough
		0 0 1 0 testCMYKColorThrough
		0 0 0 1 testCMYKColorThrough
		and and and
	} ifelse
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.1 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 24 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize
{ 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6
	{
		dup type /arraytype eq
		{
			dup xcheck
			{
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not
{
	/Adobe_ColorImage_AI6_Vars 15 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/channelcount 0 def
	/sourcecount 0 def
	/sourcearray 4 array def
	/plateindex -1 def
	/XIMask 0 def
	/XIBinary 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIBuffer null def
	/XIDataProc null def
	/XIVersion 6 def
end
/WalkRGBString null def
/WalkCMYKString null def
/StuffRGBIntoGrayString null def
/RGBToGrayImageProc null def
/StuffCMYKIntoGrayString null def
/CMYKToGrayImageProc null def
/ColorImageCompositeEmulator null def
/SeparateCMYKImageProc null def
/FourEqual null def
/TestPlateIndex null def
currentdict /_colorimage known not
{
	/colorimage where
	{
		/colorimage get /_colorimage exch def
	}
	{
		/_colorimage null def
	} ifelse
} if
/_currenttransfer systemdict /currenttransfer get def
/colorimage null def
/XI null def
/WalkRGBString
{
	0 3 index
	dup length 1 sub 0 3 3 -1 roll
	{
		3 getinterval { } forall
		5 index exec
		3 index
	} for
	
	 5 { pop } repeat
} def
/WalkCMYKString
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll
	{
		4 getinterval { } forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/StuffRGBIntoGrayString
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/RGBToGrayImageProc
{	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		dup length 3 idiv string
		dup 3 1 roll 
		
		/StuffRGBIntoGrayString load exch
		WalkRGBString
 end
} def
/StuffCMYKIntoGrayString
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/CMYKToGrayImageProc
{	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		dup length 4 idiv string
		dup 3 1 roll 
		
		/StuffCMYKIntoGrayString load exch
		WalkCMYKString
 end
} def
/ColorImageCompositeEmulator
{
	pop true eq
	{
		Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat
	}
	{
		Adobe_ColorImage_AI6_Vars /channelcount get 1 ne
		{
			Adobe_ColorImage_AI6_Vars begin
				sourcearray 0 3 -1 roll put
			
				channelcount 3 eq 
				{ 
					/RGBToGrayImageProc 
				}
				{ 
					/CMYKToGrayImageProc
				} ifelse
				load
		 end
		} if
		image
	} ifelse
} def
/SeparateCMYKImageProc
{	
	Adobe_ColorImage_AI6_Vars begin
		sourcecount 0 ne
		{
			sourcearray plateindex get exec
		}
		{			
			sourcearray 0 get exec
			
			dup length 4 idiv string
			
			0 2 index
			
			plateindex 4 2 index length 1 sub
			{
				get 255 exch sub
				
				3 copy put pop 1 add
				
				2 index
			} for
			pop pop exch pop
		} ifelse
 end
} def
	
/FourEqual
{
	4 index ne
	{
		pop pop pop false
	}
	{
		4 index ne
		{
			pop pop false
		}
		{
			4 index ne
			{
				pop false
			}
			{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/TestPlateIndex
{
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where
		{
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 FourEqual 
			{ 
				/plateindex 0 def
			}
			{
				0 1 0 0 FourEqual
				{ 
					/plateindex 1 def
				}
				{
					0 0 1 0 FourEqual
					{
						/plateindex 2 def
					}
					{
						0 0 0 1 FourEqual
						{ 
							/plateindex 3 def
						}
						{
							0 0 0 0 FourEqual
							{
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/colorimage
{
	Adobe_ColorImage_AI6_Vars begin
		/channelcount 1 index def
		/sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def
		4 sourcecount add index dup 
		8 eq exch 1 eq or not
 end
	
	{
		/_colorimage load null ne
		{
			_colorimage
		}
		{
			Adobe_ColorImage_AI6_Vars /sourcecount get
			7 add { pop } repeat
		} ifelse
	}
	{
		dup 3 eq
		TestPlateIndex
		dup -1 eq exch 5 eq or or
		{
			/_colorimage load null eq
			{
				ColorImageCompositeEmulator
			}
			{
				dup 1 eq
				{
					pop pop image
				}
				{
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
					{
						gsave
						
						0 _currenttransfer exec
						1 _currenttransfer exec
						eq
						{ 0 _currenttransfer exec 0.5 lt }
						{ 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse
						
						{ { pop 0 } } { { pop 1 } } ifelse
						systemdict /settransfer get exec
					} if
					
					_colorimage
					
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
					{
						grestore
					} if
				} ifelse
			} ifelse
		}
		{
			dup 1 eq
			{
				pop pop
				image
			}
			{
				pop pop
				Adobe_ColorImage_AI6_Vars begin
					sourcecount -1 0
					{			
						exch sourcearray 3 1 roll put
					} for
					/SeparateCMYKImageProc load
			 end
				systemdict /image get exec
			} ifelse
		} ifelse
	} ifelse
} def
/XG
{
	pop pop
} def
/XF
{
	13 {pop} repeat
} def
/Xh
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIMask exch 0 ne def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		XIMask
		{
			/_lp /null ddef
			_fc
			/_lp /imagemask ddef
		}
		if
		/XIVersion 7 def
 end
} def
/XH
{
	Adobe_ColorImage_AI6_Vars begin
		/XIVersion 6 def
		grestore
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIMask exch 0 ne def
		/XIBinary exch 0 ne def
		pop
		pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq
		{
			XIImageWidth 8 div ceiling cvi
		}
		{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIBuffer exch string def
		XIBinary
		{
			/XIDataProc { currentfile XIBuffer readstring pop } def
			XIVersion 6 le
			{
				currentfile 128 string readline pop pop
			}
			if
		}
		{
			/XIDataProc { currentfile XIBuffer readhexstring pop } def
		} ifelse
		
		XIVersion 6 le
		{
			0 0 moveto
			XIImageMatrix concat
			XIImageWidth XIImageHeight scale
			XIMask
			{
				/_lp /null ddef
				_fc
				/_lp /imagemask ddef
			} if
		} if
		
		XIMask
		{
			XIImageWidth XIImageHeight
			false
			[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
			/XIDataProc load
			imagemask
		}
		{
			XIImageWidth XIImageHeight
			XIBitsPerPixel
			[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
			/XIDataProc load
			
			XIChannelCount 1 eq
			{
				gsave
				0 setgray
				image
				grestore
			}
			{
				false
				XIChannelCount
				colorimage
			} ifelse
		} ifelse
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 7.0 Full Prolog)
%%Version: 1.2 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 107 dict dup begin
put
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XA
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/_rgbtocmyk
{
3
	{
	1 exch sub 3 1 roll
	} repeat
3 copy 1 4 1 roll
3
	{
	3 index 2 copy gt
		{
		exch
		} if
	pop 4 1 roll
	} repeat
pop pop pop
4 1 roll
3
	{
	3 index sub
	3 1 roll
	} repeat
4 -1 roll
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq
	{
		findcmykcustomcolor
	}
	{
		/findrgbcustomcolor where not {
			4 1 roll _rgbtocmyk
			5 -1 roll
			findcmykcustomcolor
		}
		{
			pop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq
	{
		findcmykcustomcolor
	}
	{
		/findrgbcustomcolor where not {
			4 1 roll _rgbtocmyk
			5 -1 roll
			findcmykcustomcolor
		}
		{
			pop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%EndProlog
%%BeginSetup
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_BeginPalette
0 0 Pb
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 0 1 1 0 0 3 79 79 255 Lb
(glyphs) Ln
0 A
u
1 Ap
800 Ar
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
0 XR
100 400 m
100 500 L
0 500 L
0 400 L
100 400 L
n
500 400 m
500 500 L
400 500 L
400 400 L
500 400 L
n
200 400 m
200 500 L
100 500 L
100 400 L
200 400 L
n
300 400 m
300 500 L
200 500 L
200 400 L
300 400 L
n
400 400 m
400 500 L
300 500 L
300 400 L
400 400 L
n
100 300 m
100 400 L
0 400 L
0 300 L
100 300 L
n
500 300 m
500 400 L
400 400 L
400 300 L
500 300 L
n
200 300 m
200 400 L
100 400 L
100 300 L
200 300 L
n
300 300 m
300 400 L
200 400 L
200 300 L
300 300 L
n
400 300 m
400 400 L
300 400 L
300 300 L
400 300 L
n
100 200 m
100 300 L
0 300 L
0 200 L
100 200 L
n
500 200 m
500 300 L
400 300 L
400 200 L
500 200 L
n
200 200 m
200 300 L
100 300 L
100 200 L
200 200 L
n
300 200 m
300 300 L
200 300 L
200 200 L
300 200 L
n
400 200 m
400 300 L
300 300 L
300 200 L
400 200 L
n
100 100 m
100 200 L
0 200 L
0 100 L
100 100 L
n
500 100 m
500 200 L
400 200 L
400 100 L
500 100 L
n
200 100 m
200 200 L
100 200 L
100 100 L
200 100 L
n
300 100 m
300 200 L
200 200 L
200 100 L
300 100 L
n
400 100 m
400 200 L
300 200 L
300 100 L
400 100 L
n
100 0 m
100 100 L
0 100 L
0 0 L
100 0 L
n
500 0 m
500 100 L
400 100 L
400 0 L
500 0 L
n
200 0 m
200 100 L
100 100 L
100 0 L
200 0 L
n
300 0 m
300 100 L
200 100 L
200 0 L
300 0 L
n
400 0 m
400 100 L
300 100 L
300 0 L
400 0 L
n
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
0 Ap
0 O
0 g
151.8 408.2 m
168.0415 408.2 179.4029 417.6077 188.7881 442.8332 C
184.2881 444.6332 L
175.508 421.0341 165.9432 413 151.8 413 c
134.0678 413 126.6 420.8339 126.6 446.8 c
126.6 461.2521 127.3249 477.1911 128.6 490.8 C
123.6 490.8 L
122.2992 476.9179 121.6 461.175 121.6 446.8 c
121.6 418.348 130.9335 408.2 151.8 408.2 c
f
66.5947 449.1108 m
59.5781 452.0327 51.7125 453.8 44.4 453.8 c
25.8278 453.8 16 444.8328 16 433.2 c
16 417.2137 27.3007 408.2 52.8 408.2 c
60.4946 408.2 67.9413 408.866 76.6 410.4 C
75.9 415.2 L
67.4063 413.6953 60.1924 413 52.8 413 c
29.9908 413 21 420.1381 21 433.2 c
21 442.4458 29.1764 449 44.4 449 c
54.7126 449 64.3062 446.1688 72.9 440.5 C
76.8 443.6 L
68.1445 454.3008 64.1507 462.1653 62.2463 475.2 C
89.8 475.2 L
89.8 480 L
61.6613 480 L
61.2515 484.055 60.9819 488.589 60.8 493.8 C
55.8 493.8 L
55.9794 488.6627 56.2672 484.1086 56.6941 480 C
10.2 480 L
10.2 475.2 L
57.29 475.2 L
58.8664 464.3208 61.7157 456.7026 66.5947 449.1108 C
f
431.2 432.4 m
431.2 418.5986 442.5585 409.2 460.8 409.2 c
464.6333 409.2 469.275 409.5 473.4 410.2 C
472.8 415 L
469.3084 414.4075 464.8056 414 460.8 414 c
445.1044 414 436.2 421.2679 436.2 432.4 c
436.2 442.7818 446.4334 452.4 459.4 452.4 C
491.8 452.4 L
491.8 457.2 L
437.4372 457.2 L
450.8259 465.7213 463.7919 474.9178 475.4 484 C
475.4 489.8 L
427 489.8 L
427 485 L
468.867 485 L
456.0402 475.1688 442.196 465.6088 428.4823 457.2 C
408.2 457.2 L
408.2 452.4 L
443.7125 452.4 L
435.2632 446.8911 431.2 439.9662 431.2 432.4 c
f
324 433.8 m
324 415.4926 329.9004 410.2 354.6 410.2 c
364.1633 410.2 372.0567 411.0172 380 412.8 C
379.2 417.6 L
371.5474 415.8824 363.7868 415 354.6 415 c
333.1006 415 329 418.9307 329 433.8 C
329 468.8 L
371 468.8 L
371 449.5 L
371.1905 442.7969 370.1395 441.8 364.2 441.8 c
359.2561 441.8 353.5875 443.1875 349.2 445.5 C
347.2 441 L
351.975 438.4375 358.0625 437 364.2 437 c
372.9306 437 376 440.1353 376 449.5 C
376 468.8 L
392.8 468.8 L
392.8 473.6 L
376 473.6 L
376 493.8 L
371 493.8 L
371 473.6 L
329 473.6 L
329 491.8 L
324 491.8 L
324 473.6 L
307.2 473.6 L
307.2 468.8 L
324 468.8 L
324 433.8 L
f
*u
1 D
258.8 460.8371 m
255.2206 464.9705 250.303 467.2 244.6 467.2 c
233.9458 467.2 225.6 459.0299 225.6 448.6 c
225.6 438.1701 233.9458 430 244.6 430 c
250.9136 430 256.7804 433.2931 260.3287 438.1203 C
259.5584 422.3062 252.1161 414.6218 233 411.2 C
234 406.8 L
255.4691 410.0675 265 420.4818 265 441 c
265 444.6617 264.5802 447.986 263.8 450.9453 C
263.8 476.8 L
293.8 476.8 L
293.8 481.6 L
263.8 481.6 L
263.8 494.8 L
258.8 494.8 L
258.8 481.6 L
206.2 481.6 L
206.2 476.8 L
258.8 476.8 L
258.8 460.8371 L
f
0 D
244.6 434.8 m
236.372 434.8 230.4 440.6037 230.4 448.6 c
230.4 456.5962 236.372 462.4 244.6 462.4 c
252.8093 462.4 258.8 456.4673 258.8 448.6 c
258.8 440.7327 252.8093 434.8 244.6 434.8 c
f
*U
151.8 308.1 m
168.1542 308.1 180.0522 318.0807 189.0881 343.6332 C
182.3881 345.9332 L
174.2775 323.1667 164.978 315.2 151.8 315.2 c
135.2551 315.2 128.1 322.5913 128.1 346.8 c
128.1 360.662 128.978 376.9871 130.4 391.1 C
122.9 391.1 L
121.4401 376.9355 120.6 360.875 120.6 346.8 c
120.6 318.7233 130.4891 308.1 151.8 308.1 c
f
151.8 208 m
168.267 208 180.7015 218.5538 189.3881 244.4332 C
180.4881 247.2332 L
173.047 225.2994 164.0128 217.4 151.8 217.4 c
136.4424 217.4 129.6 224.3488 129.6 246.8 c
129.6 260.072 130.6312 276.783 132.2 291.4 C
122.2 291.4 L
120.5811 276.9531 119.6 260.575 119.6 246.8 c
119.6 219.0985 130.0447 208 151.8 208 c
f
151.8 107.9 m
168.3798 107.9 181.3507 119.0269 189.6881 145.2332 C
178.5881 148.5332 L
171.8165 127.4321 163.0475 119.6 151.8 119.6 c
137.6296 119.6 131.1 126.1061 131.1 146.8 c
131.1 159.4819 132.2844 176.579 134 191.7 C
121.5 191.7 L
119.722 176.9708 118.6 160.275 118.6 146.8 c
118.6 119.4738 129.6002 107.9 151.8 107.9 c
f
151.8 21.8 m
138.8169 21.8 132.6 27.8636 132.6 46.8 c
132.6 58.8918 133.9375 76.375 135.8 92 C
120.8 92 L
118.863 76.9884 117.6 59.975 117.6 46.8 c
117.6 19.849 129.1558 7.8 151.8 7.8 c
168.4925 7.8 182 19.5 189.9881 46.0332 C
176.6881 49.8332 L
170.586 29.5647 162.0823 21.8 151.8 21.8 c
f
63.6526 351.2783 m
57.357 353.436 50.5875 354.7 44.4 354.7 c
25.9528 354.7 15.6 345.2161 15.6 333.5 c
15.6 317.3721 27.0785 308.1 52.8 308.1 c
60.3072 308.1 68.0567 308.8333 76.9 310.4 C
75.9 317.2 L
67.3709 315.689 59.889 314.9 52.8 314.9 c
31.3015 314.9 23.1 321.3869 23.1 333.5 c
23.1 341.707 30.7204 347.9 44.4 347.9 c
53.8667 347.9 63.6337 345.1366 71.7 340 C
77.4 344.5 L
69.1633 354.683 65.183 362.0035 63.1995 373.8 C
89.9 373.8 L
89.9 380.6 L
62.3147 380.6 L
61.9307 384.5032 61.6755 388.8746 61.5 393.9 C
54.2 393.9 L
54.3728 388.9521 54.6411 384.5671 55.0293 380.6 C
10.1 380.6 L
10.1 373.8 L
55.878 373.8 L
57.3178 364.6281 59.7313 357.8775 63.6526 351.2783 C
f
60.9955 253.102 m
55.4235 254.6882 49.6379 255.6 44.4 255.6 c
26.0779 255.6 15.2 245.5994 15.2 233.8 c
15.2 217.5305 26.8564 208 52.8 208 c
60.1197 208 68.1722 208.8006 77.2 210.4 C
75.9 219.2 L
67.3356 217.6827 59.5856 216.8 52.8 216.8 c
32.6121 216.8 25.2 222.6357 25.2 233.8 c
25.2 240.9681 32.2644 246.8 44.4 246.8 c
53.0207 246.8 62.9611 244.1045 70.5 239.5 C
78 245.4 L
70.2097 255.0312 66.2592 261.8361 64.1982 272.4 C
90 272.4 L
90 281.2 L
62.9678 281.2 L
62.6091 284.9522 62.3689 289.1635 62.2 294 C
52.6 294 L
52.7659 289.2474 53.0135 285.0248 53.3657 281.2 C
10 281.2 L
10 272.4 L
54.4884 272.4 L
55.7969 264.7264 57.8425 258.8043 60.9955 253.102 C
f
58.5112 154.7121 m
53.6775 155.8554 48.7987 156.5 44.4 156.5 c
26.2029 156.5 14.8 145.9828 14.8 134.1 c
14.8 117.6889 26.6342 107.9 52.8 107.9 c
59.9323 107.9 68.2876 108.7679 77.5 110.4 C
75.9 121.2 L
67.3002 119.6765 59.2821 118.7 52.8 118.7 c
33.9228 118.7 27.3 123.8845 27.3 134.1 c
27.3 140.2293 33.8085 145.7 44.4 145.7 c
52.1748 145.7 62.2886 143.0723 69.3 139 C
78.6 146.3 L
71.2879 155.3398 67.388 161.6521 65.2537 171 C
90.1 171 L
90.1 181.8 L
63.6253 181.8 L
63.2905 185.4051 63.0624 189.4501 62.9 194.1 C
51 194.1 L
51.159 189.5464 51.3858 185.4822 51.7048 181.8 C
9.9 181.8 L
9.9 171 L
53.1131 171 L
54.2865 164.6753 56.0034 159.5749 58.5112 154.7121 C
f
63.6 94.2 m
49.4 94.2 L
49.5522 89.8397 49.7642 85.9449 50.0535 82.4 C
9.8 82.4 L
9.8 69.6 L
51.7524 69.6 L
52.7834 64.5012 54.207 60.2228 56.1639 56.1583 C
52.0765 56.9571 48.0413 57.4 44.4 57.4 c
26.328 57.4 14.4 46.3661 14.4 34.4 c
14.4 17.8473 26.412 7.8 52.8 7.8 c
59.7449 7.8 68.403 8.7352 77.8 10.4 C
75.9 23.2 L
67.2649 21.6702 58.9787 20.6 52.8 20.6 c
35.2335 20.6 29.4 25.1334 29.4 34.4 c
29.4 39.4905 35.3525 44.6 44.4 44.6 c
51.3289 44.6 61.6161 42.0402 68.1 38.5 C
79.2 47.2 L
72.4031 55.603 68.5783 61.4382 66.3788 69.6 C
90.2 69.6 L
90.2 82.4 L
64.2836 82.4 L
63.972 85.8594 63.7557 89.7385 63.6 94.2 C
f
430.6 332.5 m
430.6 318.657 442.0835 309.1 460.8 309.1 c
464.6333 309.1 469.475 309.4 473.6 310.1 C
472.8 316.9 L
469.3751 316.3188 464.7761 315.9 460.8 315.9 c
446.1116 315.9 438.2 322.4088 438.2 332.5 c
438.2 342.0993 447.8773 351 460.3999 351 C
491.9 351 L
491.9 357.9 L
440.6448 357.9 L
453.1054 365.816 465.2716 374.2385 476 382.4 C
476 390 L
426.6 390 L
426.6 383.2 L
465.7842 383.2 L
453.7357 374.2574 441.1721 365.7001 428.617 357.9 C
408.1 357.9 L
408.1 351 L
441.2869 351 L
434.0521 345.5326 430.6 339.1546 430.6 332.5 c
f
430 232.6 m
430 218.7154 441.6084 209 460.8 209 c
464.6333 209 469.675 209.3 473.8 210 C
472.8 218.8 L
469.4418 218.2301 464.7465 217.8 460.8 217.8 c
447.1189 217.8 440.2 223.5497 440.2 232.6 c
440.2 241.4168 449.3211 249.6 461.3999 249.6 C
492 249.6 L
492 258.6 L
443.9368 258.6 L
455.472 265.8857 466.757 273.5254 476.6 280.8 C
476.6 290.2 L
426.2 290.2 L
426.2 281.4 L
462.5643 281.4 L
451.4321 273.3732 440.1233 265.7551 428.7419 258.6 C
408 258.6 L
408 249.6 L
439.1625 249.6 L
432.9606 244.3085 430 238.4718 430 232.6 c
f
429.4 132.7 m
429.4 118.7738 441.1334 108.9 460.8 108.9 c
464.6333 108.9 469.875 109.2 474 109.9 C
472.8 120.7 L
469.5085 120.1414 464.717 119.7 460.8 119.7 c
448.1261 119.7 442.2 124.6906 442.2 132.7 c
442.2 140.7343 450.765 148.2 462.3999 148.2 C
492.1 148.2 L
492.1 159.3 L
447.3027 159.3 L
457.9002 165.932 468.2442 172.7754 477.2 179.2 C
477.2 190.4 L
425.8 190.4 L
425.8 179.6 L
459.2471 179.6 L
449.1398 172.4988 439.0544 165.7792 428.8575 159.3 C
407.9 159.3 L
407.9 148.2 L
437.2096 148.2 L
431.9231 143.1808 429.4 137.8777 429.4 132.7 c
f
463.3998 46.8 m
492.2 46.8 L
492.2 60 L
450.771 60 L
460.3956 65.9509 469.7392 71.9924 477.8 77.6 C
477.8 90.6 L
425.4 90.6 L
425.4 77.8 L
455.8055 77.8 L
446.8213 71.6316 437.9524 65.7662 428.9633 60 C
407.8 60 L
407.8 46.8 L
435.3901 46.8 L
430.9305 42.1246 428.8 37.3502 428.8 32.8 c
428.8 18.8322 440.6584 8.8 460.8 8.8 c
464.6333 8.8 470.075 9.1 474.2 9.8 C
472.8 22.6 L
469.5752 22.0527 464.6875 21.6 460.8 21.6 c
449.1334 21.6 444.2 25.8315 444.2 32.8 c
444.2 40.0518 452.2089 46.8 463.3998 46.8 C
f
323.4 333.7 m
323.4 315.6844 329.5255 310.1 354.6 310.1 c
364.1633 310.1 372.2567 310.9172 380.2 312.7 C
379.1 319.6 L
371.597 317.916 363.6334 317 354.6 317 c
334.0338 317 330.6 320.3747 330.6 333.7 C
330.6 367.5 L
369.5 367.5 L
369.5 350.8 L
369.6429 344.602 368.8048 343.8 363.6 343.8 c
359.3171 343.8 353.4719 345.0469 349.4 347 C
347.2 340.4 L
352.1844 338.0781 358.6625 336.7 364.8 336.7 c
373.4055 336.7 376.6 340.0437 376.6 349.2 C
376.6 367.5 L
392.9 367.5 L
392.9 374.4 L
376.6 374.4 L
376.6 393.9 L
369.5 393.9 L
369.5 374.4 L
330.6 374.4 L
330.6 391.9 L
323.4 391.9 L
323.4 374.4 L
307.1 374.4 L
307.1 367.5 L
323.4 367.5 L
323.4 333.7 L
f
322.8 233.6 m
322.8 215.8762 329.1506 210 354.6 210 c
364.1633 210 372.4567 210.8172 380.4 212.6 C
379 221.6 L
371.6466 219.9496 363.4801 219 354.6 219 c
334.967 219 332.2 221.8187 332.2 233.6 C
332.2 266.2 L
368 266.2 L
368 252.1 L
368.0952 246.407 367.47 245.8 363 245.8 c
359.378 245.8 353.3562 246.9062 349.6 248.5 C
347.2 239.8 L
352.3937 237.7187 359.2625 236.4 365.4 236.4 c
373.8804 236.4 377.2 239.952 377.2 248.9 C
377.2 266.2 L
393 266.2 L
393 275.2 L
377.2 275.2 L
377.2 294 L
368 294 L
368 275.2 L
332.2 275.2 L
332.2 292 L
322.8 292 L
322.8 275.2 L
307 275.2 L
307 266.2 L
322.8 266.2 L
322.8 233.6 L
f
322.2 133.5 m
322.2 116.068 328.7757 109.9 354.6 109.9 c
364.1633 109.9 372.6567 110.7172 380.6 112.5 C
378.9 123.6 L
371.6962 121.9832 363.3268 121 354.6 121 c
335.9002 121 333.8 123.2627 333.8 133.5 C
333.8 164.9 L
366.5 164.9 L
366.5 153.4 L
366.5476 148.2121 366.1353 147.8 362.4 147.8 c
359.439 147.8 353.2406 148.7656 349.8 150 C
347.2 139.2 L
352.6031 137.3594 359.8625 136.1 366 136.1 c
374.3553 136.1 377.8 139.8604 377.8 148.6 C
377.8 164.9 L
393.1 164.9 L
393.1 176 L
377.8 176 L
377.8 194.1 L
366.5 194.1 L
366.5 176 L
333.8 176 L
333.8 192.1 L
322.2 192.1 L
322.2 176 L
306.9 176 L
306.9 164.9 L
322.2 164.9 L
322.2 133.5 L
f
378.4 94.2 m
365 94.2 L
365 76.8 L
335.4 76.8 L
335.4 92.2 L
321.6 92.2 L
321.6 76.8 L
306.8 76.8 L
306.8 63.6 L
321.6 63.6 L
321.6 33.4 L
321.6 16.2598 328.4008 9.8 354.6 9.8 c
364.1633 9.8 372.8567 10.6172 380.8 12.4 C
378.8 25.6 L
371.7458 24.0167 363.1735 23 354.6 23 c
336.8334 23 335.4 24.7067 335.4 33.4 C
335.4 63.6 L
365 63.6 L
365 54.7 L
365 50.0172 364.8006 49.8 361.8 49.8 c
359.5 49.8 353.125 50.625 350 51.5 C
347.2 38.6 L
352.8125 37 360.4625 35.8 366.6 35.8 c
374.8302 35.8 378.4 39.7688 378.4 48.3 C
378.4 63.6 L
393.2 63.6 L
393.2 76.8 L
378.4 76.8 L
378.4 94.2 L
f
*u
1 D
257.7 362.928 m
254.1893 365.9619 249.7482 367.6 244.7 367.6 c
233.3063 367.6 224.6 359.1474 224.6 348.4 c
224.6 337.5275 233.4313 329.2 244.7 329.2 c
250.118 329.2 255.3026 331.6215 259.0776 335.2779 C
257.6931 322.3439 250.7069 316.2769 232.4 313 C
233.95 306.7 L
256.5244 310.1358 266.1 320.4022 266.1 340.8 c
266.1 344.2561 265.7147 347.4271 265 350.2902 C
265 375.7 L
293.9 375.7 L
293.9 382.4 L
265 382.4 L
265 395 L
257.7 395 L
257.7 382.4 L
206.1 382.4 L
206.1 375.7 L
257.7 375.7 L
257.7 362.928 L
f
0 D
244.7 335.7 m
237.1403 335.7 231.7 341.0397 231.7 348.4 c
231.7 355.6769 237.057 361.1 244.7 361.1 c
252.2639 361.1 257.7 355.6828 257.7 348.4 c
257.7 341.2422 252.3056 335.7 244.7 335.7 c
f
*U
*u
1 D
256.6 264.5533 m
253.26 266.7917 249.2643 268 244.8 268 c
232.6668 268 223.6 259.2649 223.6 248.2 c
223.6 236.885 232.9168 228.4 244.8 228.4 c
249.4734 228.4 254.0297 230.1983 257.7313 232.9944 C
255.9051 222.6455 249.2346 217.9208 231.8 214.8 C
233.9 206.6 L
257.5798 210.204 267.2 220.3226 267.2 240.6 c
267.2 243.858 266.8517 246.8796 266.2 249.6396 C
266.2 274.6 L
294 274.6 L
294 283.2 L
266.2 283.2 L
266.2 295.2 L
256.6 295.2 L
256.6 283.2 L
206 283.2 L
206 274.6 L
256.6 274.6 L
256.6 264.5533 L
f
0 D
244.8 236.6 m
237.9087 236.6 233 241.4757 233 248.2 c
233 254.7576 237.742 259.8 244.8 259.8 c
251.7184 259.8 256.6 254.8983 256.6 248.2 c
256.6 241.7517 251.8018 236.6 244.8 236.6 c
f
*U
*u
1 D
255.5 165.8796 m
252.3951 167.5207 248.8246 168.4 244.9 168.4 c
232.0273 168.4 222.6 159.3824 222.6 148 c
222.6 136.2425 232.4023 127.6 244.9 127.6 c
248.8763 127.6 252.8064 128.8924 256.2427 130.9753 C
254.0143 123.0962 247.5074 119.5189 231.2 116.6 C
233.85 106.5 L
258.6351 110.2722 268.3 120.243 268.3 140.4 c
268.3 143.4552 267.9872 146.3159 267.4 148.9586 C
267.4 173.5 L
294.1 173.5 L
294.1 184 L
267.4 184 L
267.4 195.4 L
255.5 195.4 L
255.5 184 L
205.9 184 L
205.9 173.5 L
255.5 173.5 L
255.5 165.8796 L
f
0 D
244.9 137.5 m
238.677 137.5 234.3 141.9118 234.3 148 c
234.3 153.8383 238.427 158.5 244.9 158.5 c
251.173 158.5 255.5 154.1138 255.5 148 c
255.5 142.2612 251.298 137.5 244.9 137.5 c
f
*U
*u
1 D
268.6 95.6 m
254.4 95.6 L
254.4 84.8 L
205.8 84.8 L
205.8 72.4 L
254.4 72.4 L
254.4 66.973 L
251.5715 68.1605 248.4196 68.8 245 68.8 c
231.3878 68.8 221.6 59.5 221.6 47.8 c
221.6 35.6 231.8878 26.8 245 26.8 c
248.2238 26.8 251.4361 27.6486 254.4083 29.0644 C
251.704 23.6267 245.2417 21.0209 230.6 18.4 C
233.8 6.4 L
259.6904 10.3404 269.4 20.1633 269.4 40.2 c
269.4 43.0472 269.1217 45.7358 268.6 48.2468 C
268.6 72.4 L
294.2 72.4 L
294.2 84.8 L
268.6 84.8 L
268.6 95.6 L
f
0 D
245 38.4 m
239.4454 38.4 235.6 42.3478 235.6 47.8 c
235.6 52.919 239.112 57.2 245 57.2 c
250.6275 57.2 254.4 53.3293 254.4 47.8 c
254.4 42.7707 250.7943 38.4 245 38.4 c
f
*U
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
