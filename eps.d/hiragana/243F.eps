%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(TM) 7.0
%%For: (coz) (underforest)
%%Title: (243F.eps)
%%CreationDate: (2/6/04) (9:35 AM)
%%BoundingBox: 0 0 500 500
%%HiResBoundingBox: 0 0 500 500
%%DocumentProcessColors: Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_ColorImage_AI6 1.1 0
%%+ procset Adobe_Illustrator_AI5 1.2 0
%%+ procset Adobe_cshow 2.0 8
%AI5_FileFormat 3
%AI3_ColorUsage: Black&White
%AI3_IncludePlacedImages
%AI7_ImageSettings: 1
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 8.5 0 0 0 0 0 0 0 0 -1 -1
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () 
%AI3_TemplateBox: 244.5 256.5 244.5 256.5
%AI3_TileBox: -41.5 -119.5 534.5 642.5
%AI3_DocumentPreview: Macintosh_ColorPic
%AI5_ArtSize: 592 840
%AI5_RulerUnits: 2
%AI5_ArtFlags: 1 0 0 1 0 0 1 1 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI5_OpenToView: -139.5 520.5 1 794 556 25 0 0 3 40 0 0
%AI5_OpenViewLayers: 5
%%PageOrigin:-41.5 -119.5
%%AI3_PaperRect:-10 808 585 -34
%%AI3_Margin:10 -43 -9 34
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 25 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			0
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			1
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop 
			0 eq
			{
				pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				pop
				3
				{
					1 exch sub
					3 index mul 
					1 exch sub
					3 1 roll
				} repeat
				4 -1 roll pop
				setrgbcolor
			} ifelse
		}
		def
	} if
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	level2?
	{
		gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
		add add add 4 eq
	}
	{
		1 0 0 0 testCMYKColorThrough
		0 1 0 0 testCMYKColorThrough
		0 0 1 0 testCMYKColorThrough
		0 0 0 1 testCMYKColorThrough
		and and and
	} ifelse
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.1 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 24 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize
{ 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6
	{
		dup type /arraytype eq
		{
			dup xcheck
			{
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not
{
	/Adobe_ColorImage_AI6_Vars 15 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/channelcount 0 def
	/sourcecount 0 def
	/sourcearray 4 array def
	/plateindex -1 def
	/XIMask 0 def
	/XIBinary 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIBuffer null def
	/XIDataProc null def
	/XIVersion 6 def
end
/WalkRGBString null def
/WalkCMYKString null def
/StuffRGBIntoGrayString null def
/RGBToGrayImageProc null def
/StuffCMYKIntoGrayString null def
/CMYKToGrayImageProc null def
/ColorImageCompositeEmulator null def
/SeparateCMYKImageProc null def
/FourEqual null def
/TestPlateIndex null def
currentdict /_colorimage known not
{
	/colorimage where
	{
		/colorimage get /_colorimage exch def
	}
	{
		/_colorimage null def
	} ifelse
} if
/_currenttransfer systemdict /currenttransfer get def
/colorimage null def
/XI null def
/WalkRGBString
{
	0 3 index
	dup length 1 sub 0 3 3 -1 roll
	{
		3 getinterval { } forall
		5 index exec
		3 index
	} for
	
	 5 { pop } repeat
} def
/WalkCMYKString
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll
	{
		4 getinterval { } forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/StuffRGBIntoGrayString
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/RGBToGrayImageProc
{	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		dup length 3 idiv string
		dup 3 1 roll 
		
		/StuffRGBIntoGrayString load exch
		WalkRGBString
 end
} def
/StuffCMYKIntoGrayString
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/CMYKToGrayImageProc
{	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		dup length 4 idiv string
		dup 3 1 roll 
		
		/StuffCMYKIntoGrayString load exch
		WalkCMYKString
 end
} def
/ColorImageCompositeEmulator
{
	pop true eq
	{
		Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat
	}
	{
		Adobe_ColorImage_AI6_Vars /channelcount get 1 ne
		{
			Adobe_ColorImage_AI6_Vars begin
				sourcearray 0 3 -1 roll put
			
				channelcount 3 eq 
				{ 
					/RGBToGrayImageProc 
				}
				{ 
					/CMYKToGrayImageProc
				} ifelse
				load
		 end
		} if
		image
	} ifelse
} def
/SeparateCMYKImageProc
{	
	Adobe_ColorImage_AI6_Vars begin
		sourcecount 0 ne
		{
			sourcearray plateindex get exec
		}
		{			
			sourcearray 0 get exec
			
			dup length 4 idiv string
			
			0 2 index
			
			plateindex 4 2 index length 1 sub
			{
				get 255 exch sub
				
				3 copy put pop 1 add
				
				2 index
			} for
			pop pop exch pop
		} ifelse
 end
} def
	
/FourEqual
{
	4 index ne
	{
		pop pop pop false
	}
	{
		4 index ne
		{
			pop pop false
		}
		{
			4 index ne
			{
				pop false
			}
			{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/TestPlateIndex
{
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where
		{
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 FourEqual 
			{ 
				/plateindex 0 def
			}
			{
				0 1 0 0 FourEqual
				{ 
					/plateindex 1 def
				}
				{
					0 0 1 0 FourEqual
					{
						/plateindex 2 def
					}
					{
						0 0 0 1 FourEqual
						{ 
							/plateindex 3 def
						}
						{
							0 0 0 0 FourEqual
							{
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/colorimage
{
	Adobe_ColorImage_AI6_Vars begin
		/channelcount 1 index def
		/sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def
		4 sourcecount add index dup 
		8 eq exch 1 eq or not
 end
	
	{
		/_colorimage load null ne
		{
			_colorimage
		}
		{
			Adobe_ColorImage_AI6_Vars /sourcecount get
			7 add { pop } repeat
		} ifelse
	}
	{
		dup 3 eq
		TestPlateIndex
		dup -1 eq exch 5 eq or or
		{
			/_colorimage load null eq
			{
				ColorImageCompositeEmulator
			}
			{
				dup 1 eq
				{
					pop pop image
				}
				{
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
					{
						gsave
						
						0 _currenttransfer exec
						1 _currenttransfer exec
						eq
						{ 0 _currenttransfer exec 0.5 lt }
						{ 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse
						
						{ { pop 0 } } { { pop 1 } } ifelse
						systemdict /settransfer get exec
					} if
					
					_colorimage
					
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
					{
						grestore
					} if
				} ifelse
			} ifelse
		}
		{
			dup 1 eq
			{
				pop pop
				image
			}
			{
				pop pop
				Adobe_ColorImage_AI6_Vars begin
					sourcecount -1 0
					{			
						exch sourcearray 3 1 roll put
					} for
					/SeparateCMYKImageProc load
			 end
				systemdict /image get exec
			} ifelse
		} ifelse
	} ifelse
} def
/XG
{
	pop pop
} def
/XF
{
	13 {pop} repeat
} def
/Xh
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIMask exch 0 ne def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		XIMask
		{
			/_lp /null ddef
			_fc
			/_lp /imagemask ddef
		}
		if
		/XIVersion 7 def
 end
} def
/XH
{
	Adobe_ColorImage_AI6_Vars begin
		/XIVersion 6 def
		grestore
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIMask exch 0 ne def
		/XIBinary exch 0 ne def
		pop
		pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq
		{
			XIImageWidth 8 div ceiling cvi
		}
		{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIBuffer exch string def
		XIBinary
		{
			/XIDataProc { currentfile XIBuffer readstring pop } def
			XIVersion 6 le
			{
				currentfile 128 string readline pop pop
			}
			if
		}
		{
			/XIDataProc { currentfile XIBuffer readhexstring pop } def
		} ifelse
		
		XIVersion 6 le
		{
			0 0 moveto
			XIImageMatrix concat
			XIImageWidth XIImageHeight scale
			XIMask
			{
				/_lp /null ddef
				_fc
				/_lp /imagemask ddef
			} if
		} if
		
		XIMask
		{
			XIImageWidth XIImageHeight
			false
			[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
			/XIDataProc load
			imagemask
		}
		{
			XIImageWidth XIImageHeight
			XIBitsPerPixel
			[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
			/XIDataProc load
			
			XIChannelCount 1 eq
			{
				gsave
				0 setgray
				image
				grestore
			}
			{
				false
				XIChannelCount
				colorimage
			} ifelse
		} ifelse
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 7.0 Full Prolog)
%%Version: 1.2 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 107 dict dup begin
put
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XA
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/_rgbtocmyk
{
3
	{
	1 exch sub 3 1 roll
	} repeat
3 copy 1 4 1 roll
3
	{
	3 index 2 copy gt
		{
		exch
		} if
	pop 4 1 roll
	} repeat
pop pop pop
4 1 roll
3
	{
	3 index sub
	3 1 roll
	} repeat
4 -1 roll
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq
	{
		findcmykcustomcolor
	}
	{
		/findrgbcustomcolor where not {
			4 1 roll _rgbtocmyk
			5 -1 roll
			findcmykcustomcolor
		}
		{
			pop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq
	{
		findcmykcustomcolor
	}
	{
		/findrgbcustomcolor where not {
			4 1 roll _rgbtocmyk
			5 -1 roll
			findcmykcustomcolor
		}
		{
			pop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%EndProlog
%%BeginSetup
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_BeginPalette
0 0 Pb
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 0 1 1 0 0 3 79 79 255 Lb
(glyphs) Ln
0 A
u
1 Ap
800 Ar
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
0 XR
100 400 m
100 500 L
0 500 L
0 400 L
100 400 L
n
500 400 m
500 500 L
400 500 L
400 400 L
500 400 L
n
200 400 m
200 500 L
100 500 L
100 400 L
200 400 L
n
300 400 m
300 500 L
200 500 L
200 400 L
300 400 L
n
400 400 m
400 500 L
300 500 L
300 400 L
400 400 L
n
100 300 m
100 400 L
0 400 L
0 300 L
100 300 L
n
500 300 m
500 400 L
400 400 L
400 300 L
500 300 L
n
200 300 m
200 400 L
100 400 L
100 300 L
200 300 L
n
300 300 m
300 400 L
200 400 L
200 300 L
300 300 L
n
400 300 m
400 400 L
300 400 L
300 300 L
400 300 L
n
100 200 m
100 300 L
0 300 L
0 200 L
100 200 L
n
500 200 m
500 300 L
400 300 L
400 200 L
500 200 L
n
200 200 m
200 300 L
100 300 L
100 200 L
200 200 L
n
300 200 m
300 300 L
200 300 L
200 200 L
300 200 L
n
400 200 m
400 300 L
300 300 L
300 200 L
400 200 L
n
100 100 m
100 200 L
0 200 L
0 100 L
100 100 L
n
500 100 m
500 200 L
400 200 L
400 100 L
500 100 L
n
200 100 m
200 200 L
100 200 L
100 100 L
200 100 L
n
300 100 m
300 200 L
200 200 L
200 100 L
300 100 L
n
400 100 m
400 200 L
300 200 L
300 100 L
400 100 L
n
100 0 m
100 100 L
0 100 L
0 0 L
100 0 L
n
500 0 m
500 100 L
400 100 L
400 0 L
500 0 L
n
200 0 m
200 100 L
100 100 L
100 0 L
200 0 L
n
300 0 m
300 100 L
200 100 L
200 0 L
300 0 L
n
400 0 m
400 100 L
300 100 L
300 0 L
400 0 L
n
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
0 Ap
0 O
0 g
330.8 444 m
330.8 422.4565 343.8698 410.2 363.8 410.2 c
367.175 410.2 369.8848 410.3929 373.2 410.8 C
372.8 415.8 L
369.3668 415.3784 366.6922 415.2 363.8 415.2 c
345.9265 415.2 336 425.5581 336 444 c
336 463.9118 353.3196 480.8 376.6 480.8 C
389.8 480.8 L
389.8 485.8 L
310.2 485.8 L
310.2 480.8 L
356.3724 480.8 L
340.1466 473.2218 330.8 459.1389 330.8 444 c
f
253 477.6 m
272.499 477.6 285.4 467.6336 285.4 452.8 c
285.4 429.957 270.2631 418.4 227.6 418.4 C
227.6 413.2 L
272.8645 413.2 290.8 426.3465 290.8 452.8 c
290.8 469.9444 276.208 482.8 253 482.8 c
238.0287 482.8 222.6935 479.9111 209.2 474.8 C
211 469.8 L
224.0455 474.7415 238.9885 477.6 253 477.6 c
f
253 375.8 m
271.2467 375.8 283 366.3686 283 352.8 c
283 335.715 274.8538 320.4 227.3 320.4 C
227.5 313 L
272.9033 313 290.9 326.3605 290.9 352.8 c
290.9 370.0277 276.1801 383.2 253 383.2 c
237.9491 383.2 222.4202 380.2834 209 375.2 C
211.5 368 L
224.5227 372.9328 239.4219 375.8 253 375.8 c
f
253 274 m
269.9943 274 280.6 265.1036 280.6 252.8 c
280.6 235.6405 270.9985 222.4 227 222.4 C
227.4 212.8 L
272.9421 212.8 291 226.3744 291 252.8 c
291 270.1111 276.1522 283.6 253 283.6 c
237.8695 283.6 222.1469 280.6556 208.8 275.6 C
212 266.2 L
224.9999 271.1242 239.8554 274 253 274 c
f
253 172.2 m
268.7419 172.2 278.2 163.8385 278.2 152.8 c
278.2 135.5661 267.1432 124.4 226.7 124.4 C
227.3 112.6 L
272.9808 112.6 291.1 126.3884 291.1 152.8 c
291.1 170.1944 276.1242 184 253 184 c
237.79 184 221.8736 181.0278 208.6 176 C
212.5 164.4 L
225.477 169.3155 240.2889 172.2 253 172.2 c
f
253 84.4 m
237.7104 84.4 221.6003 81.4001 208.4 76.4 C
213 62.6 L
225.9542 67.5069 240.7224 70.4 253 70.4 c
267.4895 70.4 275.8 62.5735 275.8 52.8 c
275.8 35.4916 263.2879 26.4 226.4 26.4 C
227.2 12.4 L
273.0196 12.4 291.2 26.4024 291.2 52.8 c
291.2 70.2778 276.0963 84.4 253 84.4 c
f
118 439.2 m
122.5 436.9 L
129.6312 445.3572 141.4898 450.6 157 450.6 c
171.7987 450.6 178.6 444.6785 178.6 433 c
178.6 421.8708 167.6693 413 148.2 413 c
139.8215 413 132.3578 413.9785 125.5 416 C
124.2 411.4 L
131.4439 409.2647 139.2572 408.2 148.2 408.2 c
170.3657 408.2 183.6 419.1243 183.6 433 c
183.6 447.1898 174.4759 455.4 157 455.4 c
145.2623 455.4 135.1847 452.6023 127.405 447.6257 C
130.9825 456.3715 133.624 465.3717 135.5277 475.2 C
189.8 475.2 L
189.8 480 L
136.3861 480 L
137.1161 484.4111 137.7206 488.9876 138.2 493.8 C
133.2 493.8 L
132.7117 488.899 132.099 484.3336 131.3676 480 C
110.2 480 L
110.2 475.2 L
130.4891 475.2 L
127.8043 461.7193 123.7566 450.5402 118 439.2 C
f
117.9 339.7 m
124.6 336.9 L
131.6196 344.7359 142.358 349.3 157 349.3 c
170.6655 349.3 176.7 344.0696 176.7 333.3 c
176.7 323.186 166.3048 315 148.2 315 c
140.038 315 132.2998 316.0251 125.6 318 C
123.9 311.3 L
131.1439 309.1647 139.2572 308.1 148.2 308.1 c
170.5489 308.1 184.1 319.3827 184.1 333.3 c
184.1 347.5315 174.7008 356.2 157 356.2 c
146.9186 356.2 137.9163 353.9972 130.5507 350.0709 C
133.5458 357.6509 135.8289 365.3441 137.5517 373.6 C
189.9 373.6 L
189.9 380.4 L
138.8209 380.4 L
139.5375 384.7099 140.1301 389.1833 140.6 393.9 C
133.2 393.9 L
132.7213 389.0948 132.1244 384.6337 131.4095 380.4 C
110.1 380.4 L
110.1 373.6 L
130.1097 373.6 L
127.4647 361.2969 123.5514 350.8329 117.9 339.7 C
f
117.8 240.2 m
126.7 236.9 L
133.6081 244.1146 143.2261 248 157 248 c
169.5322 248 174.8 243.4607 174.8 233.6 c
174.8 224.5012 164.9403 217 148.2 217 c
140.2545 217 132.2418 218.0716 125.7 220 C
123.6 211.2 L
130.8439 209.0647 139.2572 208 148.2 208 c
170.7321 208 184.6 219.6412 184.6 233.6 c
184.6 247.8732 174.9258 257 157 257 c
148.3492 257 140.371 255.276 133.5347 252.1824 C
136.0235 258.6443 137.9968 265.1415 139.5407 272 C
190 272 L
190 280.8 L
141.2567 280.8 L
141.9595 285.0088 142.5397 289.3796 143 294 C
133.2 294 L
132.7308 289.2907 132.1498 284.9338 131.4515 280.8 C
110 280.8 L
110 272 L
129.7037 272 L
127.1011 260.8287 123.3072 251.0488 117.8 240.2 C
f
117.7 140.7 m
128.8 136.9 L
135.5965 143.4933 144.0943 146.7 157 146.7 c
168.399 146.7 172.9 142.8518 172.9 133.9 c
172.9 125.8164 163.5757 119 148.2 119 c
140.4711 119 132.1838 120.1182 125.8 122 C
123.3 111.1 L
130.5439 108.9647 139.2572 107.9 148.2 107.9 c
170.9152 107.9 185.1 119.8997 185.1 133.9 c
185.1 148.2149 175.1508 157.8 157 157.8 c
149.6342 157.8 142.6602 156.473 136.4488 154.071 C
138.478 159.4449 140.1342 164.8168 141.4908 170.4 C
190.1 170.4 L
190.1 181.2 L
143.6936 181.2 L
144.3822 185.3079 144.9494 189.5768 145.4 194.1 C
133.2 194.1 L
132.7404 189.4867 132.1752 185.234 131.4935 181.2 C
109.9 181.2 L
109.9 170.4 L
129.2332 170.4 L
126.676 160.3158 123.0171 151.1745 117.7 140.7 C
f
147.8 94.2 m
133.2 94.2 L
132.7499 89.6828 132.2006 85.5341 131.5355 81.6 C
109.8 81.6 L
109.8 68.8 L
128.7194 68.8 L
126.2114 59.7368 122.6843 51.2157 117.6 41.2 C
130.9 36.9 L
137.5849 42.872 144.9624 45.4 157 45.4 c
167.2657 45.4 171 42.2429 171 34.2 c
171 27.1316 162.2112 21 148.2 21 c
140.6876 21 132.1258 22.1648 125.9 24 C
123 11 L
130.2439 8.8647 139.2572 7.8 148.2 7.8 c
171.0984 7.8 185.6 20.1581 185.6 34.2 c
185.6 48.5566 175.3757 58.6 157 58.6 c
150.7917 58.6 144.79 57.5973 139.2682 55.7688 C
140.874 60.087 142.2435 64.39 143.4003 68.8 C
190.2 68.8 L
190.2 81.6 L
146.1316 81.6 L
146.8055 85.6071 147.3591 89.7749 147.8 94.2 C
f
449 410.2 m
462.8333 410.2 471.9625 410.825 484.2 412.8 C
483.6 417.6 L
471.8391 415.7019 462.985 415 449 415 c
426.91 415 419.2 421.5003 419.2 433.4 c
419.2 445.3289 434.4641 456.8302 483.4 466.2 C
482.4 471 L
464.9383 467.6566 451.5581 464.0172 441.4533 460.1009 C
438.3879 470.4331 436.1305 480.5242 434.6 490.6 C
429.6 489.8 L
431.2541 478.9105 433.7287 468.4423 436.8071 458.1791 C
420.162 450.8186 414.2 442.5277 414.2 433.4 c
414.2 418.434 424.2365 410.2 449 410.2 c
f
449 310.1 m
462.9271 310.1 472.2563 310.7401 484.4 312.7 C
483.5 319.6 L
471.8224 317.7153 462.8127 317 449 317 c
428.5575 317 421.5 322.9249 421.5 333.8 c
421.5 344.7572 437.0827 356.4167 484 365.4 C
482.6 372.3 L
465.6757 369.0594 452.5208 365.4481 442.4468 361.532 C
439.5901 371.3491 437.385 381.3234 435.9 391.1 C
428.5 389.9 L
430.1059 379.3272 432.5801 368.7544 435.5892 358.6086 C
419.8835 351.1868 414 342.7916 414 333.8 c
414 318.6673 424.4865 310.1 449 310.1 c
f
449 210 m
463.0209 210 472.5501 210.6553 484.6 212.6 C
483.4 221.6 L
471.8057 219.7288 462.6404 219 449 219 c
430.205 219 423.8 224.3496 423.8 234.2 c
423.8 244.1855 439.7014 256.0032 484.6 264.6 C
482.8 273.5999 L
466.4067 270.4611 453.4766 266.8857 443.4477 262.978 C
440.7843 272.3296 438.6366 282.142 437.2 291.6 C
427.4 290 L
428.9626 279.7125 431.4379 269.037 434.3923 258.9694 C
419.6058 251.4971 413.8 243.0399 413.8 234.2 c
413.8 218.9007 424.7366 210 449 210 c
f
449 109.9 m
463.1146 109.9 472.844 110.5704 484.8 112.5 C
483.3 123.6 L
471.789 121.7422 462.4681 121 449 121 c
431.8526 121 426.1 125.7742 426.1 134.6 c
426.1 143.6138 442.32 155.5897 485.2 163.8 C
483 174.8999 L
467.126 171.8605 454.4302 168.326 444.4595 164.4334 C
441.9724 173.368 439.8864 182.9728 438.5 192.1 C
426.3 190.1 L
427.8223 180.0782 430.2983 169.3066 433.2072 159.2921 C
419.2824 151.7762 413.6 143.2829 413.6 134.6 c
413.6 119.134 424.9866 109.9 449 109.9 c
f
449 23 m
433.5001 23 428.4 27.1989 428.4 35 c
428.4 43.0421 444.9387 55.1762 485.8 63 C
483.2 76.1999 L
467.8226 73.2555 455.3777 69.7615 445.4739 65.8868 C
443.1475 74.4456 441.1346 83.8131 439.8 92.6 C
425.2 90.2 L
426.6863 80.4149 429.1706 69.5457 432.046 59.5543 C
418.9516 52.0081 413.4 43.5145 413.4 35 c
413.4 19.3674 425.2367 9.8 449 9.8 c
463.2084 9.8 473.1378 10.4856 485 12.4 C
483.2 25.6 L
471.7723 23.7557 462.2958 23 449 23 c
f
11.8 409.4 m
19.2623 431.3159 24.9257 452.6716 29.276 475.2 C
70.8 475.2 L
70.8 480 L
30.1799 480 L
31.0377 484.6751 31.847 489.3993 32.6 494.2 C
27.6 494.8 L
26.8122 489.7771 25.9646 484.8544 25.0645 480 C
11.2 480 L
11.2 475.2 L
24.1501 475.2 L
19.7994 452.9221 14.1918 432.1214 7 411 C
11.8 409.4 L
f
44.8 425.8 m
44.8 429.5204 47.018 433.2711 52.6 437.1 C
49.6 440.8 L
42.5777 435.9832 39.8 431.049 39.8 425.8 c
39.8 415.6905 49.367 408.2 68.4 408.2 c
75.314 408.2 80.4129 408.7029 89.2 410.8 C
88.2 415.6 L
79.9701 413.6359 75.0978 413 68.4 413 c
52.553 413 44.8 418.5713 44.8 425.8 c
f
47.8 454.4 m
85.4 454.4 L
85.4 459.2 L
47.8 459.2 L
47.8 454.4 L
f
30.9801 373.7 m
70.9 373.7 L
70.9 380.6 L
32.2864 380.6 L
33.1051 385.0825 33.8798 389.6082 34.6 394.2 C
27.2 394.9 L
26.44 390.0541 25.6233 385.2972 24.7589 380.6 C
10.9 380.6 L
10.9 373.7 L
23.4446 373.7 L
19.1381 351.9568 13.623 331.5255 6.6 310.9 C
13.7 308.8 L
20.9325 330.2278 26.602 351.4129 30.9801 373.7 C
f
32.6826 272.2 m
71 272.2 L
71 281.2 L
34.394 281.2 L
35.1736 285.4891 35.9125 289.8165 36.6 294.2 C
26.8 295 L
26.0676 290.3306 25.2821 285.7392 24.4529 281.2 C
10.6 281.2 L
10.6 272.2 L
22.7314 272.2 L
18.4714 250.9836 13.0541 230.9294 6.2 210.8 C
15.6 208.2 L
22.609 229.1512 28.2787 250.1511 32.6826 272.2 C
f
34.3672 170.7 m
71.1 170.7 L
71.1 181.8 L
36.4965 181.8 L
37.2375 185.8962 37.9448 190.0229 38.6 194.2 C
26.4 195.1 L
25.6952 190.6063 24.941 186.1803 24.1466 181.8 C
10.3 181.8 L
10.3 170.7 L
22.0118 170.7 L
17.8008 150.0032 12.4853 130.3339 5.8 110.7 C
17.5 107.6 L
24.2905 128.0819 29.9402 148.8911 34.3672 170.7 C
f
85.8 359.6 m
47.9 359.6 L
47.9 352.6 L
85.8 352.6 L
85.8 359.6 L
f
86.2 260 m
48 260 L
48 250.8 L
86.2 250.8 L
86.2 260 L
f
86.6 160.4 m
48.1 160.4 L
48.1 149 L
86.6 149 L
86.6 160.4 L
f
68.7 315.1 m
54.0502 315.1 47.1 319.942 47.1 326.4 c
47.1 330.0026 49.0939 333.4661 54.1 336.9 C
49.3 341 L
42.611 336.4118 39.8 331.4454 39.8 325.8 c
39.8 315.6905 49.667 308.1 68.7 308.1 c
75.8021 308.1 81.0009 308.6478 89.6 310.7 C
88.3 317.7 L
80.1661 315.7831 75.1016 315.1 68.7 315.1 c
f
69 217.2 m
55.5474 217.2 49.4 221.3128 49.4 227 c
49.4 230.4847 51.1698 233.6612 55.6 236.7 C
49 241.2 L
42.6443 236.8404 39.8 231.8417 39.8 225.8 c
39.8 215.6907 49.967 208 69 208 c
76.2902 208 81.5889 208.5926 90 210.6 C
88.4 219.8 L
80.3622 217.9304 75.1053 217.2 69 217.2 c
f
39.8 125.8 m
39.8 115.6907 50.267 107.9 69.3 107.9 c
76.7783 107.9 82.1768 108.5375 90.4 110.5 C
88.5 121.9 L
80.5582 120.0776 75.1091 119.3 69.3 119.3 c
57.0446 119.3 51.7 122.6835 51.7 127.6 c
51.7 130.9669 53.2457 133.8563 57.1 136.5 C
48.7 141.4 L
42.6777 137.269 39.8 132.2381 39.8 125.8 c
f
71.2 69.2 m
71.2 82.4 L
38.6114 82.4 L
39.3133 86.2998 39.9775 90.2316 40.6 94.2 C
26 95.2 L
25.3227 90.8814 24.5999 86.6207 23.8399 82.4 C
10 82.4 L
10 69.2 L
21.2939 69.2 L
17.134 49.0139 11.9176 29.7411 5.4 10.6 C
19.4 7 L
25.9783 27.025 31.6096 47.6277 36.0573 69.2 C
71.2 69.2 L
f
69.6 21.4 m
58.5418 21.4 54 24.0543 54 28.2 c
54 31.449 55.3216 34.0513 58.6 36.3 C
48.4 41.6 L
42.711 37.6977 39.8 32.6345 39.8 25.8 c
39.8 15.6908 50.567 7.8 69.6 7.8 c
77.2663 7.8 82.7648 8.4824 90.8 10.4 C
88.6 24 L
80.7543 22.2249 75.1128 21.4 69.6 21.4 c
f
48.2 47.2 m
87 47.2 L
87 60.8 L
48.2 60.8 L
48.2 47.2 L
f
330.3 344 m
330.3 322.6926 343.717 310.1 363.8 310.1 c
367.175 310.1 370.4761 310.3572 373.8 310.8 C
373.2 318 L
369.7501 317.5431 366.7716 317.3 363.8 317.3 c
347.2577 317.3 338 326.7587 338 344 c
338 363.0258 354.4394 378.7 376.6 378.7 C
389.9 378.7 L
389.9 385.9 L
310.1 385.9 L
310.1 378.7 L
352.6138 378.7 L
338.3091 370.7211 330.3 357.6666 330.3 344 c
f
329.8 244 m
329.8 222.9287 343.5643 210 363.8 210 c
367.175 210 371.0674 210.3214 374.4 210.8 C
373.6 220.2 L
370.1334 219.7079 366.851 219.4 363.8 219.4 c
348.589 219.4 340 227.9593 340 244 c
340 262.1398 355.5591 276.6 376.6 276.6 C
390 276.6 L
390 286 L
310 286 L
310 276.6 L
349.345 276.6 L
336.7065 268.4699 329.8 256.372 329.8 244 c
f
329.3 144 m
329.3 123.1648 343.4115 109.9 363.8 109.9 c
367.175 109.9 371.6587 110.2857 375 110.8 C
374 122.4 L
370.5167 121.8727 366.9304 121.5 363.8 121.5 c
349.9202 121.5 342 129.1598 342 144 c
342 161.2538 356.6788 174.5 376.6 174.5 C
390.1 174.5 L
390.1 186.1 L
309.9 186.1 L
309.9 174.5 L
346.4163 174.5 L
335.2649 166.3946 329.3 155.2056 329.3 144 c
f
309.8 72.4 m
343.7673 72.4 L
333.9599 64.4516 328.8 54.1411 328.8 44 c
328.8 23.401 343.2587 9.8 363.8 9.8 c
367.175 9.8 372.25 10.25 375.6 10.8 C
374.4 24.6 L
370.9 24.0375 367.0097 23.6 363.8 23.6 c
351.2514 23.6 344 30.3604 344 44 c
344 60.3678 357.7985 72.4 376.6 72.4 C
390.2 72.4 L
390.2 86.2 L
309.8 86.2 L
309.8 72.4 L
f
U
u
U
u
U
u
U
u
U
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
