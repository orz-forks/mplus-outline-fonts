%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(TM) 7.0
%%For: (coz) (underforest)
%%Title: (246F.eps)
%%CreationDate: (1/29/04) (5:22 PM)
%%BoundingBox: 0 0 500 501
%%HiResBoundingBox: 0 0.4 500 500.4
%%DocumentProcessColors: Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_ColorImage_AI6 1.1 0
%%+ procset Adobe_Illustrator_AI5 1.2 0
%%+ procset Adobe_cshow 2.0 8
%AI5_FileFormat 3
%AI3_ColorUsage: Black&White
%AI3_IncludePlacedImages
%AI7_ImageSettings: 1
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 8.5 0 0 0 0 0 0 0 0 -1 -1
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () 
%AI3_TemplateBox: 244.5 256.5 244.5 256.5
%AI3_TileBox: -41.5 -119.5 534.5 642.5
%AI3_DocumentPreview: Macintosh_ColorPic
%AI5_ArtSize: 592 840
%AI5_RulerUnits: 2
%AI5_ArtFlags: 1 0 0 1 0 0 1 1 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI5_OpenToView: -139.5 520.5 1 794 556 25 0 0 3 40 0 0
%AI5_OpenViewLayers: 5
%%PageOrigin:-41.5 -119.5
%%AI3_PaperRect:-10 808 585 -34
%%AI3_Margin:10 -43 -9 34
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 25 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			0
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			1
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop 
			0 eq
			{
				pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				pop
				3
				{
					1 exch sub
					3 index mul 
					1 exch sub
					3 1 roll
				} repeat
				4 -1 roll pop
				setrgbcolor
			} ifelse
		}
		def
	} if
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	level2?
	{
		gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
		add add add 4 eq
	}
	{
		1 0 0 0 testCMYKColorThrough
		0 1 0 0 testCMYKColorThrough
		0 0 1 0 testCMYKColorThrough
		0 0 0 1 testCMYKColorThrough
		and and and
	} ifelse
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.1 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 24 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize
{ 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6
	{
		dup type /arraytype eq
		{
			dup xcheck
			{
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not
{
	/Adobe_ColorImage_AI6_Vars 15 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/channelcount 0 def
	/sourcecount 0 def
	/sourcearray 4 array def
	/plateindex -1 def
	/XIMask 0 def
	/XIBinary 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIBuffer null def
	/XIDataProc null def
	/XIVersion 6 def
end
/WalkRGBString null def
/WalkCMYKString null def
/StuffRGBIntoGrayString null def
/RGBToGrayImageProc null def
/StuffCMYKIntoGrayString null def
/CMYKToGrayImageProc null def
/ColorImageCompositeEmulator null def
/SeparateCMYKImageProc null def
/FourEqual null def
/TestPlateIndex null def
currentdict /_colorimage known not
{
	/colorimage where
	{
		/colorimage get /_colorimage exch def
	}
	{
		/_colorimage null def
	} ifelse
} if
/_currenttransfer systemdict /currenttransfer get def
/colorimage null def
/XI null def
/WalkRGBString
{
	0 3 index
	dup length 1 sub 0 3 3 -1 roll
	{
		3 getinterval { } forall
		5 index exec
		3 index
	} for
	
	 5 { pop } repeat
} def
/WalkCMYKString
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll
	{
		4 getinterval { } forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/StuffRGBIntoGrayString
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/RGBToGrayImageProc
{	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		dup length 3 idiv string
		dup 3 1 roll 
		
		/StuffRGBIntoGrayString load exch
		WalkRGBString
 end
} def
/StuffCMYKIntoGrayString
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/CMYKToGrayImageProc
{	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		dup length 4 idiv string
		dup 3 1 roll 
		
		/StuffCMYKIntoGrayString load exch
		WalkCMYKString
 end
} def
/ColorImageCompositeEmulator
{
	pop true eq
	{
		Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat
	}
	{
		Adobe_ColorImage_AI6_Vars /channelcount get 1 ne
		{
			Adobe_ColorImage_AI6_Vars begin
				sourcearray 0 3 -1 roll put
			
				channelcount 3 eq 
				{ 
					/RGBToGrayImageProc 
				}
				{ 
					/CMYKToGrayImageProc
				} ifelse
				load
		 end
		} if
		image
	} ifelse
} def
/SeparateCMYKImageProc
{	
	Adobe_ColorImage_AI6_Vars begin
		sourcecount 0 ne
		{
			sourcearray plateindex get exec
		}
		{			
			sourcearray 0 get exec
			
			dup length 4 idiv string
			
			0 2 index
			
			plateindex 4 2 index length 1 sub
			{
				get 255 exch sub
				
				3 copy put pop 1 add
				
				2 index
			} for
			pop pop exch pop
		} ifelse
 end
} def
	
/FourEqual
{
	4 index ne
	{
		pop pop pop false
	}
	{
		4 index ne
		{
			pop pop false
		}
		{
			4 index ne
			{
				pop false
			}
			{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/TestPlateIndex
{
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where
		{
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 FourEqual 
			{ 
				/plateindex 0 def
			}
			{
				0 1 0 0 FourEqual
				{ 
					/plateindex 1 def
				}
				{
					0 0 1 0 FourEqual
					{
						/plateindex 2 def
					}
					{
						0 0 0 1 FourEqual
						{ 
							/plateindex 3 def
						}
						{
							0 0 0 0 FourEqual
							{
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/colorimage
{
	Adobe_ColorImage_AI6_Vars begin
		/channelcount 1 index def
		/sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def
		4 sourcecount add index dup 
		8 eq exch 1 eq or not
 end
	
	{
		/_colorimage load null ne
		{
			_colorimage
		}
		{
			Adobe_ColorImage_AI6_Vars /sourcecount get
			7 add { pop } repeat
		} ifelse
	}
	{
		dup 3 eq
		TestPlateIndex
		dup -1 eq exch 5 eq or or
		{
			/_colorimage load null eq
			{
				ColorImageCompositeEmulator
			}
			{
				dup 1 eq
				{
					pop pop image
				}
				{
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
					{
						gsave
						
						0 _currenttransfer exec
						1 _currenttransfer exec
						eq
						{ 0 _currenttransfer exec 0.5 lt }
						{ 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse
						
						{ { pop 0 } } { { pop 1 } } ifelse
						systemdict /settransfer get exec
					} if
					
					_colorimage
					
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
					{
						grestore
					} if
				} ifelse
			} ifelse
		}
		{
			dup 1 eq
			{
				pop pop
				image
			}
			{
				pop pop
				Adobe_ColorImage_AI6_Vars begin
					sourcecount -1 0
					{			
						exch sourcearray 3 1 roll put
					} for
					/SeparateCMYKImageProc load
			 end
				systemdict /image get exec
			} ifelse
		} ifelse
	} ifelse
} def
/XG
{
	pop pop
} def
/XF
{
	13 {pop} repeat
} def
/Xh
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIMask exch 0 ne def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		XIMask
		{
			/_lp /null ddef
			_fc
			/_lp /imagemask ddef
		}
		if
		/XIVersion 7 def
 end
} def
/XH
{
	Adobe_ColorImage_AI6_Vars begin
		/XIVersion 6 def
		grestore
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIMask exch 0 ne def
		/XIBinary exch 0 ne def
		pop
		pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq
		{
			XIImageWidth 8 div ceiling cvi
		}
		{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIBuffer exch string def
		XIBinary
		{
			/XIDataProc { currentfile XIBuffer readstring pop } def
			XIVersion 6 le
			{
				currentfile 128 string readline pop pop
			}
			if
		}
		{
			/XIDataProc { currentfile XIBuffer readhexstring pop } def
		} ifelse
		
		XIVersion 6 le
		{
			0 0 moveto
			XIImageMatrix concat
			XIImageWidth XIImageHeight scale
			XIMask
			{
				/_lp /null ddef
				_fc
				/_lp /imagemask ddef
			} if
		} if
		
		XIMask
		{
			XIImageWidth XIImageHeight
			false
			[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
			/XIDataProc load
			imagemask
		}
		{
			XIImageWidth XIImageHeight
			XIBitsPerPixel
			[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
			/XIDataProc load
			
			XIChannelCount 1 eq
			{
				gsave
				0 setgray
				image
				grestore
			}
			{
				false
				XIChannelCount
				colorimage
			} ifelse
		} ifelse
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 7.0 Full Prolog)
%%Version: 1.2 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 107 dict dup begin
put
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XA
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/_rgbtocmyk
{
3
	{
	1 exch sub 3 1 roll
	} repeat
3 copy 1 4 1 roll
3
	{
	3 index 2 copy gt
		{
		exch
		} if
	pop 4 1 roll
	} repeat
pop pop pop
4 1 roll
3
	{
	3 index sub
	3 1 roll
	} repeat
4 -1 roll
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq
	{
		findcmykcustomcolor
	}
	{
		/findrgbcustomcolor where not {
			4 1 roll _rgbtocmyk
			5 -1 roll
			findcmykcustomcolor
		}
		{
			pop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq
	{
		findcmykcustomcolor
	}
	{
		/findrgbcustomcolor where not {
			4 1 roll _rgbtocmyk
			5 -1 roll
			findcmykcustomcolor
		}
		{
			pop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%EndProlog
%%BeginSetup
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_BeginPalette
0 0 Pb
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 0 1 1 0 0 3 79 79 255 Lb
(glyphs) Ln
0 A
u
1 Ap
800 Ar
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
0 XR
100 400.4 m
100 500.4 L
0 500.4 L
0 400.4 L
100 400.4 L
n
500 400.4 m
500 500.4 L
400 500.4 L
400 400.4 L
500 400.4 L
n
200 400.4 m
200 500.4 L
100 500.4 L
100 400.4 L
200 400.4 L
n
300 400.4 m
300 500.4 L
200 500.4 L
200 400.4 L
300 400.4 L
n
400 400.4 m
400 500.4 L
300 500.4 L
300 400.4 L
400 400.4 L
n
100 300.4 m
100 400.4 L
0 400.4 L
0 300.4 L
100 300.4 L
n
500 300.4 m
500 400.4 L
400 400.4 L
400 300.4 L
500 300.4 L
n
200 300.4 m
200 400.4 L
100 400.4 L
100 300.4 L
200 300.4 L
n
300 300.4 m
300 400.4 L
200 400.4 L
200 300.4 L
300 300.4 L
n
400 300.4 m
400 400.4 L
300 400.4 L
300 300.4 L
400 300.4 L
n
100 200.4 m
100 300.4 L
0 300.4 L
0 200.4 L
100 200.4 L
n
500 200.4 m
500 300.4 L
400 300.4 L
400 200.4 L
500 200.4 L
n
200 200.4 m
200 300.4 L
100 300.4 L
100 200.4 L
200 200.4 L
n
300 200.4 m
300 300.4 L
200 300.4 L
200 200.4 L
300 200.4 L
n
400 200.4 m
400 300.4 L
300 300.4 L
300 200.4 L
400 200.4 L
n
100 100.4 m
100 200.4 L
0 200.4 L
0 100.4 L
100 100.4 L
n
500 100.4 m
500 200.4 L
400 200.4 L
400 100.4 L
500 100.4 L
n
200 100.4 m
200 200.4 L
100 200.4 L
100 100.4 L
200 100.4 L
n
300 100.4 m
300 200.4 L
200 200.4 L
200 100.4 L
300 100.4 L
n
400 100.4 m
400 200.4 L
300 200.4 L
300 100.4 L
400 100.4 L
n
100 0.4 m
100 100.4 L
0 100.4 L
0 0.4 L
100 0.4 L
n
500 0.4 m
500 100.4 L
400 100.4 L
400 0.4 L
500 0.4 L
n
200 0.4 m
200 100.4 L
100 100.4 L
100 0.4 L
200 0.4 L
n
300 0.4 m
300 100.4 L
200 100.4 L
200 0.4 L
300 0.4 L
n
400 0.4 m
400 100.4 L
300 100.4 L
300 0.4 L
400 0.4 L
n
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
0 Ap
0 O
0 g
313.6 438.8 m
328.6875 458.9625 335.3223 463.2 344.8 463.2 c
351.4668 463.2 355.5041 460.4481 357.5435 451.8894 C
335.6248 446.044 326.4 436.7149 326.4 427 c
326.4 414.869 334.3147 408.6 360 408.6 c
367.55 408.6 374.6235 409.1829 384.6 410.6 C
384.1 415.4 L
374.4383 414.0276 367.2777 413.4 360 413.4 c
337.1 413.4 331.4 417.7601 331.4 427 c
331.4 434.1044 339.5297 441.8637 358.4105 447.0627 C
358.9492 442.9306 359.2 437.837 359.2 431.6 C
364.2 431.6 L
364.2 438.1865 363.8765 443.6894 363.2037 448.2685 C
369.6191 449.7498 377.0863 450.9605 385.7 451.8 C
385.2 456.6 L
376.5002 455.7521 368.8999 454.5442 362.2905 453.0529 C
359.6282 464.0353 354.0565 468 344.8 468 c
338.9866 468 333.5737 465.9388 327.2143 460.692 C
330.2565 466.5106 332.8394 472.3842 335.0961 478.6 C
389.8 478.6 L
389.8 483.4 L
336.7565 483.4 L
338.0707 487.4106 339.2776 491.5805 340.4 496 C
335.6 497.2 L
334.3579 492.3089 333.0191 487.7534 331.5508 483.4 C
310.2 483.4 L
310.2 478.6 L
329.8531 478.6 L
325.0167 465.6933 318.7259 454.4126 309.6 441.6 C
313.6 438.8 L
f
441 448.6 m
446.8092 448.6 451.0923 444.1564 453.2 432.8 c
456.6132 414.4096 460.8005 409.6 471.3 409.6 c
481.3021 409.6 490.4142 419.1226 493.8 437 C
489.1 437.9 L
486.1762 422.4618 478.7878 414.4 471.3 414.4 c
463.8343 414.4 461.009 416.9487 457.9 433.7 c
455.3782 447.288 449.2238 453.4 441 453.4 c
435.5187 453.4 431.5032 452.6955 427.0941 448.0629 C
433.1576 462.7581 439.4802 477.2905 445.9 491.2 C
441.4 493.2 L
429.4 467.2 417.4167 438.4 407 410.4 C
411.6 408.6 L
426.3406 446.004 429.9692 448.6 441 448.6 c
f
5.2 430.4 m
9.2 427.6 L
16.1404 437.5119 22.3545 445.6101 28 452.1739 C
28 406.6 L
33 406.6 L
33 457.7467 L
45.7861 471.3387 55.5057 476.4 64.1999 476.4 c
79.1425 476.4 86.8 469.9019 86.8 444.6 c
86.8 426.5027 77.2245 416.3945 59 414.8 C
59.8 410 L
80.2552 411.7897 91.8 424.2063 91.8 444.6 c
91.8 471.8447 81.3166 481.2 64.1999 481.2 c
54.1457 481.2 44.6738 476.7874 33 465.1452 C
33 494.2 L
28 494.2 L
28 476.6 L
6.2 476.6 L
6.2 471.8 L
28 471.8 L
28 459.8599 L
21.3081 452.4275 13.8594 442.7668 5.2 430.4 C
f
*u
1 D
107.2 433.8 m
107.2 418.3686 115.033 409.4 124.8 409.4 c
134.4445 409.4 143.7292 422.141 152.4823 469.3821 C
152.7888 469.3869 153.091 469.4 153.4 469.4 c
173.7263 469.4 187.8 457.7148 187.8 440 c
187.8 436.1681 187.5148 432.779 186.9786 429.7964 C
182.2474 435.11 177.7384 436.8 170.6 436.8 c
161.0703 436.8 154 430.2966 154 422.4 c
154 413.3041 160.0369 407.6 169.6 407.6 c
183.5865 407.6 192.8 418.2145 192.8 440 c
192.8 460.3003 176.1968 474.2 153.4 474.2 c
153.3835 474.2 153.3675 474.199 153.3511 474.199 C
154.3072 479.6341 155.257 485.4888 156.2 491.8 C
117.2 491.8 L
117.2 487 L
150.4194 487 L
149.696 482.3956 148.9678 478.0603 148.2364 473.9774 C
124.0844 471.9062 107.2 455.3494 107.2 433.8 c
f
0 D
169.6 412.4 m
162.8998 412.4 159 415.6993 159 422.4 c
159 427.4498 163.6498 432 170.6 432 c
177.231 432 180.8204 430.2805 185.4517 424.03 C
182.4877 415.9998 176.8842 412.4 169.6 412.4 c
f
124.8 414.2 m
117.6438 414.2 112.2 421.3546 112.2 433.8 c
112.2 452.4189 126.1951 466.761 147.3321 469.067 C
139.3537 426.9206 131.0873 414.2 124.8 414.2 c
f
*U
*u
1 D
206 412.1999 m
209.9 409.4 L
219.0521 421.9499 223.807 424 234.8 424 c
246.625 424 243.4 409.8 260 409.8 c
268.4167 409.8 275.9496 413.6271 278.6 418.8 C
274.6 421.1 L
272.423 417.3919 266.4629 414.5 260 414.5 c
246.1875 414.5 250.0625 428.6999 234.8 428.6999 c
231.0908 428.6999 227.7999 428.3279 224.7466 427.4369 C
231.5438 434.3685 237.2092 438.3358 241.5635 441.0465 C
243.0263 441.0165 244.5652 441 246.2 441 c
275.7263 441 289 449.7396 289 459.8 c
289 468.0086 281.1398 473.1999 257 473.1999 c
253.2263 473.1999 249.747 473.1186 246.4412 472.943 C
282 485.7 L
282 491 L
218 491 L
218 486.3 L
269.7289 486.3 L
216.8281 467.3845 L
214.5066 466.6149 212.1167 465.764 209.6 464.8 C
211.2 460.3 L
221.4665 463.9832 L
233.0964 467.753 241.0203 468.5 257 468.5 c
277.2487 468.5 284.1 464.6954 284.1 459.8 c
284.1 452.7604 272.2903 446.2269 249.0453 445.7333 C
250.7873 447.0928 251.7 448.466 251.7 450.6 c
251.7 456.1779 246.8401 459.8 234.4 459.8 c
222.9034 459.8 217.2 455.4889 217.2 450.6 c
217.2 445.4926 220.4311 442.3932 234.184 441.3744 C
226.7975 436.207 216.8163 427.6751 206 412.1999 C
f
0 D
222.1 450.6 m
222.1 452.8979 225.6816 455.1 234.4 455.1 c
243.7997 455.1 246.8 453.2425 246.8 450.6 c
246.8 449.2127 244.6572 447.9897 240.9718 445.7568 C
226.0614 446.0997 222.1 447.9833 222.1 450.6 c
f
*U
276.028 434.9446 m
281.3028 427.5016 285.8867 418.5756 289.5 409.4 C
294 411.2 L
290.0685 421.1835 285.3772 430.1378 280.128 437.5447 C
276.028 434.9446 L
f
344.7 361.6 m
350.4534 361.6 354.1176 359.2738 356.1343 352.3492 C
334.8248 346.3315 325.7 336.9006 325.7 327.3 c
325.7 314.9025 333.8815 308.5 360.1 308.5 c
367.65 308.5 374.7236 309.0829 384.7 310.5 C
383.9 317.4 L
374.2817 316.0338 367.2881 315.4 360.1 315.4 c
338.2668 315.4 333.1 319.2749 333.1 327.3 c
333.1 333.4336 340.6082 340.4679 357.4443 345.4304 C
357.8882 341.6362 358.1 337.0458 358.1 331.5 C
365.6 331.5 L
365.6 337.6462 365.2772 342.8698 364.6232 347.2863 C
370.7642 348.6713 377.8699 349.8077 386 350.6 C
385.3 357.5 L
376.9615 356.6873 369.612 355.5322 363.162 354.1074 C
360.158 364.24 354.3172 368.1 345.3 368.1 c
340.377 368.1 335.606 366.7695 330.3798 363.4216 C
332.6539 367.9641 334.6647 372.5745 336.4717 377.4 C
389.9 377.4 L
389.9 384.2 L
338.845 384.2 L
340.0475 387.9219 341.1586 391.7988 342.2 395.9 C
335.3 397.3 L
334.1163 392.6389 332.8439 388.3174 331.4569 384.2 C
310.1 384.2 L
310.1 377.4 L
328.978 377.4 L
324.2184 365.3166 318.0728 354.7168 309.3 342.4 C
315.1 338.5 L
329.4497 357.8187 335.4509 361.6 344.7 361.6 c
f
344.6 260 m
349.4315 260 352.6819 258.1074 354.6396 252.7624 C
333.9859 246.5763 325 237.072 325 227.6 c
325 214.9359 333.4482 208.4 360.2 208.4 c
367.75 208.4 374.8235 208.9829 384.8 210.4 C
383.7 219.4 L
374.1251 218.0399 367.2985 217.4 360.2 217.4 c
339.4337 217.4 334.8 220.7897 334.8 227.6 c
334.8 232.7958 341.6412 239.0821 356.4776 243.7668 C
356.8315 240.3326 357.0001 236.2446 357.0001 231.4 C
367 231.4 L
367 237.1209 366.681 242.0562 366.0518 246.2967 C
371.9162 247.5876 378.6478 248.6542 386.3 249.4 C
385.4 258.4 L
377.3822 257.6186 370.2474 256.514 363.9463 255.1475 C
360.6149 264.4716 354.5616 268.2 345.8 268.2 c
341.6084 268.2 337.4369 267.3337 333.0264 265.1788 C
334.7762 268.7684 336.3733 272.4136 337.8361 276.2 C
390 276.2 L
390 285 L
340.9172 285 L
342.0126 288.4402 343.0386 292.0139 344 295.8 C
335 297.4 L
333.8762 292.9746 332.6735 288.884 331.3682 285 C
310 285 L
310 276.2 L
328.0771 276.2 L
323.4026 264.9419 317.4062 255.0021 309 243.1999 C
316.6 238.2 L
330.212 256.675 335.5795 260 344.6 260 c
f
344.5 158.4 m
348.4009 158.4 351.1912 156.958 353.0363 153.1087 C
333.1102 146.7604 324.3 137.2228 324.3 127.9 c
324.3 114.9694 333.0149 108.3 360.3 108.3 c
367.85 108.3 374.9235 108.8829 384.9 110.3 C
383.5 121.4 L
373.9684 120.0461 367.3088 119.4 360.3 119.4 c
340.6006 119.4 336.5 122.3045 336.5 127.9 c
336.5 132.194 342.6287 137.7043 355.4955 142.0617 C
355.7673 139.0073 355.9 135.4481 355.9 131.3 C
368.4 131.3 L
368.4 136.6096 368.0902 141.255 367.4908 145.3072 C
373.0726 146.5046 379.4272 147.501 386.6 148.2 C
385.5 159.3 L
377.7476 158.5444 370.8168 157.4732 364.6418 156.1534 C
361.0049 164.7197 354.7949 168.3 346.3 168.3 c
342.7383 168.3 339.1315 167.7411 335.3833 166.3654 C
336.7347 169.1837 337.9916 172.0505 339.1679 175 C
390.1 175 L
390.1 185.8 L
342.9935 185.8 L
343.9836 188.9582 344.9197 192.2335 345.8 195.7 C
334.7 197.5 L
333.6376 193.3165 332.5077 189.4526 331.2848 185.8 C
309.9 185.8 L
309.9 175 L
327.123 175 L
322.5446 164.5702 316.7208 155.261 308.7 144 C
318.1 137.9 L
330.9742 155.5312 335.708 158.4 344.5 158.4 c
f
347.6 95.6 m
334.4 97.6 L
333.3992 93.6589 332.338 90.0272 331.1964 86.6 C
309.8 86.6 L
309.8 73.8 L
326.1221 73.8 L
321.6522 64.1936 316.0165 55.4933 308.4 44.8 C
319.6 37.6 L
331.7364 54.3875 335.8366 56.8 344.4 56.8 c
347.3484 56.8 349.6113 55.8242 351.2622 53.3685 C
332.1686 46.8683 323.6 37.3441 323.6 28.2 c
323.6 15.0028 332.5817 8.2 360.4 8.2 c
367.95 8.2 375.0236 8.783 385 10.2 C
383.3 23.4 L
373.8118 22.0522 367.3192 21.4 360.4 21.4 c
341.7675 21.4 338.2 23.8193 338.2 28.2 c
338.2 31.6359 343.5721 36.3452 354.5045 40.3168 C
354.702 37.6691 354.8 34.6498 354.8 31.2 C
369.8 31.2 L
369.8 36.1088 369.5073 40.4675 368.943 44.3187 C
374.2346 45.423 380.209 46.3479 386.9 47 C
385.6 60.1999 L
378.0677 59.4659 371.3009 58.4233 365.2319 57.1409 C
361.3163 64.9819 355.0106 68.4 346.8 68.4 c
343.8002 68.4 340.7289 68.0457 337.563 67.1878 C
338.5911 69.3527 339.566 71.5528 340.4913 73.8 C
390.2 73.8 L
390.2 86.6 L
345.0738 86.6 L
345.9601 89.4747 346.8019 92.4574 347.6 95.6 C
f
441.3 347.4 m
446.7509 347.4 450.3441 343.5814 452.4 332.2 c
455.6009 314.5432 460.3421 309.5 471.3 309.5 c
481.8181 309.5 490.3143 318.4117 493.9 338 C
487 339.4 L
483.9714 323.5187 477.7853 316.6 471.3 316.6 c
464.849 316.6 462.3288 319.046 459.7 333.4 c
456.9547 348.7375 451.0983 354.3 441.4 354.3 c
437.4777 354.3 434.084 353.6518 430.6497 351.2369 C
436.2651 364.7205 442.0508 377.9268 447.9 390.6 C
441 393.3 L
429 367.3 417.3166 339 406.9 311 C
413.8 308.5 L
427.929 344.655 431.4733 347.4 441.3 347.4 c
f
441.6 246.2 m
446.6926 246.2 449.5958 243.0063 451.6 231.6 c
454.5888 214.6768 459.8837 209.4 471.3 209.4 c
482.3341 209.4 490.2144 217.7009 494 239 C
484.9 240.9 L
481.7665 224.5755 476.7826 218.8 471.3 218.8 c
465.8636 218.8 463.6486 221.1434 461.5 233.1 c
458.5313 250.1869 452.9729 255.1999 441.8 255.1999 c
439.056 255.1999 436.4365 254.708 433.8021 253.3852 C
439.0832 265.9789 444.4689 278.2324 449.9 290 C
440.6 293.4 L
428.6 267.4 417.2167 239.6 406.8 211.6 C
416 208.4 L
429.5175 243.306 432.9774 246.2 441.6 246.2 c
f
441.9 145 m
446.6343 145 448.8475 142.4313 450.8 131 c
453.5766 114.8104 459.4252 109.3 471.3 109.3 c
482.8501 109.3 490.1145 116.99 494.1 140 C
482.8 142.4 L
479.5616 125.6323 475.7801 121 471.3 121 c
466.8783 121 464.9684 123.2408 463.3 132.8 c
460.1078 151.6364 454.8474 156.1 442.2 156.1 c
440.4192 156.1 438.6202 155.7985 436.7878 155.1329 C
441.7775 166.96 446.8248 178.4036 451.9 189.4 C
440.2 193.5 L
428.2 167.5 417.1167 140.2 406.7 112.2 C
418.2 108.3 L
431.1058 141.9571 434.4815 145 441.9 145 c
f
480.7 43.9 m
477.3567 26.6892 474.7775 23.1999 471.3 23.1999 c
467.8929 23.1999 466.2883 25.3382 465.1 32.5 c
461.6844 53.0859 456.7219 57 442.6 57 c
441.6513 57 440.6719 56.8817 439.6658 56.6459 C
444.3915 67.7853 449.1403 78.4872 453.9 88.8 C
439.8 93.6 L
427.8 67.6 417.0167 40.8 406.6 12.8 C
420.4 8.2 L
432.6943 40.6081 435.9856 43.8 442.2 43.8 c
446.5759 43.8 448.0992 41.8563 450 30.4 c
452.5644 14.944 458.9668 9.2 471.3 9.2 c
483.3661 9.2 490.0146 16.2791 494.2 41 C
480.7 43.9 L
f
274.628 334.7447 m
279.6686 327.2698 284.0525 318.5624 287.7 309.3 C
294.2 311.6 L
290.1259 321.9457 285.7804 330.3793 280.5781 338.0447 C
274.628 334.7447 L
f
273.228 234.5447 m
278.0344 227.0379 282.2183 218.5492 285.9 209.2 C
294.4 212 L
290.1832 222.7078 286.1836 230.6208 281.0281 238.5447 C
273.228 234.5447 L
f
271.8281 134.3447 m
276.4003 126.806 280.3841 118.536 284.1 109.1 C
294.6 112.4 L
290.2406 123.47 286.5868 130.8624 281.478 139.0447 C
271.8281 134.3447 L
f
27.2 348.5378 m
27.2 306.5 L
34.4 306.5 L
34.4 356.7004 L
46.5731 369.6136 55.85 374.6 63.9 374.6 c
77.7024 374.6 84.5 368.4764 84.5 344.6 c
84.5 327.6191 75.8422 318.3943 58.4 316.7 C
59.8 309.9 L
80.2552 311.6896 91.9 324.2063 91.9 344.6 c
91.9 372.053 81.4749 381.7 63.9 381.7 c
54.5892 381.7 45.444 377.537 34.4 366.9705 C
34.4 394.3 L
27.2 394.3 L
27.2 377 L
6.1 377 L
6.1 370.1 L
27.2 370.1 L
27.2 359.4819 L
20.6509 352.1539 13.3985 342.7515 5.1 330.9 C
10.7 326.7 L
16.7172 335.2934 22.1841 342.5113 27.2 348.5378 C
f
26.4 244.8208 m
26.4 206.4 L
35.8 206.4 L
35.8 255.6657 L
47.3616 267.9102 56.1852 272.8 63.6 272.8 c
76.2623 272.8 82.2 267.051 82.2 244.6 c
82.2 228.7356 74.4599 220.3942 57.8 218.6 C
59.8 209.8 L
80.2553 211.5897 92 224.2063 92 244.6 c
92 272.2612 81.6332 282.2 63.6 282.2 c
55.0065 282.2 46.2306 278.2964 35.8 268.7337 C
35.8 294.4 L
26.4 294.4 L
26.4 277.4 L
6 277.4 L
6 268.4 L
26.4 268.4 L
26.4 259.0857 L
19.9959 251.8718 12.9508 242.7549 5 231.4 C
12.2 225.8 L
17.3143 233.1038 22.0279 239.4055 26.4 244.8208 C
f
25.6 141.0247 m
25.6 106.3 L
37.2 106.3 L
37.2 154.6299 L
48.1474 166.209 56.5124 171 63.3 171 c
74.8221 171 79.9 165.6256 79.9 144.6 c
79.9 129.852 73.0776 122.394 57.2 120.5 C
59.8 109.7 L
80.2552 111.4896 92.1 124.2063 92.1 144.6 c
92.1 172.4694 81.7916 182.7 63.3 182.7 c
55.3975 182.7 47.0289 179.0635 37.2 170.4377 C
37.2 194.5 L
25.6 194.5 L
25.6 177.8 L
5.9 177.8 L
5.9 166.7 L
25.6 166.7 L
25.6 158.6961 L
19.3466 151.6079 12.5101 142.7683 4.9 131.9 C
13.7 124.9 L
17.9321 130.944 21.8877 136.2954 25.6 141.0247 C
f
63 83.2 m
55.7621 83.2 47.834 79.8362 38.6 72.0852 C
38.6 94.6 L
24.8 94.6 L
24.8 78.2 L
5.8 78.2 L
5.8 65 L
24.8 65 L
24.8 58.3132 L
18.7031 51.3618 12.0765 42.7918 4.8 32.4 C
15.2 24 L
18.5712 28.8146 21.7649 33.1838 24.8 37.1523 C
24.8 6.2 L
38.6 6.2 L
38.6 53.6011 L
48.932 64.5215 56.8296 69.2 63 69.2 c
73.382 69.2 77.6 64.2002 77.6 44.6 c
77.6 30.9686 71.6953 24.3939 56.6 22.4 C
59.8 9.6 L
80.2552 11.3896 92.2 24.2063 92.2 44.6 c
92.2 72.6777 81.9499 83.2 63 83.2 c
f
*u
1 D
124.8 309.2 m
134.795 309.2 144.824 322.5079 153.8722 367.4919 C
173.212 367.3199 185.7 356.6687 185.7 340.2 c
185.7 337.2635 185.5373 334.6016 185.2254 332.1976 C
180.9359 336.1741 176.4941 337.6 170.2 337.6 c
160.6564 337.6 153 330.6772 153 322.6 c
153 313.4625 159.4147 307.4 169.2 307.4 c
183.4531 307.4 193 318.5399 193 340.2 c
193 359.8721 177.5092 373.5737 155.1815 374.2666 C
156.2015 379.7479 157.2082 385.6457 158.2 392 C
117.2 392 L
117.2 385.2 L
149.7932 385.2 L
149.1357 381.285 148.4728 377.5663 147.8058 374.0425 C
123.4564 371.8441 106.9 355.3347 106.9 334 c
106.9 318.5547 115.0746 309.2 124.8 309.2 c
f
0 D
169.2 314 m
163.4248 314 160 316.964 160 322.6 c
160 327.0671 164.0019 331.2 170.2 331.2 c
176.0555 331.2 179.6215 329.7241 183.5455 324.8462 C
180.8644 317.3159 175.8199 314 169.2 314 c
f
146.4269 367.0568 m
138.6197 329.0981 130.4623 316.3 124.8 316.3 c
118.812 316.3 114.2 322.5382 114.2 334 c
114.2 351.3559 126.803 364.5385 146.4269 367.0568 C
f
*U
*u
1 D
124.8 209 m
135.1183 209 145.8373 222.7872 155.1905 265.5696 C
173.0068 264.9719 183.6 255.3963 183.6 240.4 c
183.6 238.2219 183.513 236.2057 183.3449 234.3417 C
179.4501 237.2323 175.2396 238.4 169.8 238.4 c
160.2425 238.4 152 231.0577 152 222.8 c
152 213.6209 158.7925 207.2 168.8 207.2 c
183.3196 207.2 193.2 218.8651 193.2 240.4 c
193.2 259.452 178.7678 272.9451 156.9948 274.2818 C
158.085 279.8245 159.1547 285.7837 160.2 292.2 C
117.2 292.2 L
117.2 283.4 L
149.1437 283.4 L
148.559 280.1617 147.9685 277.0701 147.3741 274.1085 C
122.8356 271.7877 106.6 255.3239 106.6 234.2 c
106.6 218.7409 115.1163 209 124.8 209 c
f
0 D
168.8 215.6 m
163.9498 215.6 161 218.2288 161 222.8 c
161 226.6843 164.3541 230.4 169.8 230.4 c
174.8484 230.4 178.303 229.1857 181.6115 225.5845 C
179.2076 218.6155 174.7347 215.6 168.8 215.6 c
f
145.4427 265.0211 m
137.8232 231.1388 129.8407 218.4 124.8 218.4 c
119.9802 218.4 116.2 223.7219 116.2 234.2 c
116.2 250.2718 127.4055 262.3082 145.4427 265.0211 C
f
*U
*u
1 D
124.8 108.8 m
135.4123 108.8 146.764 122.9756 156.429 163.6118 C
172.6766 162.6825 181.5 154.1599 181.5 140.6 c
181.5 139.059 181.4578 137.6061 181.3766 136.2344 C
177.8608 138.2885 174.0115 139.2 169.4 139.2 c
159.8285 139.2 151 131.4384 151 123 c
151 113.7794 158.1702 107 168.4 107 c
183.1862 107 193.4 119.1904 193.4 140.6 c
193.4 159.0521 179.9579 172.3315 158.7906 174.251 C
159.9578 179.8687 161.0961 185.9058 162.2 192.4 C
117.2 192.4 L
117.2 181.6 L
148.455 181.6 L
147.9542 179.0379 147.4488 176.5592 146.9393 174.175 C
122.2208 171.7357 106.3 155.3162 106.3 134.4 c
106.3 118.9271 115.158 108.8 124.8 108.8 c
f
0 D
168.4 117.2 m
164.4748 117.2 162 119.4935 162 123 c
162 126.3016 164.7062 129.6 169.4 129.6 c
173.6141 129.6 176.8433 128.6537 179.6389 126.179 C
177.5041 119.8765 173.6157 117.2 168.4 117.2 c
f
144.3559 162.9332 m
136.9501 133.0109 129.2232 120.5 124.8 120.5 c
121.1483 120.5 118.2 124.9055 118.2 134.4 c
118.2 149.1551 128.0054 160.0426 144.3559 162.9332 C
f
*U
*u
1 D
160.5685 74.1793 m
161.8197 79.884 163.0327 86.0141 164.2 92.6 C
117.2 92.6 L
117.2 79.8 L
147.728 79.8 L
147.3223 77.8968 146.9132 76.0454 146.501 74.2422 C
121.6113 71.6879 106 55.3112 106 34.6 c
106 19.1132 115.1996 8.6 124.8 8.6 c
135.6748 8.6 147.5978 23.0737 157.5781 61.6187 C
172.211 60.446 179.4 52.9579 179.4 40.8 c
179.4 39.7891 179.3831 38.8187 179.35 37.8866 C
176.2263 39.3151 172.8311 40 169 40 c
159.4146 40 150 31.8189 150 23.2 c
150 13.9378 157.548 6.8 168 6.8 c
183.0527 6.8 193.6 19.5157 193.6 40.8 c
193.6 58.6699 181.0875 71.7324 160.5685 74.1793 C
f
0 D
124.8 22.6 m
122.3165 22.6 120.2 26.0891 120.2 34.6 c
120.2 47.9964 128.5934 57.7471 143.1376 60.7914 C
135.9852 34.6981 128.6113 22.6 124.8 22.6 c
f
168 18.8 m
164.9998 18.8 163 20.7583 163 23.2 c
163 25.9189 165.0583 28.8 169 28.8 c
172.3701 28.8 175.2313 28.0972 177.6038 26.5393 C
175.7298 21.0754 172.4441 18.8 168 18.8 c
f
*U
*u
1 D
211.4 309.3 m
220.5308 321.7326 224.3048 323.4 234.4 323.4 c
245.8396 323.4 242.4375 309.7 259.1 309.7 c
267.1331 309.7 274.7216 313.6172 277.6 318.9 C
272.6 322.6 L
270.0142 318.6627 264.9286 316.1999 259.1 316.1999 c
246.9656 316.1999 250.3343 329.6 234.9 329.6 c
232.4745 329.6 230.2397 329.4326 228.1259 329.0751 C
233.5399 334.2331 238.1948 337.4897 241.9714 339.8429 C
243.3183 339.815 244.7241 339.8 246.2 339.8 c
275.8094 339.8 289.1 348.5648 289.1 359 c
289.1 368.1669 280.7065 373.9 255.5 373.9 c
253.999 373.9 252.5351 373.8769 251.0864 373.8418 C
282.1 384.5 L
282.1 391.1 L
217.9 391.1 L
217.9 384.9 L
265.9993 384.9 L
213.3011 367.3028 L
211.9258 366.8589 210.5335 366.3983 209.1 365.9 C
211.1 360.1 L
220.2049 363.229 L
232.9084 367.3304 239.7295 367.9999 255.5 367.9999 c
275.1486 367.9999 281.7 364.1037 281.7 359 c
281.7 352.8454 271.5911 346.9979 251.5291 346.118 C
252.6281 347.2985 253.2 348.6334 253.2 350.5 c
253.2 356.1613 247.6317 360.2 234.3 360.2 c
221.5701 360.2 215.2 355.514 215.2 350.4 c
215.2 345.2981 218.9022 341.7828 231.8252 340.4254 C
224.8018 335.3495 215.712 327.1814 205.8 313 C
205.8 313 L
205.8 312.9999 L
211.4 309.3 L
f
0 D
222.5 350.5 m
222.5 352.7146 225.6399 354.7 234.3 354.7 c
243.3663 354.7 246 353.1009 246 350.5 c
246 349.1493 244.0297 348.0495 240.6089 346.0579 C
225.8929 346.3811 222.5 348.0597 222.5 350.5 c
f
*U
*u
1 D
234.0001 222.8 m
245.0541 222.8 241.475 209.6 258.2 209.6 c
265.8494 209.6 273.4936 213.6074 276.6 218.9999 C
270.6 224.1 L
267.6053 219.9334 263.3942 217.9 258.2 217.9 c
247.7438 217.9 250.6063 230.4999 235 230.4999 c
233.7079 230.4999 232.4782 230.4464 231.2841 230.3516 C
235.4822 234.0832 239.1962 236.6667 242.3601 238.6409 C
243.5957 238.6157 244.8677 238.6 246.2 238.6 c
275.8926 238.6 289.2 247.3898 289.2 258.2 c
289.2 268.1037 280.6489 274.3197 255.6892 274.5872 C
282.2 283.3 L
282.2 291.1999 L
217.8 291.1999 L
217.8 283.5 L
261.7378 283.5 L
208.6 267 L
211 259.9 L
218.193 262.264 L
232.7657 266.9135 238.2793 267.5 254 267.5 c
273.0485 267.5 279.3 263.5121 279.3 258.2 c
279.3 252.8928 270.7759 247.7184 253.7003 246.5475 C
254.3582 247.6016 254.7 248.8267 254.7 250.4 c
254.7 256.1447 248.4233 260.6 234.2 260.6 c
220.2367 260.6 213.2 255.5391 213.2 250.2 c
213.2 245.0999 217.2856 241.2298 229.5745 239.5378 C
222.9528 234.5701 214.6697 226.7761 205.6 213.8 C
212.9 209.1999 L
222.0095 221.5153 224.8025 222.8 234.0001 222.8 c
f
0 D
222.9 250.4 m
222.9 252.5313 225.5983 254.3 234.2 254.3 c
242.9329 254.3 245.2 252.9592 245.2 250.4 c
245.2 249.0906 243.4119 248.1105 240.266 246.3567 C
225.7392 246.6549 222.9 248.1327 222.9 250.4 c
f
*U
*u
1 D
233.6 122.1999 m
244.2687 122.1999 240.5125 109.5 257.3 109.5 c
264.5657 109.5 272.2656 113.5975 275.6 119.1 C
268.6 125.6 L
265.1964 121.2042 261.8599 119.6 257.3 119.6 c
248.5219 119.6 250.8781 131.4 235.1 131.4 c
234.8338 131.4 234.582 131.3878 234.3204 131.384 C
237.4078 133.9371 240.2176 135.872 242.7192 137.4374 C
243.8477 137.4152 244.9994 137.4 246.2 137.4 c
275.9756 137.4 289.3 146.2149 289.3 157.4 c
289.3 167.4007 281.5925 173.9252 260.0037 175.105 C
282.3 182.1 L
282.3 191.3 L
217.7 191.3 L
217.7 182.1 L
256.824 182.1 L
208.1 168.1 L
210.9 159.6999 L
213.4429 160.4977 L
232.5756 166.4795 236.2095 166.9999 252.5 166.9999 c
270.9484 166.9999 276.9 162.9205 276.9 157.4 c
276.9 152.9106 269.8618 148.4118 255.6366 147.0315 C
256.0079 147.9595 256.2 149.0234 256.2 150.3 c
256.2 156.1281 249.2149 161 234.1 161 c
218.9033 161 211.2 155.5641 211.2 150 c
211.2 144.894 215.6078 140.7156 227.4302 138.7017 C
221.2299 133.858 213.6842 126.4523 205.4 114.6 C
214.4 109.1 L
223.4881 121.298 225.3003 122.1999 233.6 122.1999 c
f
0 D
223.3 150.3 m
223.3 152.348 225.5565 153.9 234.1 153.9 c
242.4995 153.9 244.4 152.8176 244.4 150.3 c
244.4 149.0393 242.8001 148.1699 239.948 146.6535 C
225.5995 146.9216 223.3 148.2023 223.3 150.3 c
f
*U
270.428 33.7447 m
274.766 26.1741 278.5499 18.1228 282.3 8.6 C
294.8 12.4 L
290.298 23.8321 286.99 30.704 281.928 39.1446 C
270.428 33.7447 L
f
*u
1 D
256.4 20.9 m
249.5488 20.9 251.0261 31.1392 236.8076 31.8572 C
239.0441 33.5998 241.1305 35.0243 243.0524 36.2325 C
244.0781 36.2133 245.1206 36.2 246.2 36.2 c
276.0588 36.2 289.4 45.04 289.4 56.6 c
289.4 66.4216 282.7474 73.1256 264.883 75.2645 C
282.4 80.5 L
282.4 91 L
217.6 91 L
217.6 80.3 L
251.0983 80.3 L
218.7792 71.7555 L
215.1785 71.0032 211.443 70.1558 207.6 69.2 C
207.7214 68.8321 L
207.6 68.8 L
210.8 59.1 L
229.7493 64.7636 L
236.8328 66.3665 241.3109 66.5 251 66.5 c
268.8482 66.5 274.5 62.3289 274.5 56.6 c
274.5 52.9034 268.8819 49.0836 257.4091 47.5731 C
257.6008 48.3508 257.7 49.2162 257.7 50.2 c
257.7 56.1115 250.0065 61.4 234 61.4 c
217.57 61.4 209.2 55.5891 209.2 49.8 c
209.2 44.678 213.8873 40.2241 225.3852 37.9045 C
219.6136 33.2005 212.7491 26.2007 205.2 15.4 C
205.4258 15.2649 L
205.3492 15.1733 205.2769 15.0925 205.2 15 C
215.9 8.6 L
224.9667 20.6807 225.7982 21.2 233.2 21.2 c
243.4833 21.2 239.55 9 256.4 9 c
263.282 9 271.0376 13.1876 274.6 18.8 C
266.6 26.7 L
262.7875 22.075 260.3256 20.9 256.4 20.9 c
f
0 D
223.7 50.2 m
223.7 52.1647 225.5148 53.5 234 53.5 c
242.0661 53.5 243.6 52.6759 243.6 50.2 c
243.6 48.9987 242.1943 48.2281 239.6627 46.9484 C
225.4731 47.1819 223.7 48.2684 223.7 50.2 c
f
*U
U
u
U
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
