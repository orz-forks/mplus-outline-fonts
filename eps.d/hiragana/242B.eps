%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(TM) 7.0
%%For: (coz) (underforest)
%%Title: (242B.eps)
%%CreationDate: (1/31/04) (2:15 PM)
%%BoundingBox: 0 0 500 500
%%HiResBoundingBox: 0 0 500 500
%%DocumentProcessColors: Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_ColorImage_AI6 1.1 0
%%+ procset Adobe_Illustrator_AI5 1.2 0
%%+ procset Adobe_cshow 2.0 8
%AI5_FileFormat 3
%AI3_ColorUsage: Black&White
%AI3_IncludePlacedImages
%AI7_ImageSettings: 1
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 8.5 0 0 0 0 0 0 0 0 -1 -1
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () 
%AI3_TemplateBox: 244.5 256.5 244.5 256.5
%AI3_TileBox: -41.5 -119.5 534.5 642.5
%AI3_DocumentPreview: Macintosh_ColorPic
%AI5_ArtSize: 592 840
%AI5_RulerUnits: 2
%AI5_ArtFlags: 1 0 0 1 0 0 1 1 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI5_OpenToView: -139.5 520.5 1 794 556 25 0 0 3 40 0 0
%AI5_OpenViewLayers: 5
%%PageOrigin:-41.5 -119.5
%%AI3_PaperRect:-10 808 585 -34
%%AI3_Margin:10 -43 -9 34
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 25 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			0
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			1
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop 
			0 eq
			{
				pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				pop
				3
				{
					1 exch sub
					3 index mul 
					1 exch sub
					3 1 roll
				} repeat
				4 -1 roll pop
				setrgbcolor
			} ifelse
		}
		def
	} if
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	level2?
	{
		gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
		add add add 4 eq
	}
	{
		1 0 0 0 testCMYKColorThrough
		0 1 0 0 testCMYKColorThrough
		0 0 1 0 testCMYKColorThrough
		0 0 0 1 testCMYKColorThrough
		and and and
	} ifelse
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.1 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 24 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize
{ 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6
	{
		dup type /arraytype eq
		{
			dup xcheck
			{
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not
{
	/Adobe_ColorImage_AI6_Vars 15 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/channelcount 0 def
	/sourcecount 0 def
	/sourcearray 4 array def
	/plateindex -1 def
	/XIMask 0 def
	/XIBinary 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIBuffer null def
	/XIDataProc null def
	/XIVersion 6 def
end
/WalkRGBString null def
/WalkCMYKString null def
/StuffRGBIntoGrayString null def
/RGBToGrayImageProc null def
/StuffCMYKIntoGrayString null def
/CMYKToGrayImageProc null def
/ColorImageCompositeEmulator null def
/SeparateCMYKImageProc null def
/FourEqual null def
/TestPlateIndex null def
currentdict /_colorimage known not
{
	/colorimage where
	{
		/colorimage get /_colorimage exch def
	}
	{
		/_colorimage null def
	} ifelse
} if
/_currenttransfer systemdict /currenttransfer get def
/colorimage null def
/XI null def
/WalkRGBString
{
	0 3 index
	dup length 1 sub 0 3 3 -1 roll
	{
		3 getinterval { } forall
		5 index exec
		3 index
	} for
	
	 5 { pop } repeat
} def
/WalkCMYKString
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll
	{
		4 getinterval { } forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/StuffRGBIntoGrayString
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/RGBToGrayImageProc
{	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		dup length 3 idiv string
		dup 3 1 roll 
		
		/StuffRGBIntoGrayString load exch
		WalkRGBString
 end
} def
/StuffCMYKIntoGrayString
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/CMYKToGrayImageProc
{	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		dup length 4 idiv string
		dup 3 1 roll 
		
		/StuffCMYKIntoGrayString load exch
		WalkCMYKString
 end
} def
/ColorImageCompositeEmulator
{
	pop true eq
	{
		Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat
	}
	{
		Adobe_ColorImage_AI6_Vars /channelcount get 1 ne
		{
			Adobe_ColorImage_AI6_Vars begin
				sourcearray 0 3 -1 roll put
			
				channelcount 3 eq 
				{ 
					/RGBToGrayImageProc 
				}
				{ 
					/CMYKToGrayImageProc
				} ifelse
				load
		 end
		} if
		image
	} ifelse
} def
/SeparateCMYKImageProc
{	
	Adobe_ColorImage_AI6_Vars begin
		sourcecount 0 ne
		{
			sourcearray plateindex get exec
		}
		{			
			sourcearray 0 get exec
			
			dup length 4 idiv string
			
			0 2 index
			
			plateindex 4 2 index length 1 sub
			{
				get 255 exch sub
				
				3 copy put pop 1 add
				
				2 index
			} for
			pop pop exch pop
		} ifelse
 end
} def
	
/FourEqual
{
	4 index ne
	{
		pop pop pop false
	}
	{
		4 index ne
		{
			pop pop false
		}
		{
			4 index ne
			{
				pop false
			}
			{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/TestPlateIndex
{
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where
		{
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 FourEqual 
			{ 
				/plateindex 0 def
			}
			{
				0 1 0 0 FourEqual
				{ 
					/plateindex 1 def
				}
				{
					0 0 1 0 FourEqual
					{
						/plateindex 2 def
					}
					{
						0 0 0 1 FourEqual
						{ 
							/plateindex 3 def
						}
						{
							0 0 0 0 FourEqual
							{
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/colorimage
{
	Adobe_ColorImage_AI6_Vars begin
		/channelcount 1 index def
		/sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def
		4 sourcecount add index dup 
		8 eq exch 1 eq or not
 end
	
	{
		/_colorimage load null ne
		{
			_colorimage
		}
		{
			Adobe_ColorImage_AI6_Vars /sourcecount get
			7 add { pop } repeat
		} ifelse
	}
	{
		dup 3 eq
		TestPlateIndex
		dup -1 eq exch 5 eq or or
		{
			/_colorimage load null eq
			{
				ColorImageCompositeEmulator
			}
			{
				dup 1 eq
				{
					pop pop image
				}
				{
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
					{
						gsave
						
						0 _currenttransfer exec
						1 _currenttransfer exec
						eq
						{ 0 _currenttransfer exec 0.5 lt }
						{ 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse
						
						{ { pop 0 } } { { pop 1 } } ifelse
						systemdict /settransfer get exec
					} if
					
					_colorimage
					
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
					{
						grestore
					} if
				} ifelse
			} ifelse
		}
		{
			dup 1 eq
			{
				pop pop
				image
			}
			{
				pop pop
				Adobe_ColorImage_AI6_Vars begin
					sourcecount -1 0
					{			
						exch sourcearray 3 1 roll put
					} for
					/SeparateCMYKImageProc load
			 end
				systemdict /image get exec
			} ifelse
		} ifelse
	} ifelse
} def
/XG
{
	pop pop
} def
/XF
{
	13 {pop} repeat
} def
/Xh
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIMask exch 0 ne def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		XIMask
		{
			/_lp /null ddef
			_fc
			/_lp /imagemask ddef
		}
		if
		/XIVersion 7 def
 end
} def
/XH
{
	Adobe_ColorImage_AI6_Vars begin
		/XIVersion 6 def
		grestore
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIMask exch 0 ne def
		/XIBinary exch 0 ne def
		pop
		pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq
		{
			XIImageWidth 8 div ceiling cvi
		}
		{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIBuffer exch string def
		XIBinary
		{
			/XIDataProc { currentfile XIBuffer readstring pop } def
			XIVersion 6 le
			{
				currentfile 128 string readline pop pop
			}
			if
		}
		{
			/XIDataProc { currentfile XIBuffer readhexstring pop } def
		} ifelse
		
		XIVersion 6 le
		{
			0 0 moveto
			XIImageMatrix concat
			XIImageWidth XIImageHeight scale
			XIMask
			{
				/_lp /null ddef
				_fc
				/_lp /imagemask ddef
			} if
		} if
		
		XIMask
		{
			XIImageWidth XIImageHeight
			false
			[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
			/XIDataProc load
			imagemask
		}
		{
			XIImageWidth XIImageHeight
			XIBitsPerPixel
			[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
			/XIDataProc load
			
			XIChannelCount 1 eq
			{
				gsave
				0 setgray
				image
				grestore
			}
			{
				false
				XIChannelCount
				colorimage
			} ifelse
		} ifelse
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 7.0 Full Prolog)
%%Version: 1.2 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 107 dict dup begin
put
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XA
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/_rgbtocmyk
{
3
	{
	1 exch sub 3 1 roll
	} repeat
3 copy 1 4 1 roll
3
	{
	3 index 2 copy gt
		{
		exch
		} if
	pop 4 1 roll
	} repeat
pop pop pop
4 1 roll
3
	{
	3 index sub
	3 1 roll
	} repeat
4 -1 roll
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq
	{
		findcmykcustomcolor
	}
	{
		/findrgbcustomcolor where not {
			4 1 roll _rgbtocmyk
			5 -1 roll
			findcmykcustomcolor
		}
		{
			pop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq
	{
		findcmykcustomcolor
	}
	{
		/findrgbcustomcolor where not {
			4 1 roll _rgbtocmyk
			5 -1 roll
			findcmykcustomcolor
		}
		{
			pop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%EndProlog
%%BeginSetup
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_BeginPalette
0 0 Pb
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 0 1 1 0 0 3 79 79 255 Lb
(glyphs) Ln
0 A
u
1 Ap
800 Ar
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
0 XR
100 400 m
100 500 L
0 500 L
0 400 L
100 400 L
n
500 400 m
500 500 L
400 500 L
400 400 L
500 400 L
n
200 400 m
200 500 L
100 500 L
100 400 L
200 400 L
n
300 400 m
300 500 L
200 500 L
200 400 L
300 400 L
n
400 400 m
400 500 L
300 500 L
300 400 L
400 400 L
n
100 300 m
100 400 L
0 400 L
0 300 L
100 300 L
n
500 300 m
500 400 L
400 400 L
400 300 L
500 300 L
n
200 300 m
200 400 L
100 400 L
100 300 L
200 300 L
n
300 300 m
300 400 L
200 400 L
200 300 L
300 300 L
n
400 300 m
400 400 L
300 400 L
300 300 L
400 300 L
n
100 200 m
100 300 L
0 300 L
0 200 L
100 200 L
n
500 200 m
500 300 L
400 300 L
400 200 L
500 200 L
n
200 200 m
200 300 L
100 300 L
100 200 L
200 200 L
n
300 200 m
300 300 L
200 300 L
200 200 L
300 200 L
n
400 200 m
400 300 L
300 300 L
300 200 L
400 200 L
n
100 100 m
100 200 L
0 200 L
0 100 L
100 100 L
n
500 100 m
500 200 L
400 200 L
400 100 L
500 100 L
n
200 100 m
200 200 L
100 200 L
100 100 L
200 100 L
n
300 100 m
300 200 L
200 200 L
200 100 L
300 100 L
n
400 100 m
400 200 L
300 200 L
300 100 L
400 100 L
n
100 0 m
100 100 L
0 100 L
0 0 L
100 0 L
n
500 0 m
500 100 L
400 100 L
400 0 L
500 0 L
n
200 0 m
200 100 L
100 100 L
100 0 L
200 0 L
n
300 0 m
300 100 L
200 100 L
200 0 L
300 0 L
n
400 0 m
400 100 L
300 100 L
300 0 L
400 0 L
n
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
0 Ap
0 O
0 g
170.1753 441.6031 m
162.5469 444.5244 153.2789 446.4 144.8 446.4 c
125.9386 446.4 116.6 438.8774 116.6 428.8 c
116.6 415.4355 126.9007 407.2 154.8 407.2 c
163.3234 407.2 170.8 407.95 178.4 409.4 C
177.5004 414.1149 L
169.9376 412.672 162.7243 412 154.8 412 c
129.8998 412 121.6 418.372 121.6 428.8 c
121.6 435.8149 128.6477 441.6 144.8 441.6 c
155.5569 441.6 168.356 438.1466 176 433.4 C
180 436.6 L
174.6123 443.2609 170.435 450.8049 167.3756 459.2 C
189.8 459.2 L
189.8 464 L
165.7891 464 L
164.4581 468.389 163.3925 472.982 162.6135 477.8 C
184.8 477.8 L
184.8 482.6 L
161.9441 482.6 L
161.4654 486.5358 161.1467 490.5984 161 494.8 C
155.8 494.8 L
155.9483 490.552 156.2668 486.5016 156.7193 482.6 C
116.2 482.6 L
116.2 477.8 L
157.3636 477.8 L
158.11 472.9407 159.0948 468.3398 160.3373 464 C
110.2 464 L
110.2 459.2 L
161.8535 459.2 L
164.0526 452.7959 166.8341 446.9602 170.1753 441.6031 C
f
167.4105 342.8532 m
160.328 345.1642 152.212 346.6 144.8 346.6 c
125.9386 346.6 116.3 338.9774 116.3 328.9 c
116.3 315.2688 126.9007 307.1 154.8 307.1 c
163.3234 307.1 171 307.85 178.6 309.3 C
177.4004 315.8149 L
169.9453 314.3925 162.6146 313.7 154.8 313.7 c
131.0625 313.7 123.5 319.4035 123.5 328.9 c
123.5 335.0202 129.8836 340.1 144.8 340.1 c
155.1921 340.1 167.1999 336.9322 174.5 332.6 C
180.3 336.8 L
175.3022 342.9788 171.3319 349.9529 168.3224 357.7 C
189.9 357.7 L
189.9 364.2 L
166.0831 364.2 L
164.9118 368.0585 163.9545 372.0914 163.2096 376.3 C
184.9 376.3 L
184.9 382.8 L
162.238 382.8 L
161.7644 386.6977 161.4457 390.7253 161.3 394.9 C
153.9 394.9 L
154.0468 390.6962 154.3611 386.6785 154.8067 382.8 C
116.1 382.8 L
116.1 376.3 L
155.6993 376.3 L
156.4017 372.071 157.3041 368.0466 158.3912 364.2 C
110.1 364.2 L
110.1 357.7 L
160.4822 357.7 L
162.39 352.395 164.6992 347.4583 167.4105 342.8532 C
f
164.8192 243.8938 m
158.3546 245.7071 151.269 246.8 144.8 246.8 c
125.9386 246.8 116 239.0774 116 229 c
116 215.1022 126.9007 207 154.8 207 c
163.3234 207 171.2 207.75 178.8 209.2 C
177.3004 217.5149 L
169.953 216.1131 162.505 215.4 154.8 215.4 c
132.2253 215.4 125.4 220.435 125.4 229 c
125.4 234.2254 131.1195 238.6 144.8 238.6 c
154.8272 238.6 166.0439 235.7178 173 231.8 C
180.6 237 L
175.9894 242.7 172.2303 249.1003 169.2944 256.2 C
190 256.2 L
190 264.4 L
166.3759 264.4 L
165.3639 267.7309 164.5065 271.1947 163.8113 274.8 C
185 274.8 L
185 283 L
162.5314 283 L
162.0631 286.8602 161.7448 290.8526 161.6 295 C
152 295 L
152.1453 290.8398 152.4553 286.8548 152.894 283 C
116 283 L
116 274.8 L
154.0837 274.8 L
154.7285 271.1981 155.5147 267.7329 156.4448 264.4 C
110 264.4 L
110 256.2 L
159.1124 256.2 L
160.7397 251.8672 162.6442 247.7735 164.8192 243.8938 C
f
162.3526 144.7758 m
156.5524 146.1776 150.4139 147 144.8 147 c
125.9386 147 115.7 139.1774 115.7 129.1 c
115.7 114.9355 126.9007 106.9 154.8 106.9 c
163.3234 106.9 171.4 107.65 179 109.1 C
177.2004 119.2149 L
169.9607 117.8336 162.3953 117.1 154.8 117.1 c
133.388 117.1 127.3 121.4665 127.3 129.1 c
127.3 133.4307 132.3555 137.1 144.8 137.1 c
154.4624 137.1 164.8878 134.5034 171.5 131 C
180.9 137.2 L
176.6775 142.4202 173.1519 148.251 170.3152 154.7 C
190.1 154.7 L
190.1 164.6 L
166.6677 164.6 L
165.816 167.401 165.0671 170.2956 164.4384 173.3 C
185.1 173.3 L
185.1 183.2 L
162.8245 183.2 L
162.3614 187.023 162.0439 190.9805 161.9 195.1 C
150.1 195.1 L
150.2437 190.9832 150.5493 187.0306 150.9813 183.2 C
115.9 183.2 L
115.9 173.3 L
152.4761 173.3 L
153.0499 170.31 153.7234 167.4106 154.498 164.6 C
109.9 164.6 L
109.9 154.7 L
157.7698 154.7 L
159.1202 151.2512 160.6486 147.9469 162.3526 144.7758 C
f
165.1097 71.8 m
185.2 71.8 L
185.2 83.4 L
163.1172 83.4 L
162.6594 87.1862 162.3429 91.1088 162.2 95.2 C
148.2 95.2 L
148.3423 91.1262 148.6432 87.2059 149.0684 83.4 C
115.8 83.4 L
115.8 71.8 L
150.8695 71.8 L
151.3598 69.407 151.9296 67.082 152.5508 64.8 C
109.8 64.8 L
109.8 53.2 L
156.4615 53.2 L
157.5357 50.5641 158.715 48.0082 159.999 45.5288 C
154.889 46.5904 149.6286 47.2 144.8 47.2 c
125.9386 47.2 115.4 39.2774 115.4 29.2 c
115.4 14.7689 126.9007 6.8 154.8 6.8 c
163.3234 6.8 171.6 7.55 179.2 9 C
177.1004 20.9149 L
169.9684 19.5542 162.2857 18.8 154.8 18.8 c
134.5508 18.8 129.2 22.498 129.2 29.2 c
129.2 32.636 133.5914 35.6 144.8 35.6 c
154.0976 35.6 163.7318 33.289 170 30.2 C
181.2 37.4 L
177.3669 42.139 174.0947 47.4031 171.3843 53.2 C
190.2 53.2 L
190.2 64.8 L
166.9585 64.8 L
166.2696 67.0637 165.6539 69.3976 165.1097 71.8 C
f
451.8 408.8 m
461.425 408.8 479.1209 411.0313 485.8 413 C
484.6 417.9 L
478.8058 416.1921 461.4212 413.8 451.8 413.8 c
429.551 413.8 420.4 420.5134 420.4 430.4 c
420.4 435.2714 422.6917 439.7481 429.4 445.6 C
426 449.2 L
417.7917 442.0396 415.2 436.5297 415.2 430.4 c
415.2 417.4233 426.2669 408.8 451.8 408.8 c
f
476.8 486.4 m
423.2 486.4 L
423.2 481.4 L
476.8 481.4 L
476.8 486.4 L
f
451.8 308.5 m
461.425 308.5 479.4209 310.7313 486.1 312.7 C
484.525 319.7 L
478.1174 317.8939 461.1923 315.65 451.8 315.65 c
430.8042 315.65 422.3 321.7188 422.3 330.8 c
422.3 335.5492 424.7604 340.2562 431 345.35 C
426.25 350.55 L
418.1771 343.9475 414.8 337.3045 414.8 330.8 c
414.8 317.0234 426.2669 308.5 451.8 308.5 c
f
451.8 208.2 m
461.425 208.2 479.7209 210.4313 486.4 212.4 C
484.45 221.5 L
477.4289 219.5957 460.9634 217.5 451.8 217.5 c
432.0574 217.5 424.2 222.9242 424.2 231.2 c
424.2 235.827 426.8291 240.7643 432.6 245.1 C
426.5 251.9 L
418.5625 245.8555 414.4 238.0793 414.4 231.2 c
414.4 216.6235 426.2669 208.2 451.8 208.2 c
f
451.8 107.9 m
461.425 107.9 480.0209 110.1313 486.7 112.1 C
484.375 123.3 L
476.7404 121.2975 460.7345 119.35 451.8 119.35 c
433.3107 119.35 426.1 124.1296 426.1 131.6 c
426.1 136.1048 428.8979 141.2724 434.2 144.85 C
426.75 153.25 L
418.9479 147.7634 414 138.8541 414 131.6 c
414 116.2236 426.2669 107.9 451.8 107.9 c
f
422.9 380 m
477.1 380 L
477.1 387.1 L
422.9 387.1 L
422.9 380 L
f
422.6 278.6 m
477.4 278.6 L
477.4 287.8 L
422.6 287.8 L
422.6 278.6 L
f
422.3 177.2 m
477.7 177.2 L
477.7 188.5 L
422.3 188.5 L
422.3 177.2 L
f
484.3 25.1 m
476.0519 22.9993 460.5056 21.2 451.8 21.2 c
434.5639 21.2 428 25.3351 428 32 c
428 36.3826 430.9666 41.7805 435.8 44.6 C
427 54.6 L
419.3333 49.6714 413.6 39.6289 413.6 32 c
413.6 15.8238 426.2669 7.6 451.8 7.6 c
461.425 7.6 480.3209 9.8313 487 11.8 C
484.3 25.1 L
f
422 75.8 m
478 75.8 L
478 89.2 L
422 89.2 L
422 75.8 L
f
373.6 450.2 m
373.6 424.3305 370.658 419.3484 350.7 412.8 C
352.6 408 L
374.4664 415.1746 378.8 422.1253 378.8 450.2 C
378.8 468.2 L
393.8 468.2 L
393.8 473.2 L
378.8 473.2 L
378.8 493 L
373.6 493 L
373.6 473.2 L
337.4 473.2 L
337.4 468.2 L
373.6 468.2 L
373.6 450.2 L
f
321.8 409.2 m
318.0485 423.268 316.4 436.0862 316.4 450 c
316.4 463.9138 318.0485 476.732 321.8 490.8 C
316.8 491.8 L
313.2 478.3 311.2 465.5 311.2 450 c
311.2 434.5 313.2 421.7 316.8 408.2 C
321.8 409.2 L
f
323.7 309.2 m
319.9832 323.138 318.2 336.2229 318.2 350 c
318.2 363.7771 319.9832 376.862 323.7 390.8 C
316.5 391.9 L
312.9 378.4 310.9 365.5 310.9 350 c
310.9 334.5 312.9 321.6 316.5 308.1 C
323.7 309.2 L
f
325.6 209.2 m
321.9178 223.008 320 236.3596 320 250 c
320 263.6404 321.9178 276.9919 325.6 290.8 C
316.2 292 L
312.6 278.5 310.6 265.5 310.6 250 c
310.6 234.5 312.6 221.5 316.2 208 C
325.6 209.2 L
f
327.5 109.2 m
323.8525 122.8781 321.8 136.4963 321.8 150 c
321.8 163.5037 323.8525 177.1219 327.5 190.8 C
315.9 192.1 L
312.3 178.6 310.3 165.5 310.3 150 c
310.3 134.5 312.3 121.4 315.9 107.9 C
327.5 109.2 L
f
371.9 350.1 m
371.9 325.1327 369.4407 321.0458 350.1 314.7 C
352.7 307.9 L
374.9996 315.2167 379.3 322.1332 379.3 350.1 C
379.3 366.7 L
394.1 366.7 L
394.1 373.7 L
379.3 373.7 L
379.3 393.1 L
371.9 393.1 L
371.9 373.7 L
337.6 373.7 L
337.6 366.7 L
371.9 366.7 L
371.9 350.1 L
f
370.2 250 m
370.2 225.9349 368.2234 222.7433 349.5 216.6 C
352.8 207.8 L
375.5329 215.2589 379.8 222.1411 379.8 250 C
379.8 265.2 L
394.4 265.2 L
394.4 274.2 L
379.8 274.2 L
379.8 293.2 L
370.2 293.2 L
370.2 274.2 L
337.8 274.2 L
337.8 265.2 L
370.2 265.2 L
370.2 250 L
f
368.5 149.9 m
368.5 126.7372 367.0061 124.4407 348.9 118.5 C
352.9 107.7 L
376.0661 115.301 380.3 122.149 380.3 149.9 C
380.3 163.7 L
394.7 163.7 L
394.7 174.7 L
380.3 174.7 L
380.3 193.3 L
368.5 193.3 L
368.5 174.7 L
338 174.7 L
338 163.7 L
368.5 163.7 L
368.5 149.9 L
f
380.8 93.4 m
366.8 93.4 L
366.8 75.2 L
338.2 75.2 L
338.2 62.2 L
366.8 62.2 L
366.8 49.8 L
366.8 27.5394 365.7888 26.1382 348.3 20.4 C
353 7.6 L
376.5994 15.3432 380.8 22.1569 380.8 49.8 C
380.8 62.2 L
395 62.2 L
395 75.2 L
380.8 75.2 L
380.8 93.4 L
f
315.6 92.2 m
312 78.7 310 65.5 310 50 c
310 34.5 312 21.3 315.6 7.8 C
329.4 9.2 L
325.7871 22.7481 323.6 36.633 323.6 50 c
323.6 63.367 325.7871 77.2519 329.4 90.8 C
315.6 92.2 L
f
96.6 437.2 m
91.475 452.625 84.25 469.1667 76.6 483 C
72 480.6 L
79.4664 467.0988 86.6003 450.648 91.6 435.6 C
96.6 437.2 L
f
12.6 410.7 m
22.3513 428.6268 28.7712 447.1934 33.2213 470.2 C
44.8 470.2 L
60.8834 470.2 62.6 468.033 62.6 445.4 c
62.6 422.6336 57.6013 414.2 50.8 414.2 c
45.8141 414.2 42.1929 415.0768 36.5 417.8 C
34.4 413.2 L
40.5842 410.2417 44.8948 409.2 50.8 409.2 c
60.8426 409.2 67.8 418.7462 67.8 445.4 c
67.8 470.8655 64.6534 475.2 44.8 475.2 C
34.145 475.2 L
35.2108 481.2395 36.1558 487.5829 37 494.3 C
31.8 494.8 L
30.9431 487.9823 29.9229 481.4627 28.7571 475.2 C
9.2 475.2 L
9.2 470.2 L
27.7867 470.2 L
23.2194 447.8198 16.6038 429.0173 8 413.2 C
12.6 410.7 L
f
96.7 337.1 m
92.0021 352.5521 85.249 369.2472 78 383.5 C
71.5 380.7 L
78.5516 366.9462 85.2002 350.3193 89.8 335.1 C
96.7 337.1 L
f
96.8 237 m
92.5292 252.4792 86.2481 269.3278 79.4 284 C
71 280.8 L
77.6369 266.7936 83.8002 249.9906 88 234.6 C
96.8 237 L
f
96.9 136.9 m
93.0562 152.4062 87.2471 169.4084 80.8 184.5 C
70.5 180.9 L
76.7221 166.6411 82.4001 149.662 86.2 134.1 C
96.9 136.9 L
f
33.4973 368.4 m
44.4 368.4 L
59.2478 368.4 60.7 366.5489 60.7 345.5 c
60.7 323.8452 56.1968 316.2 50 316.2 c
45.4157 316.2 41.3482 317.1651 36 319.6 C
33.5 313.1 L
39.4069 310.2719 44.2948 309.1 50.2 309.1 c
61.0341 309.1 68.2 318.7491 68.2 345.5 c
68.2 370.7876 64.7671 375.3 44.4 375.3 C
34.7776 375.3 L
35.8264 381.3165 36.7607 387.6224 37.6 394.3 C
30.3 394.9 L
29.4414 388.0687 28.4316 381.5595 27.2828 375.3 C
8.9 375.3 L
8.9 368.4 L
25.933 368.4 L
21.6011 347.5414 15.506 329.6208 7.4 313 C
14.1 310.1 L
23.1277 328.4557 29.1949 346.5586 33.4973 368.4 C
f
33.7695 266.6 m
44 266.6 L
57.6122 266.6 58.8 265.0649 58.8 245.6 c
58.8 225.0569 54.7923 218.2 49.2 218.2 c
45.0174 218.2 40.5036 219.2533 35.5 221.4 C
32.6 213 L
38.2296 210.3021 43.6949 209 49.6 209 c
61.2257 209 68.6 218.752 68.6 245.6 c
68.6 270.7096 64.8808 275.4 44 275.4 C
35.4079 275.4 L
36.4395 281.3955 37.3655 287.6602 38.2 294.3 C
28.8 295 L
27.9397 288.155 26.9426 281.657 25.8127 275.4 C
8.6 275.4 L
8.6 266.6 L
24.1055 266.6 L
20.0239 247.1955 14.4084 230.085 6.8 212.8 C
15.6 209.5 L
23.922 228.2017 29.628 245.8769 33.7695 266.6 C
f
34.0616 164.8 m
43.6 164.8 L
55.9767 164.8 56.9 163.5808 56.9 145.7 c
56.9 126.2686 53.3878 120.2 48.4 120.2 c
44.619 120.2 39.6589 121.3416 35 123.2 C
31.7 112.9 L
37.0523 110.3323 43.0949 108.9 49 108.9 c
61.4172 108.9 69 118.7549 69 145.7 c
69 170.6317 64.9944 175.5 43.6 175.5 C
36.0419 175.5 L
37.0556 181.4736 37.9705 187.7001 38.8 194.3 C
27.3 195.1 L
26.438 188.2412 25.4557 181.7553 24.3469 175.5 C
8.3 175.5 L
8.3 164.8 L
22.2681 164.8 L
18.4492 146.788 13.306 130.3876 6.2 112.6 C
17.1 108.9 L
24.7397 127.8723 30.0935 145.1315 34.0616 164.8 C
f
70 81 m
75.8074 66.4885 81 49.3333 84.4 33.6 C
97 36.8 L
93.5833 52.3333 88.2461 69.4889 82.2 85 C
70 81 L
f
43.2 75.6 m
36.6769 75.6 L
37.6721 81.5521 38.5756 87.7405 39.4 94.3 C
25.8 95.2 L
24.9362 88.3274 23.9712 81.8548 22.8858 75.6 C
8 75.6 L
8 63 L
20.4685 63 L
16.9197 46.2875 12.2062 30.5353 5.6 12.4 C
18.6 8.3 L
25.5774 27.4543 30.5662 44.3354 34.3484 63 C
43.2 63 L
54.3411 63 55 62.0968 55 45.8 c
55 27.4803 51.9833 22.2 47.6 22.2 c
44.2207 22.2 38.8143 23.4299 34.5 25 C
30.8 12.8 L
35.875 10.3625 42.4949 8.8 48.4 8.8 c
61.6087 8.8 69.4 18.7578 69.4 45.8 c
69.4 70.5538 65.1081 75.6 43.2 75.6 C
f
234.6 52.2 m
234.6 56.3661 246.5151 59.9269 275.4 84.8 C
265 94.2 L
224.7377 59.5297 218.6 63.4016 218.6 52.2 c
218.6 39.2264 228.3312 44.6827 268.8 5.8 C
279.8 15.2 L
245.5 47.8667 234.6 47.9308 234.6 52.2 c
f
269.1 106 m
278.3 114 L
244.0655 146.6759 232.6 147.3464 232.6 152.2 c
232.6 156.9815 244.5012 160.4261 274.2 186 C
265.5 194 L
226.0884 160.0623 219.2 162.6947 219.2 152.2 c
219.2 140.1448 228.9537 144.5728 269.1 106 C
f
269.4 206.2 m
276.8 212.8 L
242.6311 245.4851 230.6 246.762 230.6 252.2 c
230.6 257.5968 242.4874 260.9253 273 287.2 C
266 293.8 L
227.4391 260.5948 219.8 261.9878 219.8 252.2 c
219.8 241.0632 229.5762 244.4629 269.4 206.2 C
f
269.7 306.4 m
275.3 311.6 L
241.1966 344.2944 228.6 346.1776 228.6 352.2 c
228.6 358.2122 240.4735 361.4245 271.8 388.4 C
266.5 393.6 L
228.7899 361.1274 220.4 361.281 220.4 352.2 c
220.4 341.9817 230.1988 344.353 269.7 306.4 C
f
270 406.6 m
273.8 410.4 L
239.7622 443.1036 226.6 445.5932 226.6 452.2 c
226.6 458.8276 238.4597 461.9237 270.6 489.6 C
267 493.4 L
230.1406 461.66 221 460.5741 221 452.2 c
221 442.9001 230.8213 444.2431 270 406.6 C
f
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
