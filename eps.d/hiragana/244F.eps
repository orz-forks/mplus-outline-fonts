%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(TM) 7.0
%%For: (coz) (underforest)
%%Title: (244F.eps)
%%CreationDate: (1/29/04) (9:43 AM)
%%BoundingBox: 0 0 500 501
%%HiResBoundingBox: 0 0.4 500 500.4
%%DocumentProcessColors: Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_ColorImage_AI6 1.1 0
%%+ procset Adobe_Illustrator_AI5 1.2 0
%%+ procset Adobe_cshow 2.0 8
%AI5_FileFormat 3
%AI3_ColorUsage: Black&White
%AI3_IncludePlacedImages
%AI7_ImageSettings: 1
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 8.5 0 0 0 0 0 0 0 0 -1 -1
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () 
%AI3_TemplateBox: 244.5 256.5 244.5 256.5
%AI3_TileBox: -41.5 -119.5 534.5 642.5
%AI3_DocumentPreview: Macintosh_ColorPic
%AI5_ArtSize: 592 840
%AI5_RulerUnits: 2
%AI5_ArtFlags: 1 0 0 1 0 0 1 1 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI5_OpenToView: -139.5 520.5 1 794 556 25 0 0 3 40 0 0
%AI5_OpenViewLayers: 5
%%PageOrigin:-41.5 -119.5
%%AI3_PaperRect:-10 808 585 -34
%%AI3_Margin:10 -43 -9 34
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 25 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			0
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			1
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop 
			0 eq
			{
				pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				pop
				3
				{
					1 exch sub
					3 index mul 
					1 exch sub
					3 1 roll
				} repeat
				4 -1 roll pop
				setrgbcolor
			} ifelse
		}
		def
	} if
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	level2?
	{
		gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
		add add add 4 eq
	}
	{
		1 0 0 0 testCMYKColorThrough
		0 1 0 0 testCMYKColorThrough
		0 0 1 0 testCMYKColorThrough
		0 0 0 1 testCMYKColorThrough
		and and and
	} ifelse
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.1 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 24 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize
{ 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6
	{
		dup type /arraytype eq
		{
			dup xcheck
			{
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not
{
	/Adobe_ColorImage_AI6_Vars 15 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/channelcount 0 def
	/sourcecount 0 def
	/sourcearray 4 array def
	/plateindex -1 def
	/XIMask 0 def
	/XIBinary 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIBuffer null def
	/XIDataProc null def
	/XIVersion 6 def
end
/WalkRGBString null def
/WalkCMYKString null def
/StuffRGBIntoGrayString null def
/RGBToGrayImageProc null def
/StuffCMYKIntoGrayString null def
/CMYKToGrayImageProc null def
/ColorImageCompositeEmulator null def
/SeparateCMYKImageProc null def
/FourEqual null def
/TestPlateIndex null def
currentdict /_colorimage known not
{
	/colorimage where
	{
		/colorimage get /_colorimage exch def
	}
	{
		/_colorimage null def
	} ifelse
} if
/_currenttransfer systemdict /currenttransfer get def
/colorimage null def
/XI null def
/WalkRGBString
{
	0 3 index
	dup length 1 sub 0 3 3 -1 roll
	{
		3 getinterval { } forall
		5 index exec
		3 index
	} for
	
	 5 { pop } repeat
} def
/WalkCMYKString
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll
	{
		4 getinterval { } forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/StuffRGBIntoGrayString
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/RGBToGrayImageProc
{	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		dup length 3 idiv string
		dup 3 1 roll 
		
		/StuffRGBIntoGrayString load exch
		WalkRGBString
 end
} def
/StuffCMYKIntoGrayString
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/CMYKToGrayImageProc
{	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		dup length 4 idiv string
		dup 3 1 roll 
		
		/StuffCMYKIntoGrayString load exch
		WalkCMYKString
 end
} def
/ColorImageCompositeEmulator
{
	pop true eq
	{
		Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat
	}
	{
		Adobe_ColorImage_AI6_Vars /channelcount get 1 ne
		{
			Adobe_ColorImage_AI6_Vars begin
				sourcearray 0 3 -1 roll put
			
				channelcount 3 eq 
				{ 
					/RGBToGrayImageProc 
				}
				{ 
					/CMYKToGrayImageProc
				} ifelse
				load
		 end
		} if
		image
	} ifelse
} def
/SeparateCMYKImageProc
{	
	Adobe_ColorImage_AI6_Vars begin
		sourcecount 0 ne
		{
			sourcearray plateindex get exec
		}
		{			
			sourcearray 0 get exec
			
			dup length 4 idiv string
			
			0 2 index
			
			plateindex 4 2 index length 1 sub
			{
				get 255 exch sub
				
				3 copy put pop 1 add
				
				2 index
			} for
			pop pop exch pop
		} ifelse
 end
} def
	
/FourEqual
{
	4 index ne
	{
		pop pop pop false
	}
	{
		4 index ne
		{
			pop pop false
		}
		{
			4 index ne
			{
				pop false
			}
			{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/TestPlateIndex
{
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where
		{
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 FourEqual 
			{ 
				/plateindex 0 def
			}
			{
				0 1 0 0 FourEqual
				{ 
					/plateindex 1 def
				}
				{
					0 0 1 0 FourEqual
					{
						/plateindex 2 def
					}
					{
						0 0 0 1 FourEqual
						{ 
							/plateindex 3 def
						}
						{
							0 0 0 0 FourEqual
							{
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/colorimage
{
	Adobe_ColorImage_AI6_Vars begin
		/channelcount 1 index def
		/sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def
		4 sourcecount add index dup 
		8 eq exch 1 eq or not
 end
	
	{
		/_colorimage load null ne
		{
			_colorimage
		}
		{
			Adobe_ColorImage_AI6_Vars /sourcecount get
			7 add { pop } repeat
		} ifelse
	}
	{
		dup 3 eq
		TestPlateIndex
		dup -1 eq exch 5 eq or or
		{
			/_colorimage load null eq
			{
				ColorImageCompositeEmulator
			}
			{
				dup 1 eq
				{
					pop pop image
				}
				{
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
					{
						gsave
						
						0 _currenttransfer exec
						1 _currenttransfer exec
						eq
						{ 0 _currenttransfer exec 0.5 lt }
						{ 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse
						
						{ { pop 0 } } { { pop 1 } } ifelse
						systemdict /settransfer get exec
					} if
					
					_colorimage
					
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
					{
						grestore
					} if
				} ifelse
			} ifelse
		}
		{
			dup 1 eq
			{
				pop pop
				image
			}
			{
				pop pop
				Adobe_ColorImage_AI6_Vars begin
					sourcecount -1 0
					{			
						exch sourcearray 3 1 roll put
					} for
					/SeparateCMYKImageProc load
			 end
				systemdict /image get exec
			} ifelse
		} ifelse
	} ifelse
} def
/XG
{
	pop pop
} def
/XF
{
	13 {pop} repeat
} def
/Xh
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIMask exch 0 ne def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		XIMask
		{
			/_lp /null ddef
			_fc
			/_lp /imagemask ddef
		}
		if
		/XIVersion 7 def
 end
} def
/XH
{
	Adobe_ColorImage_AI6_Vars begin
		/XIVersion 6 def
		grestore
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIMask exch 0 ne def
		/XIBinary exch 0 ne def
		pop
		pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq
		{
			XIImageWidth 8 div ceiling cvi
		}
		{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIBuffer exch string def
		XIBinary
		{
			/XIDataProc { currentfile XIBuffer readstring pop } def
			XIVersion 6 le
			{
				currentfile 128 string readline pop pop
			}
			if
		}
		{
			/XIDataProc { currentfile XIBuffer readhexstring pop } def
		} ifelse
		
		XIVersion 6 le
		{
			0 0 moveto
			XIImageMatrix concat
			XIImageWidth XIImageHeight scale
			XIMask
			{
				/_lp /null ddef
				_fc
				/_lp /imagemask ddef
			} if
		} if
		
		XIMask
		{
			XIImageWidth XIImageHeight
			false
			[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
			/XIDataProc load
			imagemask
		}
		{
			XIImageWidth XIImageHeight
			XIBitsPerPixel
			[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
			/XIDataProc load
			
			XIChannelCount 1 eq
			{
				gsave
				0 setgray
				image
				grestore
			}
			{
				false
				XIChannelCount
				colorimage
			} ifelse
		} ifelse
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 7.0 Full Prolog)
%%Version: 1.2 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 107 dict dup begin
put
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XA
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/_rgbtocmyk
{
3
	{
	1 exch sub 3 1 roll
	} repeat
3 copy 1 4 1 roll
3
	{
	3 index 2 copy gt
		{
		exch
		} if
	pop 4 1 roll
	} repeat
pop pop pop
4 1 roll
3
	{
	3 index sub
	3 1 roll
	} repeat
4 -1 roll
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq
	{
		findcmykcustomcolor
	}
	{
		/findrgbcustomcolor where not {
			4 1 roll _rgbtocmyk
			5 -1 roll
			findcmykcustomcolor
		}
		{
			pop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq
	{
		findcmykcustomcolor
	}
	{
		/findrgbcustomcolor where not {
			4 1 roll _rgbtocmyk
			5 -1 roll
			findcmykcustomcolor
		}
		{
			pop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%EndProlog
%%BeginSetup
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_BeginPalette
0 0 Pb
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 0 1 1 0 0 3 79 79 255 Lb
(glyphs) Ln
0 A
u
1 Ap
800 Ar
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
0 XR
100 400.4 m
100 500.4 L
0 500.4 L
0 400.4 L
100 400.4 L
n
500 400.4 m
500 500.4 L
400 500.4 L
400 400.4 L
500 400.4 L
n
200 400.4 m
200 500.4 L
100 500.4 L
100 400.4 L
200 400.4 L
n
300 400.4 m
300 500.4 L
200 500.4 L
200 400.4 L
300 400.4 L
n
400 400.4 m
400 500.4 L
300 500.4 L
300 400.4 L
400 400.4 L
n
100 300.4 m
100 400.4 L
0 400.4 L
0 300.4 L
100 300.4 L
n
500 300.4 m
500 400.4 L
400 400.4 L
400 300.4 L
500 300.4 L
n
200 300.4 m
200 400.4 L
100 400.4 L
100 300.4 L
200 300.4 L
n
300 300.4 m
300 400.4 L
200 400.4 L
200 300.4 L
300 300.4 L
n
400 300.4 m
400 400.4 L
300 400.4 L
300 300.4 L
400 300.4 L
n
100 200.4 m
100 300.4 L
0 300.4 L
0 200.4 L
100 200.4 L
n
500 200.4 m
500 300.4 L
400 300.4 L
400 200.4 L
500 200.4 L
n
200 200.4 m
200 300.4 L
100 300.4 L
100 200.4 L
200 200.4 L
n
300 200.4 m
300 300.4 L
200 300.4 L
200 200.4 L
300 200.4 L
n
400 200.4 m
400 300.4 L
300 300.4 L
300 200.4 L
400 200.4 L
n
100 100.4 m
100 200.4 L
0 200.4 L
0 100.4 L
100 100.4 L
n
500 100.4 m
500 200.4 L
400 200.4 L
400 100.4 L
500 100.4 L
n
200 100.4 m
200 200.4 L
100 200.4 L
100 100.4 L
200 100.4 L
n
300 100.4 m
300 200.4 L
200 200.4 L
200 100.4 L
300 100.4 L
n
400 100.4 m
400 200.4 L
300 200.4 L
300 100.4 L
400 100.4 L
n
100 0.4 m
100 100.4 L
0 100.4 L
0 0.4 L
100 0.4 L
n
500 0.4 m
500 100.4 L
400 100.4 L
400 0.4 L
500 0.4 L
n
200 0.4 m
200 100.4 L
100 100.4 L
100 0.4 L
200 0.4 L
n
300 0.4 m
300 100.4 L
200 100.4 L
200 0.4 L
300 0.4 L
n
400 0.4 m
400 100.4 L
300 100.4 L
300 0.4 L
400 0.4 L
n
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
0 Ap
0 O
0 g
240.2 465.8 m
240.2 450.4625 263.4 442.65 263.4 428.6 c
263.4 418.2822 257.2916 412.6 246.2 412.6 c
241.487 412.6 235.2686 414.3744 231.8 416.6 C
229.4 412.2 L
233.4 409.6334 240.2 407.6 246.2 407.6 c
260.1431 407.6 268.6 415.6691 268.6 428.6 c
268.6 445.4333 245.4 453.3 245.4 465.8 c
245.4 476.3833 252.3667 482.7729 272.8 484.4 C
272.8 489.2 L
226.2 489.2 L
226.2 484.4 L
252.8508 484.4 L
244.5145 480.2194 240.2 473.7778 240.2 465.8 c
f
221.9 454.4 m
217 455.4 L
214.4784 443.5953 209.7851 431.0532 204.2 421 C
208.7 418.8 L
214.5596 429.3473 219.2953 442.2063 221.9 454.4 C
f
295.8 420.4 m
292.817 431.4775 285.9616 446.0033 279.2 456.2 C
274.9 453.6 L
281.5349 443.5944 288.2502 429.2114 291 419 C
295.8 420.4 L
f
238.7 364.9 m
238.7 348.8635 261 342.6166 261 329.1 c
261 319.6792 255.7068 314.6 245.8 314.6 c
241.3107 314.6 235.5972 316.1974 232 318.4 C
228.9 312.1 L
232.9 309.5334 239.8 307.5 245.8 307.5 c
260.1873 307.5 268.7 315.6971 268.7 329.1 c
268.7 346.4333 246.4 352.9 246.4 364.9 c
246.4 374.8566 253.2391 381.1026 273.3 382.7 C
273.3 389.5 L
225.7 389.5 L
225.7 382.7 L
250.378 382.7 L
242.6397 378.2912 238.7 372.0513 238.7 364.9 c
f
237.2 264 m
237.2 247.2646 258.6 242.5833 258.6 229.6 c
258.6 221.0762 254.1221 216.6 245.4 216.6 c
241.1345 216.6 235.9259 218.0205 232.2 220.2 C
228.4 212 L
232.4 209.4334 239.4 207.4 245.4 207.4 c
260.2315 207.4 268.8 215.725 268.8 229.6 c
268.8 247.4333 247.4 252.5 247.4 264 c
247.4 273.3298 254.1114 279.4322 273.8 281 C
273.8 289.8 L
225.2 289.8 L
225.2 281 L
248.0557 281 L
240.8368 276.4608 237.2 270.4584 237.2 264 c
f
274.3 179.3 m
274.3 190.1 L
224.7 190.1 L
224.7 179.3 L
245.8198 179.3 L
239.0746 174.7036 235.7 168.9595 235.7 163.1 c
235.7 145.6656 256.2 142.55 256.2 130.1 c
256.2 122.4732 252.5373 118.6 245 118.6 c
240.9582 118.6 236.2546 119.8436 232.4 122 C
227.9 111.9 L
231.9 109.3334 239 107.3 245 107.3 c
260.2757 107.3 268.9 115.753 268.9 130.1 c
268.9 148.4333 248.4 152.1 248.4 163.1 c
248.4 171.803 254.9838 177.7619 274.3 179.3 C
f
223.6 354.1 m
216.7 355.5 L
214.1171 343.4082 209.3584 330.7251 203.9 320.9 C
210.275 317.9 L
216.1605 328.4939 220.9223 341.5647 223.6 354.1 C
f
225.3 253.8 m
216.4 255.6 L
213.7557 243.2211 208.9316 230.397 203.6 220.8 C
211.85 217 L
217.7613 227.6404 222.5493 240.923 225.3 253.8 C
f
227 153.5 m
216.1 155.7 L
213.3943 143.034 208.5049 130.0689 203.3 120.7 C
213.425 116.1 L
219.3622 126.787 224.1763 140.2814 227 153.5 C
f
296.1 320.3 m
293.117 331.3775 286.2616 346.1033 279.5 356.3 C
273.4 352.8 L
279.8281 343.1063 286.5685 328.5432 289.3 318.4 C
296.1 320.3 L
f
271.9 252 m
278.1212 242.6182 284.8869 227.8751 287.6 217.8 C
296.4 220.2 L
293.417 231.2775 286.5616 246.2033 279.8 256.4 C
271.9 252 L
f
296.7 120.1 m
293.717 131.1775 286.8616 146.3033 280.1 156.5 C
270.4 151.2 L
276.4144 142.1302 283.2053 127.2069 285.9 117.2 C
296.7 120.1 L
f
249.4 62.2 m
249.4 70.2762 255.8562 76.0915 274.8 77.6 C
274.8 90.4 L
224.2 90.4 L
224.2 77.6 L
243.6237 77.6 L
237.3253 73.0048 234.2 67.5301 234.2 62.2 c
234.2 44.0666 253.8 42.5166 253.8 30.6 c
253.8 23.8703 250.9525 20.6 244.6 20.6 c
240.7819 20.6 236.5833 21.6667 232.6 23.8 C
227.4 11.8 L
231.4 9.2334 238.6 7.2 244.6 7.2 c
260.3199 7.2 269 15.781 269 30.6 c
269 49.4333 249.4 51.7 249.4 62.2 c
f
215.8 55.8 m
213.033 42.8469 208.0782 29.7408 203 20.6 C
215 15.2 L
220.9631 25.9336 225.8033 39.6398 228.7 53.2 C
215.8 55.8 L
f
268.9 50.4 m
274.7075 41.6421 281.5236 26.5388 284.2 16.6 C
297 20 L
294.017 31.0775 287.1616 46.4033 280.4 56.6 C
268.9 50.4 L
f
339.6 468.4 m
348.6627 468.4 345.7216 466.7696 392.2 424.2 C
395.8 427.8 L
348.6333 471 350.9333 473.4 339.6 473.4 c
329.6 473.4 328.0333 465.6667 304.2 436.8 C
308.2 433.9 L
331.9629 462.6815 332.8588 468.4 339.6 468.4 c
f
339.7 366.2 m
347.7533 366.2 345.7747 363.9471 390.7 322.8 C
395.9 328.2 L
348.7333 371.4 351.0333 373.8 339.7 373.8 c
329.7 373.8 327.9333 366.0667 304.1 337.2 C
309.8 332.7 L
332.6628 360.5205 333.8004 366.2 339.7 366.2 c
f
339.8 264 m
346.8439 264 345.8277 261.1247 389.2 221.4 C
396 228.6 L
348.8333 271.8 351.1333 274.2 339.8 274.2 c
329.8 274.2 327.8333 266.4667 304 237.6 C
311.4 231.5 L
333.3627 258.3595 334.7419 264 339.8 264 c
f
339.9 161.8 m
345.9344 161.8 345.8808 158.3023 387.7 120 C
396.1 129 L
348.9333 172.2 351.2333 174.6 339.9 174.6 c
329.9 174.6 327.7333 166.8667 303.9 138 C
313 130.3 L
334.0626 156.1985 335.6835 161.8 339.9 161.8 c
f
303.8 38.4 m
314.6 29.1 L
334.7625 54.0375 336.625 59.6 340 59.6 c
345.025 59.6 345.9338 55.4798 386.2 18.6 C
396.2 29.4 L
349.0333 72.6 351.3333 75 340 75 c
330 75 327.6333 67.2667 303.8 38.4 C
f
113.2 439.2 m
113.2 421.2865 126.4121 408.2 143.2 408.2 c
166.0975 408.2 177.4 423.1127 177.4 445.8 c
177.4 454.6982 175.8892 465.3892 172.9044 475.7657 C
179.2142 468.6063 186.0486 462.2441 192.6 457.4 C
195.8 461.2 L
186.0625 468.4 175.5931 478.8861 167.8 489.8 C
163.8 487.2 L
169.2865 474.6669 172.4 458.6844 172.4 445.8 c
172.4 430.8368 167.4994 413 143.2 413 c
128.8336 413 118.2 424.2635 118.2 439.2 c
118.2 456.2529 127.716 471.5085 144.8 481 C
144.8 486.6 L
110 486.6 L
110 481.8 L
137.5208 481.8 L
122.3012 471.4821 113.2 455.6627 113.2 439.2 c
f
112.9 339.5 m
112.9 321.0532 126.4121 308.1 143.2 308.1 c
166.0975 308.1 177.7 323.1127 177.7 345.8 c
177.7 353.4483 176.4895 362.5535 174.2021 371.6396 C
179.7922 365.6491 185.7356 360.2623 191.5 356 C
195.9 361.6 L
186.1625 368.8 175.5931 379.3861 167.8 390.3 C
162.1 386.4 L
167.5857 373.6989 170.4 359.3957 170.4 345.8 c
170.4 330.3443 164.8604 315 143.2 315 c
130.0023 315 120.3 325.1989 120.3 339.5 c
120.3 355.9989 129.0106 370.6277 144.8 379.4 C
144.8 387.1 L
109.9 387.1 L
109.9 380.3 L
134.6118 380.3 L
120.8992 369.9758 112.9 354.9644 112.9 339.5 c
f
112.6 239.8 m
112.6 220.8199 126.4121 208 143.2 208 c
166.0975 208 178 223.1127 178 245.8 c
178 252.3389 177.0572 260.0394 175.3052 267.8929 C
180.2183 262.8815 185.3619 258.3251 190.4 254.6 C
196 262 L
186.2625 269.2 175.5931 279.8861 167.8 290.8 C
160.4 285.6 L
165.8849 272.7309 168.4 260.107 168.4 245.8 c
168.4 229.8518 162.2214 217 143.2 217 c
131.171 217 122.4 226.1344 122.4 239.8 c
122.4 255.745 130.3053 269.747 144.8 277.8 C
144.8 287.6 L
109.8 287.6 L
109.8 278.8 L
131.8527 278.8 L
119.5716 268.5235 112.6 254.2997 112.6 239.8 c
f
112.3 140.1 m
112.3 120.5866 126.4121 107.9 143.2 107.9 c
166.0975 107.9 178.3 123.1127 178.3 145.8 c
178.3 151.3253 177.575 157.7515 176.2546 164.4128 C
180.5246 160.2452 184.9421 156.4223 189.3 153.2 C
196.1 162.3999 L
186.3625 169.6 175.5931 180.3861 167.8 191.3 C
158.7 184.8 L
164.1842 171.7629 166.4 160.8183 166.4 145.8 c
166.4 129.3593 159.5824 119 143.2 119 c
132.3397 119 124.5 127.0698 124.5 140.1 c
124.5 155.491 131.5999 168.8663 144.8 176.2 C
144.8 188.1 L
109.7 188.1 L
109.7 177.3 L
129.2507 177.3 L
118.3254 167.1199 112.3 153.6691 112.3 140.1 c
f
167.8 91.8 m
157 84 L
162.4834 70.7949 164.4 61.5296 164.4 45.8 c
164.4 28.8668 156.9434 21 143.2 21 c
133.5084 21 126.6 28.0053 126.6 40.4 c
126.6 55.2371 132.8945 67.9855 144.8 74.6 C
144.8 88.6 L
109.6 88.6 L
109.6 75.8 L
126.7571 75.8 L
117.1266 65.7624 112 53.0634 112 40.4 c
112 20.3533 126.4121 7.8 143.2 7.8 c
166.0975 7.8 178.6 23.1127 178.6 45.8 c
178.6 50.3769 178.0663 55.6231 177.1049 61.1222 C
180.753 57.7039 184.492 54.5417 188.2 51.8 C
196.2 62.8 L
186.4625 70 175.5931 80.8861 167.8 91.8 C
f
19.8 409.6 m
16.0485 423.668 14.4 436.4862 14.4 450.4 c
14.4 464.3138 16.0485 477.132 19.8 491.2 C
15 492.2 L
11.4 478.7 9.4 465.9 9.4 450.4 c
9.4 434.9 11.4 422.1 15 408.6 C
19.8 409.6 L
f
*u
1 D
54.2 441 m
42.0212 441 34.4 433.8345 34.4 424.2 c
34.4 414.2886 42.1322 407.4 54.2 407.4 c
66.6435 407.4 74.8 415.4678 74.8 429.2 C
74.8 430.1595 L
80.0748 426.9337 84.6789 422.5712 88 417.4 C
92 420.2 L
87.738 426.8361 81.6937 432.1741 74.8 435.7877 C
74.8 470.4 L
92 470.4 L
92 475.2 L
74.8 475.2 L
74.8 494.2 L
69.8 494.2 L
69.8 475.2 L
37.8 475.2 L
37.8 470.4 L
69.8 470.4 L
69.8 438.046 L
64.8029 439.9546 59.5063 441 54.2 441 c
f
0 D
69.8 429.2 m
69.8 418.0631 63.9077 412.2 54.2 412.2 c
44.7809 412.2 39.4 416.9648 39.4 424.2 c
39.4 431.3231 44.7544 436.2 54.2 436.2 c
59.5167 436.2 64.847 434.967 69.8 432.7776 C
69.8 429.2 L
f
*U
21.8 309.6 m
18.0832 323.538 16.35 336.6229 16.35 350.4 c
16.35 364.1771 18.0832 377.262 21.8 391.2 C
14.7 392.3 L
11.1 378.8 9.1 365.9 9.1 350.4 c
9.1 334.9 11.1 322 14.7 308.5 C
21.8 309.6 L
f
23.8 209.6 m
20.1178 223.408 18.3 236.7596 18.3 250.4 c
18.3 264.0404 20.1178 277.392 23.8 291.2 C
14.4 292.4 L
10.8 278.9 8.8 265.9 8.8 250.4 c
8.8 234.9 10.8 221.9 14.4 208.4 C
23.8 209.6 L
f
25.8 109.6 m
22.1525 123.2781 20.25 136.8963 20.25 150.4 c
20.25 163.9037 22.1525 177.5219 25.8 191.2 C
14.1 192.5 L
10.5 179 8.5 165.9 8.5 150.4 c
8.5 134.9 10.5 121.8 14.1 108.3 C
25.8 109.6 L
f
*u
1 D
54.7 307.3 m
67.3604 307.3 75.572 315.3005 75.689 328.8135 C
79.9442 325.7241 83.7539 321.7651 86.75 317.1 C
92.45 321 L
87.9123 328.0653 82.1551 333.534 75.7 337.2399 C
75.7 368.9 L
92.3 368.9 L
92.3 375.7 L
75.7 375.7 L
75.7 394.3 L
68.6 394.3 L
68.6 375.7 L
37.9 375.7 L
37.9 368.9 L
68.6 368.9 L
68.6 340.494 L
64.1342 342.0742 59.4559 342.9 54.7 342.9 c
42.2823 342.9 34.2 335.0984 34.2 325.1 c
34.2 314.7554 42.4627 307.3 54.7 307.3 c
f
0 D
54.7 336.1 m
59.3715 336.1 64.1092 334.9847 68.6 332.954 C
68.6 329.1 L
68.6 319.235 63.5139 314.1 54.7 314.1 c
46.353 314.1 41.4 318.5284 41.4 325.1 c
41.4 331.5619 46.2772 336.1 54.7 336.1 c
f
*U
*u
1 D
55.2 207.2 m
67.6669 207.2 75.8137 214.6408 76.5296 227.1878 C
79.8467 224.3274 82.902 220.8453 85.5 216.8 C
92.9 221.8 L
88.1344 229.2203 82.6303 234.7807 76.6 238.5858 C
76.6 267.4 L
92.6 267.4 L
92.6 276.2 L
76.6 276.2 L
76.6 294.4 L
67.4 294.4 L
67.4 276.2 L
38 276.2 L
38 267.4 L
67.4 267.4 L
67.4 242.8993 L
63.4753 244.1569 59.3975 244.7999 55.2 244.7999 c
42.5435 244.7999 34 236.3623 34 226 c
34 215.2221 42.7933 207.2 55.2 207.2 c
f
0 D
55.2 236 m
59.238 236 63.3854 235.0076 67.4 233.1525 C
67.4 229 L
67.4 220.4069 63.12 216 55.2 216 c
47.925 216 43.4 220.0921 43.4 226 c
43.4 231.8007 47.7999 236 55.2 236 c
f
*U
*u
1 D
55.7 107.1 m
67.8348 107.1 75.8784 113.8676 77.2637 125.2908 C
79.7502 122.7659 82.1085 119.8344 84.25 116.5 C
93.35 122.6 L
88.3999 130.3075 83.1324 135.9913 77.5 139.9008 C
77.5 165.9 L
92.9 165.9 L
92.9 176.7 L
77.5 176.7 L
77.5 194.5 L
66.2 194.5 L
66.2 176.7 L
38.1 176.7 L
38.1 165.9 L
66.2 165.9 L
66.2 145.2931 L
62.8238 146.2436 59.3268 146.6999 55.7 146.6999 c
42.8046 146.6999 33.8 137.6262 33.8 126.9 c
33.8 115.6889 43.1238 107.1 55.7 107.1 c
f
0 D
55.7 135.9 m
59.1186 135.9 62.6768 135.0154 66.2 133.3545 C
66.2 128.9 L
66.2 121.5787 62.7261 117.9 55.7 117.9 c
49.4971 117.9 45.4 121.6558 45.4 126.9 c
45.4 132.0395 49.3226 135.9 55.7 135.9 c
f
*U
13.8 92.6 m
10.2 79.1 8.2 65.9 8.2 50.4 c
8.2 34.9 10.2 21.7 13.8 8.2 C
27.8 9.6 L
24.1871 23.1481 22.2 37.033 22.2 50.4 c
22.2 63.767 24.1871 77.6519 27.8 91.2 C
13.8 92.6 L
f
*u
1 D
78.4 41.1204 m
78.4 64.4 L
93.2 64.4 L
93.2 77.2 L
78.4 77.2 L
78.4 94.6 L
65 94.6 L
65 77.2 L
38.2 77.2 L
38.2 64.4 L
65 64.4 L
65 47.6086 L
62.1714 48.2816 59.248 48.5999 56.2 48.5999 c
43.0657 48.5999 33.6 38.8901 33.6 27.8 c
33.6 16.1557 43.4543 7 56.2 7 c
67.864 7 75.7585 13.0052 77.8356 23.1829 C
79.6143 21.0963 81.3466 18.7745 83 16.2 C
93.8 23.4 L
88.7139 31.3191 83.6586 37.1038 78.4 41.1204 C
f
0 D
56.2 19.8 m
51.0692 19.8 47.4 23.2194 47.4 27.8 c
47.4 32.2783 50.8454 35.8 56.2 35.8 c
59.0137 35.8 61.9869 35.0461 65 33.6025 C
65 28.8 L
65 22.7506 62.3323 19.8 56.2 19.8 c
f
*U
419.8 409.6 m
416.0485 423.668 414.4 436.4862 414.4 450.4 c
414.4 464.3138 416.0485 477.132 419.8 491.2 C
415 492.2 L
411.4 478.7 409.4 465.9 409.4 450.4 c
409.4 434.9 411.4 422.1 415 408.6 C
419.8 409.6 L
f
*u
1 D
454.2 441 m
442.0212 441 434.4 433.8345 434.4 424.2 c
434.4 414.2886 442.1322 407.4 454.2 407.4 c
466.6435 407.4 473.8 415.4678 473.8 429.2 C
473.8 430.3959 L
478.9378 427.2137 483.5188 422.8205 487 417.4 C
491 420.2 L
486.6254 427.0115 480.6563 432.4536 473.8 436.0678 C
473.8 459 L
491 459 L
491 463.8 L
473.8 463.8 L
473.8 483.4 L
491 483.4 L
491 488.2 L
437.8 488.2 L
437.8 483.4 L
468.8 483.4 L
468.8 463.8 L
437.8 463.8 L
437.8 459 L
468.8 459 L
468.8 438.313 L
464.1708 440.0477 459.2491 441 454.2 441 c
f
0 D
468.8 429.2 m
468.8 417.5631 463.6854 412.2 454.2 412.2 c
444.7809 412.2 439.4 416.9648 439.4 424.2 c
439.4 431.3231 444.7544 436.2 454.2 436.2 c
459.138 436.2 464.1139 435.0866 468.8 433.029 C
468.8 429.2 L
f
*U
421.8 309.6 m
418.0832 323.538 416.35 336.6229 416.35 350.4 c
416.35 364.1771 418.0832 377.262 421.8 391.2 C
414.7 392.3 L
411.1 378.8 409.1 365.9 409.1 350.4 c
409.1 334.9 411.1 322 414.7 308.5 C
421.8 309.6 L
f
423.8 209.6 m
420.1178 223.408 418.3 236.7596 418.3 250.4 c
418.3 264.0404 420.1178 277.392 423.8 291.2 C
414.4 292.4 L
410.8 278.9 408.8 265.9 408.8 250.4 c
408.8 234.9 410.8 221.9 414.4 208.4 C
423.8 209.6 L
f
425.8 109.6 m
422.1525 123.2781 420.25 136.8963 420.25 150.4 c
420.25 163.9037 422.1525 177.5219 425.8 191.2 C
414.1 192.5 L
410.5 179 408.5 165.9 408.5 150.4 c
408.5 134.9 410.5 121.8 414.1 108.3 C
425.8 109.6 L
f
*u
1 D
454.6 307.3 m
467.1189 307.3 474.3156 315.1078 474.4841 328.6239 C
478.6998 325.5279 482.5612 321.4652 485.75 316.5 C
491.45 320.4 L
486.7366 327.7389 480.9769 333.3163 474.5 337.0128 C
474.5 357.85 L
491.3 357.85 L
491.3 364.55 L
474.5 364.55 L
474.5 381.6 L
491.3 381.6 L
491.3 388.3 L
437.9 388.3 L
437.9 381.6 L
467.4 381.6 L
467.4 364.55 L
437.9 364.55 L
437.9 357.85 L
467.4 357.85 L
467.4 340.2116 L
463.3214 341.5861 459.0357 342.3 454.6 342.3 c
442.1823 342.3 434.2 334.7984 434.2 324.8 c
434.2 314.4554 442.3627 307.3 454.6 307.3 c
f
0 D
454.6 335.6 m
458.8736 335.6 463.2208 334.6325 467.4 332.7769 C
467.4 329.1 L
467.4 318.61 463.0388 314 454.6 314 c
446.253 314 441.4 318.2285 441.4 324.8 c
441.4 331.2619 446.1771 335.6 454.6 335.6 c
f
*U
*u
1 D
455 207.2 m
467.1289 207.2 474.31 214.1958 475.1192 226.5955 C
478.4931 223.6629 481.6746 219.9993 484.5 215.6 C
491.9 220.6 L
486.8871 228.4053 481.3161 234.1327 475.2 237.9218 C
475.2 256.7 L
491.6 256.7 L
491.6 265.3 L
475.2 265.3 L
475.2 279.8 L
491.6 279.8 L
491.6 288.4 L
438 288.4 L
438 279.8 L
466 279.8 L
466 265.3 L
438 265.3 L
438 256.7 L
466 256.7 L
466 242.0429 L
462.4832 243.0774 458.8188 243.6 455 243.6 c
442.3434 243.6 434 235.7623 434 225.4 c
434 214.6221 442.5933 207.2 455 207.2 c
f
0 D
455 235 m
458.6252 235 462.3447 234.1489 466 232.5148 C
466 229 L
466 219.6569 462.3921 215.8 455 215.8 c
447.725 215.8 443.4 219.4921 443.4 225.4 c
443.4 231.2007 447.5999 235 455 235 c
f
*U
*u
1 D
455.4 107.1 m
467.0234 107.1 474.1309 113.2489 475.6025 124.374 C
478.2542 121.6845 480.8275 118.4719 483.25 114.7 C
492.35 120.8 L
487.0798 129.0058 481.6739 134.871 475.9 138.7624 C
475.9 155.55 L
491.9 155.55 L
491.9 166.05 L
475.9 166.05 L
475.9 178 L
491.9 178 L
491.9 188.5 L
438.1 188.5 L
438.1 178 L
464.6 178 L
464.6 166.05 L
438.1 166.05 L
438.1 155.55 L
464.6 155.55 L
464.6 143.8256 L
461.6528 144.5521 458.5946 144.9 455.4 144.9 c
442.5046 144.9 433.8 136.7262 433.8 126 c
433.8 114.7889 442.8238 107.1 455.4 107.1 c
f
0 D
455.4 134.4 m
458.391 134.4 461.49 133.6927 464.6 132.3037 C
464.6 128.9 L
464.6 120.7039 461.7455 117.6 455.4 117.6 c
449.1971 117.6 445.4 120.7557 445.4 126 c
445.4 131.1395 449.0226 134.4 455.4 134.4 c
f
*U
413.8 92.6 m
410.2 79.1 408.2 65.9 408.2 50.4 c
408.2 34.9 410.2 21.7 413.8 8.2 C
427.8 9.6 L
424.1871 23.1481 422.2 37.033 422.2 50.4 c
422.2 63.767 424.1871 77.6519 427.8 91.2 C
413.8 92.6 L
f
*u
1 D
492.8 21 m
487.3147 29.5408 482.0551 35.5441 476.6 39.5465 C
476.6 54.4 L
492.2 54.4 L
492.2 66.8 L
476.6 66.8 L
476.6 76.2 L
492.2 76.2 L
492.2 88.6 L
438.2 88.6 L
438.2 76.2 L
463.2 76.2 L
463.2 66.8 L
438.2 66.8 L
438.2 54.4 L
463.2 54.4 L
463.2 45.5156 L
460.8237 45.9802 458.3665 46.2 455.8 46.2 c
442.6657 46.2 433.6 37.6901 433.6 26.6 c
433.6 14.9557 443.0543 7 455.8 7 c
466.8071 7 473.7952 12.2761 475.9094 22.0151 C
477.9588 19.642 479.9972 16.9184 482 13.8 C
492.8 21 L
f
0 D
455.8 19.4 m
450.6692 19.4 447.4 22.0194 447.4 26.6 c
447.4 31.0783 450.4454 33.8 455.8 33.8 c
458.1735 33.8 460.6576 33.2321 463.2 32.1122 C
463.2 28.8 L
463.2 21.7508 461.0988 19.4 455.8 19.4 c
f
*U
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
