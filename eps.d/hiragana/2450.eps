%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(TM) 7.0
%%For: (coz) (underforest)
%%Title: (2450.eps)
%%CreationDate: (1/15/05) (9:14 PM)
%%BoundingBox: 0 0 500 700
%%HiResBoundingBox: 0 0 500 700
%%DocumentProcessColors: Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_ColorImage_AI6 1.1 0
%%+ procset Adobe_Illustrator_AI5 1.2 0
%%+ procset Adobe_cshow 2.0 8
%AI5_FileFormat 3
%AI3_ColorUsage: Black&White
%AI3_IncludePlacedImages
%AI7_ImageSettings: 1
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 8.5 0 0 0 0 0 0 0 0 -1 -1
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () 
%AI3_TemplateBox: 244.5 356.5 244.5 356.5
%AI3_TileBox: -41.5 -19.5 534.5 742.5
%AI3_DocumentPreview: Macintosh_ColorPic
%AI5_ArtSize: 592 840
%AI5_RulerUnits: 2
%AI5_ArtFlags: 1 0 0 1 0 0 1 1 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI5_OpenToView: -331.5 752.5 -1.5 794 556 25 0 0 3 40 0 0
%AI5_OpenViewLayers: 5
%%PageOrigin:-41.5 -19.5
%%AI3_PaperRect:-10 808 585 -34
%%AI3_Margin:10 -43 -9 34
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 25 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			0
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			1
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop 
			0 eq
			{
				pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				pop
				3
				{
					1 exch sub
					3 index mul 
					1 exch sub
					3 1 roll
				} repeat
				4 -1 roll pop
				setrgbcolor
			} ifelse
		}
		def
	} if
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	level2?
	{
		gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
		add add add 4 eq
	}
	{
		1 0 0 0 testCMYKColorThrough
		0 1 0 0 testCMYKColorThrough
		0 0 1 0 testCMYKColorThrough
		0 0 0 1 testCMYKColorThrough
		and and and
	} ifelse
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.1 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 24 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize
{ 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6
	{
		dup type /arraytype eq
		{
			dup xcheck
			{
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not
{
	/Adobe_ColorImage_AI6_Vars 15 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/channelcount 0 def
	/sourcecount 0 def
	/sourcearray 4 array def
	/plateindex -1 def
	/XIMask 0 def
	/XIBinary 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIBuffer null def
	/XIDataProc null def
	/XIVersion 6 def
end
/WalkRGBString null def
/WalkCMYKString null def
/StuffRGBIntoGrayString null def
/RGBToGrayImageProc null def
/StuffCMYKIntoGrayString null def
/CMYKToGrayImageProc null def
/ColorImageCompositeEmulator null def
/SeparateCMYKImageProc null def
/FourEqual null def
/TestPlateIndex null def
currentdict /_colorimage known not
{
	/colorimage where
	{
		/colorimage get /_colorimage exch def
	}
	{
		/_colorimage null def
	} ifelse
} if
/_currenttransfer systemdict /currenttransfer get def
/colorimage null def
/XI null def
/WalkRGBString
{
	0 3 index
	dup length 1 sub 0 3 3 -1 roll
	{
		3 getinterval { } forall
		5 index exec
		3 index
	} for
	
	 5 { pop } repeat
} def
/WalkCMYKString
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll
	{
		4 getinterval { } forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/StuffRGBIntoGrayString
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/RGBToGrayImageProc
{	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		dup length 3 idiv string
		dup 3 1 roll 
		
		/StuffRGBIntoGrayString load exch
		WalkRGBString
 end
} def
/StuffCMYKIntoGrayString
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/CMYKToGrayImageProc
{	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		dup length 4 idiv string
		dup 3 1 roll 
		
		/StuffCMYKIntoGrayString load exch
		WalkCMYKString
 end
} def
/ColorImageCompositeEmulator
{
	pop true eq
	{
		Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat
	}
	{
		Adobe_ColorImage_AI6_Vars /channelcount get 1 ne
		{
			Adobe_ColorImage_AI6_Vars begin
				sourcearray 0 3 -1 roll put
			
				channelcount 3 eq 
				{ 
					/RGBToGrayImageProc 
				}
				{ 
					/CMYKToGrayImageProc
				} ifelse
				load
		 end
		} if
		image
	} ifelse
} def
/SeparateCMYKImageProc
{	
	Adobe_ColorImage_AI6_Vars begin
		sourcecount 0 ne
		{
			sourcearray plateindex get exec
		}
		{			
			sourcearray 0 get exec
			
			dup length 4 idiv string
			
			0 2 index
			
			plateindex 4 2 index length 1 sub
			{
				get 255 exch sub
				
				3 copy put pop 1 add
				
				2 index
			} for
			pop pop exch pop
		} ifelse
 end
} def
	
/FourEqual
{
	4 index ne
	{
		pop pop pop false
	}
	{
		4 index ne
		{
			pop pop false
		}
		{
			4 index ne
			{
				pop false
			}
			{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/TestPlateIndex
{
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where
		{
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 FourEqual 
			{ 
				/plateindex 0 def
			}
			{
				0 1 0 0 FourEqual
				{ 
					/plateindex 1 def
				}
				{
					0 0 1 0 FourEqual
					{
						/plateindex 2 def
					}
					{
						0 0 0 1 FourEqual
						{ 
							/plateindex 3 def
						}
						{
							0 0 0 0 FourEqual
							{
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/colorimage
{
	Adobe_ColorImage_AI6_Vars begin
		/channelcount 1 index def
		/sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def
		4 sourcecount add index dup 
		8 eq exch 1 eq or not
 end
	
	{
		/_colorimage load null ne
		{
			_colorimage
		}
		{
			Adobe_ColorImage_AI6_Vars /sourcecount get
			7 add { pop } repeat
		} ifelse
	}
	{
		dup 3 eq
		TestPlateIndex
		dup -1 eq exch 5 eq or or
		{
			/_colorimage load null eq
			{
				ColorImageCompositeEmulator
			}
			{
				dup 1 eq
				{
					pop pop image
				}
				{
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
					{
						gsave
						
						0 _currenttransfer exec
						1 _currenttransfer exec
						eq
						{ 0 _currenttransfer exec 0.5 lt }
						{ 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse
						
						{ { pop 0 } } { { pop 1 } } ifelse
						systemdict /settransfer get exec
					} if
					
					_colorimage
					
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
					{
						grestore
					} if
				} ifelse
			} ifelse
		}
		{
			dup 1 eq
			{
				pop pop
				image
			}
			{
				pop pop
				Adobe_ColorImage_AI6_Vars begin
					sourcecount -1 0
					{			
						exch sourcearray 3 1 roll put
					} for
					/SeparateCMYKImageProc load
			 end
				systemdict /image get exec
			} ifelse
		} ifelse
	} ifelse
} def
/XG
{
	pop pop
} def
/XF
{
	13 {pop} repeat
} def
/Xh
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIMask exch 0 ne def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		XIMask
		{
			/_lp /null ddef
			_fc
			/_lp /imagemask ddef
		}
		if
		/XIVersion 7 def
 end
} def
/XH
{
	Adobe_ColorImage_AI6_Vars begin
		/XIVersion 6 def
		grestore
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIMask exch 0 ne def
		/XIBinary exch 0 ne def
		pop
		pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq
		{
			XIImageWidth 8 div ceiling cvi
		}
		{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIBuffer exch string def
		XIBinary
		{
			/XIDataProc { currentfile XIBuffer readstring pop } def
			XIVersion 6 le
			{
				currentfile 128 string readline pop pop
			}
			if
		}
		{
			/XIDataProc { currentfile XIBuffer readhexstring pop } def
		} ifelse
		
		XIVersion 6 le
		{
			0 0 moveto
			XIImageMatrix concat
			XIImageWidth XIImageHeight scale
			XIMask
			{
				/_lp /null ddef
				_fc
				/_lp /imagemask ddef
			} if
		} if
		
		XIMask
		{
			XIImageWidth XIImageHeight
			false
			[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
			/XIDataProc load
			imagemask
		}
		{
			XIImageWidth XIImageHeight
			XIBitsPerPixel
			[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
			/XIDataProc load
			
			XIChannelCount 1 eq
			{
				gsave
				0 setgray
				image
				grestore
			}
			{
				false
				XIChannelCount
				colorimage
			} ifelse
		} ifelse
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 7.0 Full Prolog)
%%Version: 1.2 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 107 dict dup begin
put
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XA
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/_rgbtocmyk
{
3
	{
	1 exch sub 3 1 roll
	} repeat
3 copy 1 4 1 roll
3
	{
	3 index 2 copy gt
		{
		exch
		} if
	pop 4 1 roll
	} repeat
pop pop pop
4 1 roll
3
	{
	3 index sub
	3 1 roll
	} repeat
4 -1 roll
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq
	{
		findcmykcustomcolor
	}
	{
		/findrgbcustomcolor where not {
			4 1 roll _rgbtocmyk
			5 -1 roll
			findcmykcustomcolor
		}
		{
			pop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq
	{
		findcmykcustomcolor
	}
	{
		/findrgbcustomcolor where not {
			4 1 roll _rgbtocmyk
			5 -1 roll
			findcmykcustomcolor
		}
		{
			pop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%EndProlog
%%BeginSetup
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_BeginPalette
0 0 Pb
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 0 1 1 0 0 3 79 79 255 Lb
(glyphs) Ln
0 A
u
800 Ar
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
0 XR
100 600 m
100 700 L
0 700 L
0 600 L
100 600 L
n
500 600 m
500 700 L
400 700 L
400 600 L
500 600 L
n
200 600 m
200 700 L
100 700 L
100 600 L
200 600 L
n
300 600 m
300 700 L
200 700 L
200 600 L
300 600 L
n
400 600 m
400 700 L
300 700 L
300 600 L
400 600 L
n
100 500 m
100 600 L
0 600 L
0 500 L
100 500 L
n
500 500 m
500 600 L
400 600 L
400 500 L
500 500 L
n
200 500 m
200 600 L
100 600 L
100 500 L
200 500 L
n
300 500 m
300 600 L
200 600 L
200 500 L
300 500 L
n
400 500 m
400 600 L
300 600 L
300 500 L
400 500 L
n
100 400 m
100 500 L
0 500 L
0 400 L
100 400 L
n
500 400 m
500 500 L
400 500 L
400 400 L
500 400 L
n
200 400 m
200 500 L
100 500 L
100 400 L
200 400 L
n
300 400 m
300 500 L
200 500 L
200 400 L
300 400 L
n
400 400 m
400 500 L
300 500 L
300 400 L
400 400 L
n
100 300 m
100 400 L
0 400 L
0 300 L
100 300 L
n
500 300 m
500 400 L
400 400 L
400 300 L
500 300 L
n
200 300 m
200 400 L
100 400 L
100 300 L
200 300 L
n
300 300 m
300 400 L
200 400 L
200 300 L
300 300 L
n
400 300 m
400 400 L
300 400 L
300 300 L
400 300 L
n
100 200 m
100 300 L
0 300 L
0 200 L
100 200 L
n
500 200 m
500 300 L
400 300 L
400 200 L
500 200 L
n
200 200 m
200 300 L
100 300 L
100 200 L
200 200 L
n
300 200 m
300 300 L
200 300 L
200 200 L
300 200 L
n
400 200 m
400 300 L
300 300 L
300 200 L
400 200 L
n
100 100 m
100 200 L
0 200 L
0 100 L
100 100 L
n
500 100 m
500 200 L
400 200 L
400 100 L
500 100 L
n
200 100 m
200 200 L
100 200 L
100 100 L
200 100 L
n
300 100 m
300 200 L
200 200 L
200 100 L
300 100 L
n
400 100 m
400 200 L
300 200 L
300 100 L
400 100 L
n
100 0 m
100 100 L
0 100 L
0 0 L
100 0 L
n
500 0 m
500 100 L
400 100 L
400 0 L
500 0 L
n
200 0 m
200 100 L
100 100 L
100 0 L
200 0 L
n
300 0 m
300 100 L
200 100 L
200 0 L
300 0 L
n
400 0 m
400 100 L
300 100 L
300 0 L
400 0 L
n
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
*u
0 O
0 g
1 D
207.7 621.6 m
212.9283 631.0111 217.9465 643.5514 220.9 655.3 C
218 656 L
215.1875 644.8125 210.3058 632.5505 205 623 C
207.7 621.6 L
f
293 623 m
289.75 633.125 283.4235 646.3132 277 656 C
274.5 654.4 L
280.6316 645.1533 286.8746 632.1484 290.1 622.1 C
293 623 L
f
395 624 m
354.087 661.4722 351.1794 668 340 668 c
330.6875 668 328.4303 661.3786 305 633 C
307.4 631.2 L
331.2722 660.1139 332.5735 665 340 665 c
349.4729 665 351.036 660.1433 392.9 621.8 C
395 624 L
f
116 639 m
116 655.8582 126.9107 673.3055 144 682.8 C
144 686 L
110 686 L
110 683 L
142 683 L
142 685 L
124.41 675.2273 113 656.6088 113 639 c
113 621.7909 125.5489 610 143 610 c
164.4432 610 176 621.1274 176 642 c
176 652.8515 173.1753 665.109 166 681 C
163.3 679.8 L
170.2744 664.3541 173 652.6288 173 642 c
173 622.757 162.9065 613 143 613 c
127.1028 613 116 623.6916 116 639 c
f
163.3 679.8 m
170.9589 669.0741 181.3209 658.1819 191.1 650.7 C
193 653 L
183.6875 660.125 173.5593 670.4135 166 681 C
163.3 679.8 L
f
98 685 m
94.75 690.25 91.875 694.25 88 699 C
85.6 697.2 L
89.4897 692.4319 92.2563 688.5783 95.4 683.5 C
98 685 L
f
86.6 681.7 m
83.5234 686.6148 80.703 690.4608 77 695 C
74.6 693.2 L
78.2965 688.6688 81.0445 684.8155 84 680.1 C
86.6 681.7 L
f
195 681 m
191.75 686.25 188.875 690.25 185 695 C
182.6 693.2 L
186.4897 688.4319 189.2563 684.5783 192.4 679.5 C
195 681 L
f
183.6 677.7 m
180.5234 682.6148 177.703 686.4608 174 691 C
171.6 689.2 L
175.2965 684.6688 178.0445 680.8155 181 676.1 C
183.6 677.7 L
f
499 685 m
495.75 690.25 492.875 694.25 489 699 C
486.6 697.2 L
490.4897 692.4319 493.2563 688.5783 496.4 683.5 C
499 685 L
f
386 670 m
382.5 675.375 378.875 680.25 375 685 C
372.6 683.2 L
376.6415 678.2459 380.2671 673.3648 383.5 668.4 C
386 670 L
f
373.4 665.9 m
370.0824 670.9223 366.658 675.516 363 680 C
360.6 678.2 L
364.2734 673.6971 367.69 669.1491 370.9 664.3 C
373.4 665.9 L
f
29.7 89 m
12 91 L
8.5652 77.5458 7 64.425 7 49 c
7 33.575 8.5652 20.4542 12 7 C
29.7 9 L
26.5576 21.309 25 34.6685 25 49 c
25 63.3315 26.5576 76.691 29.7 89 C
f
266 91 m
222 91 L
222 75 L
251 75 L
250 81 L
239.0122 73.8878 234 66.057 234 59 c
234 45.125 250 39.75 250 29 c
250 25.0769 247.7957 23 244 23 c
240.1919 23 235.6903 24.0916 231.2 26.3 C
225 11 L
229.739 8.1416 237.6922 6 244 6 c
259.9181 6 270 14.5285 270 29 c
270 44.375 254 51.75 254 61 c
254 64.6583 258.4385 69.6335 266 72.7 C
266 91 L
f
217 17.2 m
222.9414 28.8709 227.7968 41.8538 230.8 53.8 C
214 57 L
211.2798 46.1798 206.25 33.3125 201 23 C
217 17.2 L
f
297 25 m
293.5 35.75 287.1875 49.25 281 59 C
265.6 52 L
270.7434 43.8954 277.4355 29.8937 281 19.2 C
297 25 L
f
u
395.5 524.1636 m
354.5154 561.7014 351.3363 568.3303 340 568.3303 c
330.5729 568.3303 327.9974 561.6235 304.5 533.1636 C
308.6667 529.4969 L
331.9206 557.748 333.2487 562.4969 340 562.4969 c
348.7213 562.4969 350.2736 557.8184 391.75 519.8302 C
395.5 524.1636 L
f
396 424.3272 m
354.9438 461.9306 351.4932 468.6606 340 468.6606 c
330.4583 468.6606 327.5646 461.8685 304 433.3272 C
309.9334 427.7938 L
332.569 455.3822 333.924 459.9937 340 459.9937 c
347.9698 459.9937 349.5112 455.4936 390.5999 417.8604 C
396 424.3272 L
f
396.5 324.5 m
355.3722 362.1689 351.6501 369 340 369 c
330.3437 369 327.1318 362.1226 303.5 333.5 C
311.2 326.1 L
333.2173 353.0257 334.5992 357.5 340 357.5 c
347.2183 357.5 348.7489 353.1781 389.45 315.9 C
396.5 324.5 L
f
397 224.6636 m
355.8007 262.3981 351.8069 269.3303 340 269.3303 c
330.2292 269.3303 326.6989 262.3676 303 233.6636 C
312.4667 224.3969 L
333.8657 250.6598 335.2745 254.9969 340 254.9969 c
346.4668 254.9969 347.9866 250.8532 388.3 213.9302 C
397 224.6636 L
f
397.5 124.8364 m
356.229 162.6364 351.9638 169.6697 340 169.6697 c
330.1146 169.6697 326.2661 162.6217 302.5 133.8364 C
313.7333 122.7031 L
334.5141 148.3033 335.9497 152.5031 340 152.5031 c
345.7153 152.5031 347.2243 148.5377 387.15 111.9698 C
397.5 124.8364 L
f
U
398 25 m
356.6575 62.8656 352.1207 70 340 70 c
330 70 325.8333 62.8667 302 34 C
315 21 L
335.1625 45.9375 336.625 50 340 50 c
344.9638 50 346.4619 46.2129 386 10 C
398 25 L
f
u
144.1667 580.8825 m
144.1667 586.3325 L
109.5 586.3325 L
109.5 581.1659 L
141.6667 581.1659 L
141.6667 584.9992 L
123.6537 574.9915 112.3333 556.5262 112.3333 539.1659 c
112.3333 521.4496 124.9839 509.4992 143.1667 509.4992 c
164.6631 509.4992 176.5 520.5956 176.5 540.6659 c
176.5 551.2275 173.7988 562.8321 166.5 578.9992 C
161.5833 577.6659 L
168.4508 562.6339 171 551.8651 171 541.3325 c
171 523.7033 161.6093 514.6659 143.1667 514.6659 c
128.1577 514.6659 117.8333 524.6061 117.8333 539.1659 c
117.8333 554.9581 128.1262 571.7247 144.1667 580.8825 C
f
144.3333 478.9651 m
144.3333 486.6651 L
109 486.6651 L
109 479.3318 L
141.3333 479.3318 L
141.3333 484.9984 L
122.8974 474.7558 111.6667 456.4437 111.6667 439.3318 c
111.6667 421.1084 124.4189 408.9984 143.3333 408.9984 c
164.883 408.9984 177 420.0637 177 439.3318 c
177 449.6035 174.4224 460.5551 167 476.9984 C
159.8666 475.5318 L
166.6272 460.9138 169 451.1014 169 440.6651 c
169 424.6495 160.3121 416.3318 143.3333 416.3318 c
129.2127 416.3318 119.6667 425.5205 119.6667 439.3318 c
119.6667 454.058 129.3417 470.1438 144.3333 478.9651 C
f
144.5 377.0476 m
144.5 386.9977 L
108.5 386.9977 L
108.5 377.4976 L
141 377.4976 L
141 384.9977 L
122.1411 374.52 111 356.3611 111 339.4977 c
111 320.7671 123.8539 308.4977 143.5 308.4977 c
165.1029 308.4977 177.5 319.5319 177.5 337.9977 c
177.5 347.9795 175.0459 358.2782 167.5 374.9977 C
158.1499 373.3977 L
164.8036 359.1936 167 350.3378 167 339.9977 c
167 325.5958 159.0149 317.9977 143.5 317.9977 c
130.2676 317.9977 121.5 326.435 121.5 339.4977 c
121.5 353.1579 130.5572 368.563 144.5 377.0476 C
f
U
u
144.6667 275.1302 m
144.6667 287.3303 L
108 287.3303 L
108 275.6635 L
140.6667 275.6635 L
140.6667 284.9969 L
121.3848 274.2843 110.3333 256.2786 110.3333 239.6636 c
110.3333 220.4258 123.2889 207.9969 143.6667 207.9969 c
165.3229 207.9969 178 219.0001 178 236.6636 c
178 246.3555 175.6695 256.0013 168 272.9969 C
156.4333 271.2635 L
162.98 257.4735 164.9999 249.5741 164.9999 239.3302 c
164.9999 226.5421 157.7178 219.6636 143.6667 219.6636 c
131.3225 219.6636 123.3334 227.3495 123.3334 239.6636 c
123.3334 252.2579 131.7727 266.9821 144.6667 275.1302 C
f
145.8333 173.2198 m
145.8333 187.6697 L
108.5 187.6697 L
108.5 173.8364 L
141.3333 173.8364 L
141.3333 185.003 L
121.6285 174.0554 110.6667 156.2029 110.6667 139.8364 c
110.6667 120.0914 123.7239 107.503 144.8333 107.503 c
166.5428 107.503 179.5 118.4752 179.5 135.3364 c
179.5 145.4371 176.668 157.6163 169.5 173.5031 C
155.7167 171.6364 L
161.7399 159.1378 164.0001 149.3982 164.0001 138.6697 c
164.0001 127.4952 157.4207 121.3363 144.8333 121.3363 c
133.3774 121.3363 126.1666 128.2708 126.1666 139.8364 c
126.1666 151.3647 133.9881 165.4082 145.8333 173.2198 C
f
U
145 71.3 m
145 88 L
107 88 L
107 72 L
140 72 L
140 85 L
119.8722 73.8174 109 56.1181 109 40 c
109 19.7479 122.1589 7 144 7 c
165.7627 7 179 17.9411 179 34 c
179 43.9505 176.1666 56.114 169 72 C
153 70 L
158.833 58.0908 161 48.7484 161 38 c
161 28.4392 155.1235 23 144 23 c
133.4324 23 127 29.183 127 40 c
127 50.4623 134.2036 63.8251 145 71.3 C
f
u
161.5833 577.6659 m
169.6741 566.936 180.4167 555.9992 190.4167 548.3325 C
193.5 552.4992 L
184.0833 559.718 173.914 569.8334 166 580.3325 C
161.5833 577.6659 L
f
159.8666 475.5318 m
168.3892 464.7978 179.5124 453.8165 189.7333 445.9651 C
194 451.9984 L
184.4792 459.3109 174.2687 469.2533 166 479.6651 C
159.8666 475.5318 L
f
158.1499 373.3977 m
167.1044 362.6597 178.6082 351.6338 189.05 343.5977 C
194.5 351.4977 L
184.875 358.9039 174.6234 368.6732 166 378.9977 C
158.1499 373.3977 L
f
U
u
156.4333 271.2635 m
165.8196 260.5216 177.704 249.451 188.3666 241.2302 C
195 250.9969 L
185.2708 258.4969 174.9781 268.0931 166 278.3303 C
156.4333 271.2635 L
f
155.7167 171.6364 m
165.5348 160.8904 177.7998 149.7753 188.6833 141.3698 C
196.5 153.003 L
186.6666 160.5968 176.3328 170.0199 167 180.1697 C
155.7167 171.6364 L
f
U
153 70 m
163.25 59.25 175.8956 48.0903 187 39.5 C
196 53 L
186.0625 60.6875 175.6875 69.9375 166 80 C
153 70 L
f
u
387.1667 570.1036 m
383.6659 575.6493 380.0641 580.7147 376.2 585.6636 C
372.364 583.1556 L
376.315 578.1174 379.9437 573.0163 383.2113 567.8343 C
387.1667 570.1036 L
f
388.3334 470.2072 m
384.8319 475.9236 381.2533 481.1793 377.4001 486.3273 C
372.128 483.1112 L
375.9886 477.9889 379.6203 472.6679 382.9226 467.2685 C
388.3334 470.2072 L
f
389.5 370.32 m
385.9977 376.207 382.4423 381.6531 378.6 387 C
371.892 383.076 L
375.6622 377.8696 379.2969 372.3286 382.634 366.712 C
389.5 370.32 L
f
390.6667 270.4236 m
387.1636 276.4813 383.6315 282.1178 379.8 287.6636 C
371.656 283.0316 L
375.3357 277.7411 378.9735 271.9802 382.3453 266.1463 C
390.6667 270.4236 L
f
391.8333 170.5364 m
388.3294 176.7648 384.8205 182.5916 381 188.3363 C
371.42 182.9964 L
375.0093 177.6218 378.6502 171.6409 382.0567 165.5897 C
391.8333 170.5364 L
f
U
393 70.64 m
389.4954 77.0391 386.0097 83.0563 382.2 89 C
371.184 82.952 L
374.6829 77.4933 378.3268 71.2925 381.768 65.024 C
393 70.64 L
f
u
373.8586 566.1002 m
370.5216 571.3306 367.0986 576.1415 363.428 580.849 C
359.6287 578.3611 L
363.2613 573.7171 366.7037 568.9143 369.9407 563.8495 C
373.8586 566.1002 L
f
374.3173 466.3003 m
370.9608 471.7389 367.5391 476.767 363.856 481.6979 C
358.6574 478.5222 L
362.2492 473.7371 365.7173 468.6795 368.9815 463.399 C
374.3173 466.3003 L
f
374.7759 366.5096 m
371.3999 372.1563 367.9797 377.4016 364.284 382.556 C
357.6861 378.6925 L
361.2373 373.7663 364.7311 368.4539 368.0223 362.9578 C
374.7759 366.5096 L
f
375.2346 266.7098 m
371.8391 272.5646 368.4203 278.0271 364.712 283.405 C
356.7148 278.8536 L
360.2252 273.7863 363.7447 268.2191 367.063 262.5073 C
375.2346 266.7098 L
f
375.6932 166.9191 m
372.2783 172.9821 368.8608 178.6617 365.14 184.263 C
355.7436 179.0239 L
359.2132 173.8155 362.7585 167.9935 366.1038 162.066 C
375.6932 166.9191 L
f
U
376.1519 67.1193 m
372.7175 73.3904 369.3014 79.2872 365.568 85.112 C
354.7723 79.185 L
358.2012 73.8355 361.7722 67.7587 365.1446 61.6156 C
376.1519 67.1193 L
f
u
499 584.5 m
495.7508 589.8625 492.8171 594.1244 489 599 C
485.3 596.5666 L
489.0813 591.7508 491.9492 587.5826 495.1 582.3833 C
499 584.5 L
f
U
u
499 484 m
495.7517 489.475 492.7592 493.9989 489 499 C
483.9999 495.9333 L
487.6729 491.0698 490.642 486.5869 493.7999 481.2666 C
499 484 L
f
U
u
499 181.3651 m
495.7542 187.1777 492.5854 192.4873 489 197.8651 C
480.1 192.8985 L
483.448 187.8919 486.7208 182.465 489.9 176.7818 C
499 181.3651 L
f
U
u
499 383.5 m
495.7525 389.0875 492.7012 393.8733 489 399 C
482.7 395.3 L
486.2647 390.3888 489.335 385.5912 492.5 380.15 C
499 383.5 L
f
499 283 m
495.7533 288.7001 492.6433 293.7477 489 299 C
481.3999 294.6666 L
484.8563 289.7077 488.0278 284.5955 491.1999 279.0333 C
499 283 L
f
U
499 81 m
495.755 86.9251 492.5275 92.4966 489 98 C
478.8 92.4 L
482.0397 87.3457 485.4137 81.6042 488.6 75.8 C
499 81 L
f
483.4 77.7401 m
480.2199 83.5467 477.0569 89.0067 473.6 94.4 C
463.604 88.9121 L
466.779 83.9588 470.0855 78.3322 473.208 72.6441 C
483.4 77.7401 L
f
u
195.25 581 m
192.0008 586.3625 189.0671 590.6244 185.25 595.5 C
181.55 593.0666 L
185.3313 588.2508 188.1992 584.0826 191.35 578.8833 C
195.25 581 L
f
195.5 481 m
192.2517 486.475 189.2592 490.9988 185.5 496 C
180.5 492.9333 L
184.173 488.0698 187.1421 483.5869 190.3 478.2666 C
195.5 481 L
f
195.75 381 m
192.5025 386.5875 189.4512 391.3733 185.75 396.5 C
179.4499 392.8 L
183.0146 387.8888 186.085 383.0912 189.25 377.65 C
195.75 381 L
f
U
u
196 281 m
192.7533 286.7 189.6433 291.7477 186 297 C
178.3999 292.6666 L
181.8563 287.7077 185.0278 282.5955 188.1999 277.0333 C
196 281 L
f
195 180.1697 m
191.7541 185.9823 188.5854 191.2919 185 196.6697 C
176.1 191.703 L
179.448 186.6965 182.7208 181.2696 185.9 175.5864 C
195 180.1697 L
f
U
195 80 m
191.755 85.9251 188.5275 91.4966 185 97 C
174.8 91.4 L
178.0397 86.3457 181.4137 80.6042 184.6 74.8 C
195 80 L
f
u
183.15 577.7066 m
180.0561 582.7701 177.1786 586.8851 173.5167 591.5666 C
169.8506 589.152 L
173.4602 584.5504 176.3013 580.4016 179.2846 575.524 C
183.15 577.7066 L
f
182.7 477.7133 m
179.5889 482.9254 176.6543 487.3094 173.0333 492.1333 C
168.1013 489.104 L
171.624 484.4321 174.5581 479.9877 177.5693 474.948 C
182.7 477.7133 L
f
182.25 377.72 m
179.1216 383.0807 176.1299 387.7337 172.55 392.7 C
166.3519 389.056 L
169.7877 384.3138 172.8149 379.5738 175.8539 374.372 C
182.25 377.72 L
f
U
u
181.8 277.7267 m
178.6544 283.236 175.6055 288.158 172.0666 293.2667 C
164.6026 289.008 L
167.9514 284.1954 171.0717 279.1599 174.1386 273.796 C
181.8 277.7267 L
f
180.1 176.9031 m
176.9372 182.5611 173.8312 187.7521 170.3333 193.003 C
161.6034 188.1298 L
164.8653 183.2469 168.0787 177.9158 171.1734 172.3898 C
180.1 176.9031 L
f
U
179.4 76.7401 m
176.2199 82.5467 173.0569 88.0067 169.6 93.4 C
159.604 87.9121 L
162.779 82.9588 166.0855 77.3322 169.208 71.6441 C
179.4 76.7401 L
f
299 82 m
295.755 87.9251 292.5275 93.4966 289 99 C
278.8 93.4 L
282.0397 88.3457 285.4137 82.6042 288.6 76.8 C
299 82 L
f
283.4 78.7401 m
280.2199 84.5467 277.0569 90.0067 273.6 95.4 C
263.604 89.9121 L
266.779 84.9588 270.0855 79.3322 273.208 73.6441 C
283.4 78.7401 L
f
u
98.5 584.7266 m
95.2941 590.0102 92.4034 594.1978 88.6333 599 C
85.0693 596.6413 L
88.8075 591.8929 91.6303 587.8012 94.7386 582.6793 C
98.5 584.7266 L
f
U
u
99 484.4533 m
95.8382 489.7703 92.9318 494.1456 89.2667 499 C
84.5386 496.0826 L
88.1252 491.3539 91.0043 487.0241 94.0773 481.8587 C
99 484.4533 L
f
99 382.7604 m
95.8823 388.111 92.9601 392.6739 89.4 397.5804 C
83.508 394.1044 L
86.9431 389.3954 89.8785 384.8275 92.916 379.6185 C
99 382.7604 L
f
U
u
99 282.7488 m
95.9264 288.1329 92.9885 292.8834 89.5333 297.8421 C
82.4773 293.8075 L
85.761 289.1182 88.7526 284.3122 91.7547 279.0595 C
99 282.7488 L
f
98 182.7326 m
94.9705 188.1501 92.0169 193.0883 88.6667 198.0992 C
80.4466 193.5059 L
83.5788 188.8363 86.6266 183.7922 89.5933 178.496 C
98 182.7326 L
f
U
99 82.7209 m
96.0146 88.172 93.0453 93.2978 89.8 98.3609 C
80.416 93.2089 L
83.3966 88.559 86.5007 83.2768 89.432 77.937 C
99 82.7209 L
f
u
86.608 581.4768 m
83.5565 586.4628 80.7212 590.505 77.1053 595.1147 C
73.5726 592.7732 L
77.1398 588.2377 79.9368 584.1638 82.8785 579.3621 C
86.608 581.4768 L
f
U
u
86.616 481.2536 m
83.5897 486.3108 80.7394 490.5493 77.2106 495.2293 C
72.5452 492.3463 L
75.9831 487.8066 78.8291 483.5122 81.757 478.6242 C
86.616 481.2536 L
f
86.124 379.6109 m
83.1228 384.7393 80.2577 389.1739 76.816 393.9244 C
71.0179 390.5 L
74.3266 385.9559 77.2216 381.441 80.1357 376.4667 C
86.124 379.6109 L
f
U
u
85.632 279.6494 m
82.656 284.849 79.7759 289.4799 76.4213 294.3008 C
69.4906 290.3348 L
72.67 285.7865 75.614 281.0511 78.5143 275.9905 C
85.632 279.6494 L
f
84.14 179.6833 m
81.1891 184.9541 78.2942 189.7812 75.0267 194.6726 C
66.9631 190.1651 L
70.0133 185.6125 73.0063 180.6565 75.8928 175.5097 C
84.14 179.6833 L
f
U
84.648 79.7218 m
81.7223 85.0638 78.8124 90.0871 75.632 95.0489 C
66.4358 90 L
69.3567 85.4431 72.3987 80.2666 75.2714 75.0335 C
84.648 79.7218 L
f
415.9 610.7 m
412.5065 623.6733 411 635.7997 411 650 c
411 664.2003 412.5065 676.3265 415.9 689.3 C
413 690 L
409.4733 676.5171 408 663.9841 408 650 c
408 636.0159 409.4733 623.4828 413 610 C
415.9 610.7 L
f
449 613 m
439.2185 613 434 617.875 434 625 c
434 632.2363 439.1629 637 449 637 c
460.787 637 473.6307 629.5528 481.5 617.3 c
484 619 L
475.6057 632.0702 461.8034 640 449 640 c
437.4589 640 431 633.903 431 625 c
431 616.0971 437.4589 610 449 610 c
460.2543 610 467 617.0976 467 631 C
467 659 L
486 659 L
486 662 L
467 662 L
467 683 L
478 683 L
478 686 L
434 686 L
434 683 L
464 683 L
464 662 L
434 662 L
434 659 L
464 659 L
464 631 l
464 618.7229 458.7865 613 449 613 c
f
70 670 m
87.1 670 L
87.1 673 L
70 673 L
70 690 L
67 690 L
67 673 L
34 673 L
34 670 L
67 670 L
67 631 l
67 619.2258 61.151 613 51 613 c
41.6075 613 36 617.8598 36 626 c
36 634.1402 41.6075 639 51 639 c
63.064 639 76.9734 631.0192 84.5 619.3 C
87 621 L
79.0338 633.4037 64.3753 642 51 642 c
39.9922 642 33 635.9031 33 626 c
33 616.0971 39.9922 610 51 610 c
62.7543 610 70 617.5976 70 631 C
70 670 L
f
u
27.4 189.0485 m
12.1667 190.8318 L
8.7165 177.3728 7.1667 164.35 7.1667 149.1651 c
7.1667 133.9803 8.7165 120.9574 12.1667 107.4985 C
27.4 109.2818 L
24.2158 121.7015 22.6667 134.8555 22.6667 149.1651 c
22.6667 163.4748 24.2158 176.6287 27.4 189.0485 C
f
25.1 289.1015 m
12.3333 290.6682 L
8.8679 277.2044 7.3333 264.2795 7.3333 249.3348 c
7.3333 234.3901 8.8679 221.4653 12.3333 208.0015 C
25.1 209.5682 L
21.8739 222.0986 20.3333 235.0471 20.3333 249.3348 c
20.3333 263.6226 21.8739 276.571 25.1 289.1015 C
f
U
u
22.8 389.15 m
12.5 390.5 L
9.0192 377.0314 7.5 364.2045 7.5 349.5 c
7.5 334.7954 9.0192 321.9685 12.5 308.5 C
22.8 309.85 L
19.532 322.4911 18 335.2341 18 349.5 c
18 363.7659 19.532 376.5087 22.8 389.15 C
f
19.8333 489.203 m
12 490.3364 L
8.5039 476.863 7 464.1341 7 449.6697 c
7 435.2053 8.5039 422.4763 12 409.003 C
19.8333 410.1364 L
16.5234 422.8883 15 435.4257 15 449.6697 c
15 463.9138 16.5234 476.451 19.8333 489.203 C
f
U
u
18.3666 589.2515 m
13 590.1682 L
9.4886 576.6901 8 564.0591 8 549.8348 c
8 535.6106 9.4886 522.9795 13 509.5015 C
18.3666 510.4182 L
15.015 523.2808 13.5 535.6127 13.5 549.8348 c
13.5 564.057 15.015 576.3888 18.3666 589.2515 C
f
U
16.9 610.7 m
13.5065 623.6733 12 635.7997 12 650 c
12 664.2003 13.5065 676.3265 16.9 689.3 C
14 690 L
10.4733 676.5171 9 663.9841 9 650 c
9 636.0159 10.4733 623.4828 14 610 C
16.9 610.7 L
f
u
298 181.9864 m
294.7541 187.7989 291.5854 193.1085 288 198.4864 C
279.1 193.5197 L
282.448 188.5131 285.7208 183.0863 288.9 177.4031 C
298 181.9864 L
f
U
u
296.9999 281.9728 m
293.7533 287.6728 290.6433 292.7205 286.9999 297.9728 C
279.4 293.6395 L
282.8564 288.6806 286.0279 283.5684 289.2 278.0061 C
296.9999 281.9728 L
f
298 383.5 m
294.7525 389.0875 291.7012 393.8733 288 399 C
281.7 395.3 L
285.2647 390.3888 288.335 385.5912 291.5 380.15 C
298 383.5 L
f
U
u
296.3334 483.6651 m
293.085 489.1402 290.0925 493.664 286.3334 498.6651 C
281.3333 495.5985 L
285.0064 490.735 287.9754 486.2521 291.1333 480.9318 C
296.3334 483.6651 L
f
294.6667 583.8348 m
291.4175 589.1974 288.4837 593.4593 284.6667 598.3348 C
280.9667 595.9015 L
284.748 591.0857 287.6158 586.9175 290.7667 581.7182 C
294.6667 583.8348 L
f
U
293 684 m
289.75 689.25 286.875 693.25 283 698 C
280.6 696.2 L
284.4897 691.4319 287.2563 687.5783 290.4 682.5 C
293 684 L
f
u
283.5333 480.3785 m
280.4223 485.5906 277.4876 489.9746 273.8667 494.7985 C
268.9347 491.7692 L
272.4573 487.0973 275.3915 482.6529 278.4027 477.6132 C
283.5333 480.3785 L
f
282.5666 580.5415 m
279.4728 585.605 276.5953 589.72 272.9333 594.4015 C
269.2673 591.9869 L
272.8769 587.3853 275.718 583.2365 278.7013 578.3589 C
282.5666 580.5415 L
f
U
281.6 680.7 m
278.5234 685.6148 275.703 689.4608 272 694 C
269.6 692.2 L
273.2965 687.6688 276.0445 683.8155 279 679.1 C
281.6 680.7 L
f
u
487.9333 581.7113 m
484.8395 586.7747 481.962 590.8897 478.3 595.5712 C
474.634 593.1566 L
478.2436 588.555 481.0847 584.4062 484.068 579.5286 C
487.9333 581.7113 L
f
U
488.6 681.7 m
485.5234 686.6148 482.703 690.4608 479 695 C
476.6 693.2 L
480.2965 688.6688 483.0445 684.8155 486 680.1 C
488.6 681.7 L
f
u
215.45 117.9364 m
221.2725 129.2307 226.155 142.1398 229.1499 154.053 C
214.6667 156.8364 L
211.9311 145.955 206.926 133.1885 201.6667 123.003 C
215.45 117.9364 L
f
213.8999 218.6728 m
219.6036 229.5904 224.5133 242.4258 227.4999 254.3061 C
215.3334 256.6728 L
212.5824 245.7301 207.602 233.0646 202.3334 223.0061 C
213.8999 218.6728 L
f
212.35 319.4 m
217.9349 329.941 222.8717 342.7026 225.85 354.55 C
216 356.5 L
213.2336 345.4961 208.2779 332.9315 203 323 C
212.35 319.4 L
f
210.8 420.1364 m
216.2659 430.3008 221.2299 442.9886 224.1999 454.8031 C
216.6667 456.3364 L
213.8849 445.2713 208.9539 432.8076 203.6667 423.003 C
210.8 420.1364 L
f
209.25 520.8636 m
214.5972 530.6513 219.5883 543.2654 222.55 555.0469 C
217.3333 556.1636 L
214.5362 545.0373 209.6298 532.6744 204.3333 522.9969 C
209.25 520.8636 L
f
U
u
266.1667 190.503 m
222.6667 190.503 L
222.6667 176.6697 L
253.0001 176.6697 L
252.1667 181.8864 L
240.4485 175.4173 235 167.6574 235 160.3364 c
235 145.8468 252.3334 140.4927 252.3334 128.8364 c
252.3334 124.1974 249.1906 121.3363 244.1667 121.3363 c
240.1425 121.3363 235.3773 122.5168 231.05 124.703 C
225.6667 111.503 L
230.2721 108.7252 237.9602 106.6697 244.1667 106.6697 c
259.5282 106.6697 269.5 115.0906 269.5 128.8364 c
269.5 144.6114 252.1666 151.6739 252.1666 162.0031 c
252.1666 166.3093 257.063 171.573 266.1667 174.6864 C
266.1667 190.503 L
f
266.3333 290.0061 m
223.3334 290.0061 L
223.3334 278.3395 L
255.0001 278.3395 L
254.3335 282.7728 L
241.8847 276.9468 236.0001 269.2579 236.0001 261.6728 c
236.0001 246.5686 254.6668 241.2353 254.6668 228.6728 c
254.6668 223.318 250.5855 219.6727 244.3333 219.6727 c
240.0932 219.6727 235.0643 220.9421 230.9 223.106 C
226.3334 212.0061 L
230.8052 209.3089 238.2281 207.3395 244.3333 207.3395 c
259.1383 207.3395 269 215.6527 269 228.6728 c
269 244.8478 250.3332 251.5978 250.3332 263.0062 c
250.3332 267.9604 255.6874 273.5125 266.3333 276.6729 C
266.3333 290.0061 L
f
266.5 389.5 m
224 389.5 L
224 380 L
257 380 L
256.5 383.65 L
243.3209 378.467 237 370.849 237 363 c
237 347.2812 257 341.9687 257 328.5 c
257 322.4294 251.9803 318 244.5 318 c
240.0438 318 234.7514 319.3583 230.75 321.5 C
227 312.5 L
231.3383 309.8833 238.4961 308 244.5 308 c
258.7485 308 268.5 316.2055 268.5 328.5 c
268.5 345.075 248.5 351.5125 248.5 364 c
248.5 369.6021 254.3121 375.4426 266.5 378.65 C
266.5 389.5 L
f
266.6667 489.003 m
224.6667 489.003 L
224.6667 481.6697 L
259.0001 481.6697 L
258.6667 484.5364 L
244.7572 479.9965 238 472.4494 238 464.3364 c
238 448.0031 259.3334 442.7114 259.3334 428.3364 c
259.3334 421.55 253.3753 416.3363 244.6667 416.3363 c
239.9944 416.3363 234.4384 417.7835 230.6 419.903 C
227.6667 413.003 L
231.8713 410.4669 238.7641 408.6697 244.6667 408.6697 c
258.3586 408.6697 268 416.7676 268 428.3364 c
268 445.3114 246.6666 451.4364 246.6666 465.0031 c
246.6666 471.2531 252.9365 477.3821 266.6667 480.6364 C
266.6667 489.003 L
f
266.8333 588.4969 m
225.3333 588.4969 L
225.3333 583.3302 L
261 583.3302 L
260.8333 585.4136 L
246.1933 581.5167 239 574.0406 239 565.6636 c
239 548.7157 261.6666 543.4448 261.6666 528.1636 c
261.6666 520.6615 254.7701 514.6636 244.8333 514.6636 c
239.9451 514.6636 234.1255 516.1998 230.45 518.297 C
228.3333 513.4969 L
232.4044 511.0414 239.032 509.3302 244.8333 509.3302 c
257.9688 509.3302 267.5 517.3205 267.5 528.1636 c
267.5 545.5386 244.8334 551.3511 244.8334 565.9969 c
244.8334 572.8949 251.5611 579.3123 266.8333 582.6136 C
266.8333 588.4969 L
f
U
u
296.3333 124.6697 m
292.875 135.3155 286.5601 148.7636 280.3333 158.503 C
267.0834 152.4031 L
272.3915 144.1081 279.0087 130.2725 282.5167 119.6864 C
296.3333 124.6697 L
f
295.6666 224.3394 m
292.25 234.8811 285.9328 248.2771 279.6666 258.0061 C
268.5668 252.8061 L
274.0396 244.3208 280.5819 230.6514 284.0334 220.1728 C
295.6666 224.3394 L
f
295 324 m
291.625 334.4375 285.3055 347.7816 279 357.5 C
270.05 353.2 L
275.6875 344.5243 282.155 331.021 285.55 320.65 C
295 324 L
f
294.3333 423.6697 m
291 434.003 284.6781 447.2952 278.3333 457.003 C
271.5334 453.6031 L
277.3356 444.7371 283.7283 431.3999 287.0667 421.1364 C
294.3333 423.6697 L
f
293.6667 523.3303 m
290.375 533.5595 284.0509 546.7996 277.6667 556.4969 C
273.0166 553.9969 L
278.9835 544.9406 285.3013 531.7695 288.5833 521.6136 C
293.6667 523.3303 L
f
U
207.7 621.6 m
212.9283 631.0111 217.9465 643.5514 220.9 655.3 C
218 656 L
215.1875 644.8125 210.3058 632.5505 205 623 C
207.7 621.6 L
f
293 623 m
289.75 633.125 283.4235 646.3132 277 656 C
274.5 654.4 L
280.6316 645.1533 286.8746 632.1484 290.1 622.1 C
293 623 L
f
263 686.3 m
247.6296 683.0462 240 675.641 240 667 c
240 649.4375 264 644.1875 264 628 c
264 619.782 256.165 613 245 613 c
239.8957 613 233.8125 614.625 230.3 616.7 C
229 614 L
232.9375 611.625 239.3 610 245 610 c
257.5789 610 267 617.8826 267 628 c
267 645.775 243 651.275 243 667 c
243 674.5459 250.1856 681.2518 267 684.6 C
267 688 L
226 688 L
226 685 L
263 685 L
263 686.3 L
f
u
70.1667 567.1635 m
87.25 567.1635 L
87.25 572.3303 L
70.1667 572.3303 L
70.1667 589.9969 L
64.6666 589.9969 L
64.6666 572.3303 L
33.5 572.3303 L
33.5 567.1635 L
64.6666 567.1635 L
64.6666 530.4969 L
64.6666 520.0498 59.4036 514.497 50.3333 514.497 c
41.8447 514.497 36.8334 518.8173 36.8334 526.1636 c
36.8334 533.4822 41.817 537.8302 50.3333 537.8302 c
62.0543 537.8302 74.8494 530.3856 82.8166 517.9802 C
86.8334 521.1636 L
78.203 534.6015 63.9802 542.997 50.5 542.997 c
38.7987 542.997 31.5 536.5492 31.5 526.1636 c
31.5 515.7042 38.8542 509.3303 50.5 509.3303 c
62.4357 509.3303 70.1667 517.1137 70.1667 530.3303 C
70.1667 567.1635 L
f
U
u
70.3334 464.3271 m
87.4 464.3271 L
87.4 471.6605 L
70.3334 471.6605 L
70.3334 489.9939 L
62.3332 489.9939 L
62.3332 471.6605 L
33 471.6605 L
33 464.3271 L
62.3332 464.3271 L
62.3332 429.9939 L
62.3332 420.8738 57.6561 415.994 49.6667 415.994 c
42.082 415.994 37.6668 419.7748 37.6668 426.3272 c
37.6668 432.8242 42.0264 436.6605 49.6667 436.6605 c
61.0446 436.6605 72.7253 429.7519 81.1333 416.6605 C
86.6667 421.3272 L
77.3721 435.7993 63.585 443.994 50 443.994 c
37.6051 443.994 30 437.1952 30 426.3272 c
30 415.3114 37.7162 408.6605 50 408.6605 c
62.1172 408.6605 70.3334 416.6299 70.3334 429.6605 C
70.3334 464.3271 L
f
72.5 362 m
89.05 362 L
89.05 371.5 L
72.5 371.5 L
72.5 390.5 L
62 390.5 L
62 371.5 L
34 371.5 L
34 362 L
62 362 L
62 329.5 L
62 321.7068 57.9088 317.5 51 317.5 c
44.3191 317.5 40.5 320.7413 40.5 326.5 c
40.5 332.1754 44.2357 335.5 51 335.5 c
62.0348 335.5 72.6014 329.1275 81.45 315.35 C
88.5 321.5 L
78.5413 337.0061 65.1898 345 51.5 345 c
38.4116 345 30.5 337.8504 30.5 326.5 c
30.5 314.9277 38.5782 308 51.5 308 c
63.7985 308 72.5 316.1552 72.5 329 C
72.5 362 L
f
U
u
73.3333 260.0015 m
90.0333 260.0015 L
90.0333 271.6682 L
73.3333 271.6682 L
73.3333 290.3348 L
60.3334 290.3348 L
60.3334 271.6682 L
34.3333 271.6682 L
34.3333 260.0015 L
60.3334 260.0015 L
60.3334 229.0015 L
60.3334 222.5354 56.8281 219.0015 51 219.0015 c
45.2229 219.0015 42 221.7033 42 226.6682 c
42 231.5221 45.1117 234.3349 51 234.3349 c
61.6918 234.3349 71.1441 228.4985 80.4333 214.0349 C
89 221.6682 L
78.3771 238.2085 65.4613 246.0015 51.6667 246.0015 c
37.8848 246.0015 29.6667 238.501 29.6667 226.6682 c
29.6667 214.5394 38.1069 207.3348 51.6667 207.3348 c
64.1466 207.3348 73.3333 215.6759 73.3333 228.3348 C
73.3333 260.0015 L
f
76.1667 157.9984 m
91.0167 157.9984 L
91.0167 171.8318 L
76.1667 171.8318 L
76.1667 190.1651 L
60.6667 190.1651 L
60.6667 171.8318 L
34.6667 171.8318 L
34.6667 157.9984 L
60.6667 157.9984 L
60.6667 128.4985 L
60.6667 123.3594 57.7473 120.4985 53 120.4985 c
48.1268 120.4985 45.5 122.6608 45.5 126.8318 c
45.5 130.8641 47.9878 133.1651 53 133.1651 c
63.3488 133.1651 71.6868 127.8648 81.4167 112.7151 C
91.5 121.8318 L
80.2129 139.4063 67.7329 146.9985 53.8334 146.9985 c
39.3579 146.9985 30.8333 139.1471 30.8333 126.8318 c
30.8333 114.1466 39.6356 106.6651 53.8334 106.6651 c
66.4947 106.6651 76.1667 115.1921 76.1667 127.6651 C
76.1667 157.9984 L
f
U
93 22 m
81.0487 40.6086 69.0044 48 55 48 c
39.8311 48 31 39.7977 31 27 c
31 13.7583 40.1643 6 55 6 c
67.8428 6 78 14.7128 78 27 C
78 56 L
92 56 L
92 72 L
78 72 L
78 90 L
60 90 L
60 72 L
35 72 L
35 56 L
60 56 L
60 28 L
60 24.1879 57.6666 22 54 22 c
50.0307 22 48 23.6228 48 27 c
48 30.2107 49.8639 32 54 32 c
64.0057 32 71.2295 27.2358 81.4 11.4 C
93 22 L
f
u
417.8667 589.4136 m
412.5 590.3303 L
408.9886 576.8522 407.5 564.2212 407.5 549.9969 c
407.5 535.7727 408.9886 523.1416 412.5 509.6636 C
417.8667 510.5803 L
414.5151 523.4429 413.0001 535.7748 413.0001 549.9969 c
413.0001 564.2191 414.5151 576.5509 417.8667 589.4136 C
f
U
u
419.8334 489.5272 m
412 490.6606 L
408.5039 477.1873 407 464.4583 407 449.9939 c
407 435.5295 408.5039 422.8005 412 409.3272 C
419.8334 410.4606 L
416.5236 423.2124 415.0001 435.7499 415.0001 449.9939 c
415.0001 464.2379 416.5236 476.7752 419.8334 489.5272 C
f
421.8 389.65 m
411.5 391 L
408.0192 377.5314 406.5 364.7045 406.5 350 c
406.5 335.2955 408.0192 322.4685 411.5 309 C
421.8 310.35 L
418.532 322.9911 417 335.7341 417 350 c
417 364.2659 418.532 377.0088 421.8 389.65 C
f
U
u
423.7666 289.7682 m
411 291.3348 L
407.5346 277.8711 406 264.9462 406 250.0015 c
406 235.0568 407.5346 222.1319 411 208.6682 C
423.7666 210.2349 L
420.5405 222.7653 419 235.7138 419 250.0015 c
419 264.2893 420.5405 277.2377 423.7666 289.7682 C
f
425.7334 189.8818 m
410.5 191.6651 L
407.0499 178.2062 405.5 165.1833 405.5 149.9985 c
405.5 134.8136 407.0499 121.7908 410.5 108.3318 C
425.7334 110.1151 L
422.5491 122.5348 421 135.6888 421 149.9985 c
421 164.3081 422.5491 177.4621 425.7334 189.8818 C
f
U
427.7 90 m
410 92 L
406.5652 78.5458 405 65.425 405 50 c
405 34.575 406.5652 21.4542 410 8 C
427.7 10 L
424.5576 22.309 423 35.6685 423 50 c
423 64.3315 424.5576 77.691 427.7 90 C
f
u
450.5 318 m
443.408 318 440 321.099 440 326 c
440 330.9568 443.2968 334 450.5 334 c
461.3963 334 471.4301 327.8943 480.45 313.85 C
487.5 320 L
477.3272 335.8394 464.4039 343.5 451 343.5 c
437.395 343.5 430 336.6838 430 326 c
430 315.1777 437.5616 308.5 451 308.5 c
462.7152 308.5 470.5 316.072 470.5 329.5 C
470.5 354.5 L
487.5 354.5 L
487.5 364 L
470.5 364 L
470.5 377.5 L
477.8 377.5 L
477.8 387 L
433.5 387 L
433.5 377.5 L
460 377.5 L
460 364 L
433.5 364 L
433.5 354.5 L
460 354.5 L
460 330 L
460 321.6221 456.5598 318 450.5 318 c
f
U
u
475 175.4984 m
475 189.3318 L
432.8333 189.3318 L
432.8333 175.4984 L
456.6667 175.4984 L
456.6667 166.9985 L
432.8333 166.9985 L
432.8333 153.1651 L
456.6667 153.1651 L
456.6667 129.3318 L
456.6667 123.5535 454.4087 121.3318 450.8334 121.3318 c
445.5343 121.3318 443.3334 123.2468 443.3334 126.6651 c
443.3334 130.1024 445.3862 131.9984 450.8334 131.9984 c
461.1359 131.9984 469.2964 126.7871 479.0833 111.5485 C
489.1667 120.6651 L
477.8082 138.3507 465.4709 145.8318 451.6667 145.8318 c
436.6857 145.8318 428.6667 138.5361 428.6667 126.6651 c
428.6667 114.5632 436.9635 107.4985 451.6667 107.4985 c
463.6891 107.4985 472.1667 115.3868 472.1667 128.4985 C
472.1667 153.1651 L
488.1667 153.1651 L
488.1667 166.9985 L
472.1667 166.9985 L
472.1667 175.4984 L
475 175.4984 L
f
U
u
477.7333 275.9969 m
477.7333 287.6636 L
433.3333 287.6636 L
433.3333 275.9969 L
458.6666 275.9969 L
458.6666 264.997 L
433.3333 264.997 L
433.3333 253.3302 L
458.6666 253.3302 L
458.6666 229.6636 L
458.6666 222.5855 455.8176 219.6636 451 219.6636 c
444.8045 219.6636 442.0001 222.1707 442.0001 226.3303 c
442.0001 230.5273 444.6749 232.9969 451 232.9969 c
461.5995 232.9969 470.6965 227.3384 480.1 212.6969 C
488.6667 220.3303 L
477.901 237.0928 465.2708 244.6636 451.6667 244.6636 c
437.3737 244.6636 429.6667 237.6076 429.6667 226.3303 c
429.6667 214.8681 437.5959 207.9969 451.6667 207.9969 c
463.5355 207.9969 471.6667 215.7271 471.6667 228.9969 C
471.6667 253.3302 L
488 253.3302 L
488 264.997 L
471.6667 264.997 L
471.6667 275.9969 L
477.7333 275.9969 L
f
U
u
476.3333 581.4969 m
476.3333 586.6636 L
433.8333 586.6636 L
433.8333 581.4969 L
462.1666 581.4969 L
462.1666 562.997 L
433.8333 562.997 L
433.8333 557.8302 L
462.1666 557.8302 L
462.1666 530.6636 L
462.1666 519.6863 457.5443 514.6637 449 514.6637 c
440.115 514.6637 435.5001 518.9466 435.5001 525.3303 c
435.5001 531.8067 440.0409 535.9969 449 535.9969 c
460.4901 535.9969 472.3971 528.9969 480.65 516.1469 C
484.6667 519.3303 L
475.6796 533.3236 462.1703 541.1636 449.1667 541.1636 c
436.9376 541.1636 430.1667 534.8269 430.1667 525.3303 c
430.1667 515.7875 436.9931 509.4969 449.1667 509.4969 c
460.5746 509.4969 467.6667 516.7527 467.6667 530.4969 C
467.6667 557.8302 L
486.5 557.8302 L
486.5 562.997 L
467.6667 562.997 L
467.6667 581.4969 L
476.3333 581.4969 L
f
U
u
474.6666 479.9938 m
474.6666 487.3273 L
433.6667 487.3273 L
433.6667 479.9938 L
460.3332 479.9938 L
460.3332 463.994 L
433.6667 463.994 L
433.6667 456.6605 L
460.3332 456.6605 L
460.3332 430.3272 L
460.3332 420.6497 456.302 416.3273 449 416.3273 c
441.0115 416.3273 437.0001 420.0183 437.0001 425.6606 c
437.0001 431.3772 440.9189 434.9938 449 434.9938 c
460.1932 434.9938 471.1636 428.441 479.8 414.9938 C
485.3334 419.6606 L
475.7534 434.577 462.5371 442.3273 449.3334 442.3273 c
436.4163 442.3273 429.3333 435.7508 429.3333 425.6606 c
429.3333 415.478 436.5274 408.9939 449.3334 408.9939 c
460.8949 408.9939 468.3334 416.4078 468.3334 429.9939 C
468.3334 456.6605 L
487 456.6605 L
487 463.994 L
468.3334 463.994 L
468.3334 479.9938 L
474.6666 479.9938 L
f
U
474 74 m
474 90 L
433 90 L
433 74 L
456 74 L
456 68 L
433 68 L
433 52 L
456 52 L
456 29 L
456 24.5214 454.3332 23 452 23 c
447.5974 23 446 24.323 446 27 c
446 29.6774 447.4308 31 452 31 c
462.0057 31 469.2295 26.2358 479.4 10.4 C
491 21 L
479.0487 39.6086 467.0044 47 453 47 c
437.3311 47 429 39.4645 429 27 c
429 14.2583 437.6644 7 453 7 c
465.1761 7 474 15.0465 474 28 C
474 52 L
489 52 L
489 68 L
474 68 L
474 74 L
474 74 L
f
u
283.1 178.7198 m
279.9371 184.3778 276.8312 189.5688 273.3333 194.8197 C
264.6034 189.9465 L
267.8653 185.0635 271.0787 179.7325 274.1734 174.2065 C
283.1 178.7198 L
f
U
u
282.8 278.6995 m
279.6544 284.2088 276.6056 289.1308 273.0666 294.2394 C
265.6027 289.9808 L
268.9515 285.1683 272.0719 280.1328 275.1387 274.7689 C
282.8 278.6995 L
f
284.5 380.22 m
281.3717 385.5807 278.3799 390.2337 274.8 395.2 C
268.602 391.556 L
272.0377 386.8138 275.065 382.0738 278.104 376.872 C
284.5 380.22 L
f
U
u
484.2667 178.0986 m
481.1038 183.7565 477.9979 188.9475 474.5 194.1985 C
465.77 189.3252 L
469.0319 184.4423 472.2453 179.1112 475.34 173.5852 C
484.2667 178.0986 L
f
U
u
487.2667 481.7226 m
484.1556 486.9346 481.221 491.3186 477.6 496.1425 C
472.6681 493.1132 L
476.1907 488.4413 479.1249 483.9969 482.1361 478.9572 C
487.2667 481.7226 L
f
U
u
473.8 297.8758 m
466.3361 293.6172 L
469.5223 289.0383 472.4996 284.2483 475.4229 279.1749 C
483.0848 283.1058 L
480.0969 288.3006 477.1701 293.011 473.8 297.8758 C
f
474.4 398.2 m
468.202 394.556 L
471.4666 390.05 474.3614 385.5336 477.2488 380.6337 C
483.649 383.9839 L
480.6826 389.0232 477.8072 393.4733 474.4 398.2 C
f
U
*U
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
