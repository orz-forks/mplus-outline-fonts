%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(TM) 7.0
%%For: (coz) (underforest)
%%Title: (2450.eps)
%%CreationDate: (1/31/04) (4:30 PM)
%%BoundingBox: 0 0 500 501
%%HiResBoundingBox: 0 0.4 500 500.4
%%DocumentProcessColors: Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_ColorImage_AI6 1.1 0
%%+ procset Adobe_Illustrator_AI5 1.2 0
%%+ procset Adobe_cshow 2.0 8
%AI5_FileFormat 3
%AI3_ColorUsage: Black&White
%AI3_IncludePlacedImages
%AI7_ImageSettings: 1
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 8.5 0 0 0 0 0 0 0 0 -1 -1
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () 
%AI3_TemplateBox: 244.5 256.5 244.5 256.5
%AI3_TileBox: -41.5 -119.5 534.5 642.5
%AI3_DocumentPreview: Macintosh_ColorPic
%AI5_ArtSize: 592 840
%AI5_RulerUnits: 2
%AI5_ArtFlags: 1 0 0 1 0 0 1 1 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI5_OpenToView: -139.5 520.5 1 794 556 25 0 0 3 40 0 0
%AI5_OpenViewLayers: 5
%%PageOrigin:-41.5 -119.5
%%AI3_PaperRect:-10 808 585 -34
%%AI3_Margin:10 -43 -9 34
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 25 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			0
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			1
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop 
			0 eq
			{
				pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				pop
				3
				{
					1 exch sub
					3 index mul 
					1 exch sub
					3 1 roll
				} repeat
				4 -1 roll pop
				setrgbcolor
			} ifelse
		}
		def
	} if
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	level2?
	{
		gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
		add add add 4 eq
	}
	{
		1 0 0 0 testCMYKColorThrough
		0 1 0 0 testCMYKColorThrough
		0 0 1 0 testCMYKColorThrough
		0 0 0 1 testCMYKColorThrough
		and and and
	} ifelse
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.1 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 24 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize
{ 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6
	{
		dup type /arraytype eq
		{
			dup xcheck
			{
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not
{
	/Adobe_ColorImage_AI6_Vars 15 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/channelcount 0 def
	/sourcecount 0 def
	/sourcearray 4 array def
	/plateindex -1 def
	/XIMask 0 def
	/XIBinary 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIBuffer null def
	/XIDataProc null def
	/XIVersion 6 def
end
/WalkRGBString null def
/WalkCMYKString null def
/StuffRGBIntoGrayString null def
/RGBToGrayImageProc null def
/StuffCMYKIntoGrayString null def
/CMYKToGrayImageProc null def
/ColorImageCompositeEmulator null def
/SeparateCMYKImageProc null def
/FourEqual null def
/TestPlateIndex null def
currentdict /_colorimage known not
{
	/colorimage where
	{
		/colorimage get /_colorimage exch def
	}
	{
		/_colorimage null def
	} ifelse
} if
/_currenttransfer systemdict /currenttransfer get def
/colorimage null def
/XI null def
/WalkRGBString
{
	0 3 index
	dup length 1 sub 0 3 3 -1 roll
	{
		3 getinterval { } forall
		5 index exec
		3 index
	} for
	
	 5 { pop } repeat
} def
/WalkCMYKString
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll
	{
		4 getinterval { } forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/StuffRGBIntoGrayString
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/RGBToGrayImageProc
{	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		dup length 3 idiv string
		dup 3 1 roll 
		
		/StuffRGBIntoGrayString load exch
		WalkRGBString
 end
} def
/StuffCMYKIntoGrayString
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/CMYKToGrayImageProc
{	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		dup length 4 idiv string
		dup 3 1 roll 
		
		/StuffCMYKIntoGrayString load exch
		WalkCMYKString
 end
} def
/ColorImageCompositeEmulator
{
	pop true eq
	{
		Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat
	}
	{
		Adobe_ColorImage_AI6_Vars /channelcount get 1 ne
		{
			Adobe_ColorImage_AI6_Vars begin
				sourcearray 0 3 -1 roll put
			
				channelcount 3 eq 
				{ 
					/RGBToGrayImageProc 
				}
				{ 
					/CMYKToGrayImageProc
				} ifelse
				load
		 end
		} if
		image
	} ifelse
} def
/SeparateCMYKImageProc
{	
	Adobe_ColorImage_AI6_Vars begin
		sourcecount 0 ne
		{
			sourcearray plateindex get exec
		}
		{			
			sourcearray 0 get exec
			
			dup length 4 idiv string
			
			0 2 index
			
			plateindex 4 2 index length 1 sub
			{
				get 255 exch sub
				
				3 copy put pop 1 add
				
				2 index
			} for
			pop pop exch pop
		} ifelse
 end
} def
	
/FourEqual
{
	4 index ne
	{
		pop pop pop false
	}
	{
		4 index ne
		{
			pop pop false
		}
		{
			4 index ne
			{
				pop false
			}
			{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/TestPlateIndex
{
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where
		{
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 FourEqual 
			{ 
				/plateindex 0 def
			}
			{
				0 1 0 0 FourEqual
				{ 
					/plateindex 1 def
				}
				{
					0 0 1 0 FourEqual
					{
						/plateindex 2 def
					}
					{
						0 0 0 1 FourEqual
						{ 
							/plateindex 3 def
						}
						{
							0 0 0 0 FourEqual
							{
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/colorimage
{
	Adobe_ColorImage_AI6_Vars begin
		/channelcount 1 index def
		/sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def
		4 sourcecount add index dup 
		8 eq exch 1 eq or not
 end
	
	{
		/_colorimage load null ne
		{
			_colorimage
		}
		{
			Adobe_ColorImage_AI6_Vars /sourcecount get
			7 add { pop } repeat
		} ifelse
	}
	{
		dup 3 eq
		TestPlateIndex
		dup -1 eq exch 5 eq or or
		{
			/_colorimage load null eq
			{
				ColorImageCompositeEmulator
			}
			{
				dup 1 eq
				{
					pop pop image
				}
				{
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
					{
						gsave
						
						0 _currenttransfer exec
						1 _currenttransfer exec
						eq
						{ 0 _currenttransfer exec 0.5 lt }
						{ 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse
						
						{ { pop 0 } } { { pop 1 } } ifelse
						systemdict /settransfer get exec
					} if
					
					_colorimage
					
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
					{
						grestore
					} if
				} ifelse
			} ifelse
		}
		{
			dup 1 eq
			{
				pop pop
				image
			}
			{
				pop pop
				Adobe_ColorImage_AI6_Vars begin
					sourcecount -1 0
					{			
						exch sourcearray 3 1 roll put
					} for
					/SeparateCMYKImageProc load
			 end
				systemdict /image get exec
			} ifelse
		} ifelse
	} ifelse
} def
/XG
{
	pop pop
} def
/XF
{
	13 {pop} repeat
} def
/Xh
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIMask exch 0 ne def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		XIMask
		{
			/_lp /null ddef
			_fc
			/_lp /imagemask ddef
		}
		if
		/XIVersion 7 def
 end
} def
/XH
{
	Adobe_ColorImage_AI6_Vars begin
		/XIVersion 6 def
		grestore
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIMask exch 0 ne def
		/XIBinary exch 0 ne def
		pop
		pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq
		{
			XIImageWidth 8 div ceiling cvi
		}
		{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIBuffer exch string def
		XIBinary
		{
			/XIDataProc { currentfile XIBuffer readstring pop } def
			XIVersion 6 le
			{
				currentfile 128 string readline pop pop
			}
			if
		}
		{
			/XIDataProc { currentfile XIBuffer readhexstring pop } def
		} ifelse
		
		XIVersion 6 le
		{
			0 0 moveto
			XIImageMatrix concat
			XIImageWidth XIImageHeight scale
			XIMask
			{
				/_lp /null ddef
				_fc
				/_lp /imagemask ddef
			} if
		} if
		
		XIMask
		{
			XIImageWidth XIImageHeight
			false
			[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
			/XIDataProc load
			imagemask
		}
		{
			XIImageWidth XIImageHeight
			XIBitsPerPixel
			[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
			/XIDataProc load
			
			XIChannelCount 1 eq
			{
				gsave
				0 setgray
				image
				grestore
			}
			{
				false
				XIChannelCount
				colorimage
			} ifelse
		} ifelse
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 7.0 Full Prolog)
%%Version: 1.2 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 107 dict dup begin
put
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XA
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/_rgbtocmyk
{
3
	{
	1 exch sub 3 1 roll
	} repeat
3 copy 1 4 1 roll
3
	{
	3 index 2 copy gt
		{
		exch
		} if
	pop 4 1 roll
	} repeat
pop pop pop
4 1 roll
3
	{
	3 index sub
	3 1 roll
	} repeat
4 -1 roll
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq
	{
		findcmykcustomcolor
	}
	{
		/findrgbcustomcolor where not {
			4 1 roll _rgbtocmyk
			5 -1 roll
			findcmykcustomcolor
		}
		{
			pop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq
	{
		findcmykcustomcolor
	}
	{
		/findrgbcustomcolor where not {
			4 1 roll _rgbtocmyk
			5 -1 roll
			findcmykcustomcolor
		}
		{
			pop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%EndProlog
%%BeginSetup
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_BeginPalette
0 0 Pb
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 0 1 1 0 0 3 79 79 255 Lb
(glyphs) Ln
0 A
u
1 Ap
800 Ar
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
0 XR
100 400.4 m
100 500.4 L
0 500.4 L
0 400.4 L
100 400.4 L
n
500 400.4 m
500 500.4 L
400 500.4 L
400 400.4 L
500 400.4 L
n
200 400.4 m
200 500.4 L
100 500.4 L
100 400.4 L
200 400.4 L
n
300 400.4 m
300 500.4 L
200 500.4 L
200 400.4 L
300 400.4 L
n
400 400.4 m
400 500.4 L
300 500.4 L
300 400.4 L
400 400.4 L
n
100 300.4 m
100 400.4 L
0 400.4 L
0 300.4 L
100 300.4 L
n
500 300.4 m
500 400.4 L
400 400.4 L
400 300.4 L
500 300.4 L
n
200 300.4 m
200 400.4 L
100 400.4 L
100 300.4 L
200 300.4 L
n
300 300.4 m
300 400.4 L
200 400.4 L
200 300.4 L
300 300.4 L
n
400 300.4 m
400 400.4 L
300 400.4 L
300 300.4 L
400 300.4 L
n
100 200.4 m
100 300.4 L
0 300.4 L
0 200.4 L
100 200.4 L
n
500 200.4 m
500 300.4 L
400 300.4 L
400 200.4 L
500 200.4 L
n
200 200.4 m
200 300.4 L
100 300.4 L
100 200.4 L
200 200.4 L
n
300 200.4 m
300 300.4 L
200 300.4 L
200 200.4 L
300 200.4 L
n
400 200.4 m
400 300.4 L
300 300.4 L
300 200.4 L
400 200.4 L
n
100 100.4 m
100 200.4 L
0 200.4 L
0 100.4 L
100 100.4 L
n
500 100.4 m
500 200.4 L
400 200.4 L
400 100.4 L
500 100.4 L
n
200 100.4 m
200 200.4 L
100 200.4 L
100 100.4 L
200 100.4 L
n
300 100.4 m
300 200.4 L
200 200.4 L
200 100.4 L
300 100.4 L
n
400 100.4 m
400 200.4 L
300 200.4 L
300 100.4 L
400 100.4 L
n
100 0.4 m
100 100.4 L
0 100.4 L
0 0.4 L
100 0.4 L
n
500 0.4 m
500 100.4 L
400 100.4 L
400 0.4 L
500 0.4 L
n
200 0.4 m
200 100.4 L
100 100.4 L
100 0.4 L
200 0.4 L
n
300 0.4 m
300 100.4 L
200 100.4 L
200 0.4 L
300 0.4 L
n
400 0.4 m
400 100.4 L
300 100.4 L
300 0.4 L
400 0.4 L
n
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
0 Ap
0 O
0 g
239.8 465.8 m
239.8 450.4625 263 442.65 263 428.6 c
263 418.2822 256.8916 412.6 245.8 412.6 c
241.087 412.6 234.8686 414.3744 231.4 416.6 C
229 412.2 L
233 409.6334 239.8 407.6 245.8 407.6 c
259.7431 407.6 268.2 415.6691 268.2 428.6 c
268.2 445.4333 245 453.3 245 465.8 c
245 475.3422 250.7089 481.4931 266.8 483.8 C
266.8 489.2 L
225.8 489.2 L
225.8 484.4 L
252.4508 484.4 L
244.1144 480.2194 239.8 473.7778 239.8 465.8 c
f
221.5 454.4 m
216.6 455.4 L
214.0784 443.5953 209.3851 431.0532 203.8 421 C
208.3 418.8 L
214.1596 429.3473 218.8953 442.2063 221.5 454.4 C
f
295.4 420.4 m
292.417 431.4775 285.5616 446.0033 278.8 456.2 C
274.5 453.6 L
281.1349 443.5944 287.8502 429.2114 290.6 419 C
295.4 420.4 L
f
238.3 364.9 m
238.3 348.8635 260.6 342.6166 260.6 329.1 c
260.6 319.6792 255.3068 314.6 245.4 314.6 c
240.9108 314.6 235.1973 316.1974 231.6 318.4 C
228.5 312.1 L
232.5 309.5334 239.4 307.5 245.4 307.5 c
259.7873 307.5 268.3 315.6971 268.3 329.1 c
268.3 346.4333 246 352.9 246 364.9 c
246 373.685 251.341 379.545 266.3 381.9 C
266.3 389.5 L
225.3 389.5 L
225.3 382.7 L
249.9782 382.7 L
242.2397 378.2912 238.3 372.0513 238.3 364.9 c
f
236.8 264 m
236.8 247.2645 258.2 242.5833 258.2 229.6 c
258.2 221.0762 253.722 216.6 245 216.6 c
240.7344 216.6 235.5259 218.0206 231.8 220.2 C
228 212 L
232 209.4334 239 207.4 245 207.4 c
259.8315 207.4 268.4 215.725 268.4 229.6 c
268.4 247.4333 247 252.5 247 264 c
247 272.0278 251.9731 277.597 265.8 280 C
265.8 289.7131 L
269.8054 284.5633 274.3964 278.4622 278.2 273.1 C
284.6 277.6 L
280.5987 283.283 276.0934 289.3472 272 294.6 C
265.5 290.1 L
265.5762 290.0023 265.656 289.8984 265.7326 289.8 C
224.8 289.8 L
224.8 281 L
247.6559 281 L
240.437 276.4608 236.8 270.4584 236.8 264 c
f
265.3 178.1 m
265.3 187.1746 L
269.0654 182.2839 273.3408 176.5604 276.8 171.7 C
284.4 177 L
280.2805 182.8509 275.3669 189.4527 271.2 194.8 C
264.3716 190.1 L
224.3 190.1 L
224.3 179.3 L
245.4198 179.3 L
238.6746 174.7036 235.3 168.9595 235.3 163.1 c
235.3 145.6656 255.8 142.5499 255.8 130.1 c
255.8 122.4733 252.1373 118.6 244.6 118.6 c
240.5582 118.6 235.8546 119.8436 232 122 C
227.5 111.9 L
231.5 109.3334 238.6 107.3 244.6 107.3 c
259.8757 107.3 268.5 115.753 268.5 130.1 c
268.5 148.4333 248 152.1 248 163.1 c
248 170.3707 252.6052 175.649 265.3 178.1 C
f
223.2 354.1 m
216.3 355.5 L
213.717 343.4082 208.9584 330.7251 203.5 320.9 C
209.875 317.9 L
215.7605 328.4939 220.5223 341.5647 223.2 354.1 C
f
224.9 253.8 m
216 255.6 L
213.3557 243.2211 208.5317 230.397 203.2 220.8 C
211.45 217 L
217.3614 227.6404 222.1493 240.923 224.9 253.8 C
f
226.6 153.5 m
215.7 155.7 L
212.9944 143.034 208.1049 130.0689 202.9 120.7 C
213.025 116.1 L
218.9622 126.787 223.7763 140.2814 226.6 153.5 C
f
295.7 320.3 m
292.717 331.3775 285.8616 346.1033 279.1 356.3 C
273 352.8 L
279.428 343.1063 286.1686 328.5432 288.9 318.4 C
295.7 320.3 L
f
296 220.2 m
293.017 231.2775 286.1616 246.2033 279.4 256.4 C
271.5 252 L
277.7212 242.6182 284.4869 227.8751 287.2 217.8 C
296 220.2 L
f
296.3 120.1 m
293.317 131.1775 286.4616 146.3033 279.7 156.5 C
270 151.2 L
276.0143 142.1302 282.8052 127.2069 285.5 117.2 C
296.3 120.1 L
f
249 62.2 m
249 68.7135 253.2372 73.701 264.8 76.2 C
264.8 84.6161 L
268.3472 79.965 272.2676 74.6871 275.4 70.3 C
284.2 76.4 L
279.9622 82.4189 274.6405 89.5583 270.4 95 C
263.6885 90.4 L
223.8 90.4 L
223.8 77.6 L
243.2236 77.6 L
236.9252 73.0048 233.8 67.5301 233.8 62.2 c
233.8 44.0666 253.4 42.5166 253.4 30.6 c
253.4 23.8703 250.5525 20.6 244.2 20.6 c
240.3819 20.6 236.1833 21.6667 232.2 23.8 C
227 11.8 L
231 9.2334 238.2 7.2 244.2 7.2 c
259.9199 7.2 268.6 15.781 268.6 30.6 c
268.6 49.4333 249 51.7 249 62.2 c
f
215.4 55.8 m
212.633 42.8469 207.6782 29.7408 202.6 20.6 C
214.6 15.2 L
220.5631 25.9336 225.4033 39.6398 228.3 53.2 C
215.4 55.8 L
f
268.5 50.4 m
274.3075 41.6421 281.1236 26.5388 283.8 16.6 C
296.6 20 L
293.617 31.0775 286.7616 46.4033 280 56.6 C
268.5 50.4 L
f
339.6 464.4 m
348.6627 464.4 345.7216 462.7696 392.2 420.2 C
395.8 423.8 L
348.6333 467 350.9333 469.4 339.6 469.4 c
329.6 469.4 328.0333 461.6667 304.2 432.8 C
308.2 429.9 L
331.9629 458.6815 332.8588 464.4 339.6 464.4 c
f
339.7 362.2 m
347.7533 362.2 345.7747 359.9471 390.7 318.8 C
395.9 324.2 L
348.7333 367.4 351.0333 369.8 339.7 369.8 c
329.7 369.8 327.9333 362.0667 304.1 333.2 C
309.8 328.7 L
332.6628 356.5205 333.8003 362.2 339.7 362.2 c
f
339.8 260 m
346.8439 260 345.8277 257.1247 389.2 217.4 C
396 224.6 L
348.8333 267.8 351.1333 270.2 339.8 270.2 c
329.8 270.2 327.8333 262.4667 304 233.6 C
311.4 227.5 L
333.3627 254.3595 334.7419 260 339.8 260 c
f
339.9 157.8 m
345.9344 157.8 345.8807 154.3022 387.7 116 C
396.1 125 L
348.9333 168.2 351.2333 170.6 339.9 170.6 c
329.9 170.6 327.7333 162.8667 303.9 134 C
313 126.3 L
334.0626 152.1985 335.6835 157.8 339.9 157.8 c
f
303.8 34.4 m
314.6 25.1 L
334.7625 50.0375 336.625 55.6 340 55.6 c
345.025 55.6 345.9338 51.4798 386.2 14.6 C
396.2 25.4 L
349.0333 68.6 351.3333 71 340 71 c
330 71 327.6333 63.2667 303.8 34.4 C
f
113.2 439.2 m
113.2 421.2865 126.4121 408.2 143.2 408.2 c
166.0975 408.2 177.4 423.1127 177.4 445.8 c
177.4 452.567 176.5209 458.6859 173.8614 466.6842 C
179.9013 459.9648 186.3792 453.9996 192.6 449.4 C
195.8 453.2 L
186.0625 460.4 175.5931 470.8861 167.8 481.8 C
163.8 479.2 L
170.8976 462.9867 172.4 455.6424 172.4 445.8 c
172.4 430.8368 167.4994 413 143.2 413 c
128.8336 413 118.2 424.2635 118.2 439.2 c
118.2 456.2529 127.716 471.5085 144.8 481 C
144.8 486.6 L
110 486.6 L
110 481.8 L
137.5208 481.8 L
122.3012 471.4821 113.2 455.6627 113.2 439.2 c
f
112.9 339.5 m
112.9 321.1365 126.1232 308.1 143.5 308.1 c
165.8641 308.1 177.7 322.7796 177.7 345.2 c
177.7 349.9448 177.2805 354.2012 176.0574 358.9873 C
181.0966 353.779 186.3691 349.0938 191.5 345.3 C
195.9 350.9 L
186.1625 358.1 175.5931 368.6861 167.8 379.6 C
162.1 375.7 L
168.7825 361.5973 170.4 354.6146 170.4 345.2 c
170.4 330.2333 164.8492 315 143.5 315 c
129.8801 315 120.3 325.1295 120.3 339.5 c
120.3 355.999 129.0106 370.6277 144.8 379.4 C
144.8 387.1 L
109.9 387.1 L
109.9 380.3 L
134.6118 380.3 L
120.8992 369.9758 112.9 354.9644 112.9 339.5 c
f
112.6 239.8 m
112.6 220.9866 125.8343 208 143.8 208 c
165.6307 208 178 222.4465 178 244.6 c
178 247.3066 177.8658 249.7933 177.5193 252.2819 C
181.7518 248.1424 186.1139 244.3691 190.4 241.2 C
196 248.6 L
186.2625 255.8 175.5931 266.4861 167.8 277.4 C
160.4 272.2 L
166.6675 260.208 168.4 253.5868 168.4 244.6 c
168.4 229.6299 162.199 217 143.8 217 c
130.9265 217 122.4 225.9956 122.4 239.8 c
122.4 255.745 130.3052 269.747 144.8 277.8 C
144.8 287.6 L
109.8 287.6 L
109.8 278.8 L
131.8527 278.8 L
119.5717 268.5236 112.6 254.2997 112.6 239.8 c
f
112.3 140.1 m
112.3 120.8367 125.5454 107.9 144.1 107.9 c
165.3973 107.9 178.3 122.1134 178.3 144 c
178.3 144.8242 178.2834 145.6151 178.2579 146.394 C
181.8984 142.9722 185.6203 139.8207 189.3 137.1 C
196.1 146.3 L
186.3625 153.5 175.5931 164.2861 167.8 175.2 C
158.7 168.7 L
164.5524 158.8187 166.4 152.5591 166.4 144 c
166.4 129.0264 159.5488 119 144.1 119 c
131.973 119 124.5 126.8616 124.5 140.1 c
124.5 155.491 131.5998 168.8663 144.8 176.2 C
144.8 188.1 L
109.7 188.1 L
109.7 177.3 L
129.2507 177.3 L
118.3254 167.1199 112.3 153.6691 112.3 140.1 c
f
167.8 73 m
157 65.2 L
162.4373 57.4294 164.4 51.5313 164.4 43.4 c
164.4 28.423 156.8986 21 144.4 21 c
133.0194 21 126.6 27.7277 126.6 40.4 c
126.6 55.2371 132.8945 67.9855 144.8 74.6 C
144.8 88.6 L
109.6 88.6 L
109.6 75.8 L
126.7571 75.8 L
117.1266 65.7624 112 53.0634 112 40.4 c
112 20.6867 125.2565 7.8 144.4 7.8 c
164.3838 7.8 177.574 20.7534 178.5372 41.0001 C
181.7286 38.0894 184.9758 35.384 188.2 33 C
196.2 44 L
186.4625 51.2 175.5931 62.0861 167.8 73 C
f
18.6 409.6 m
14.8485 423.668 13.2 436.4862 13.2 450.4 c
13.2 464.3138 14.8485 477.132 18.6 491.2 C
13.8 492.2 L
10.2 478.7 8.2 465.9 8.2 450.4 c
8.2 434.9 10.2 422.1 13.8 408.6 C
18.6 409.6 L
f
*u
1 D
51.8 407.4 m
64.2435 407.4 72.4 415.4678 72.4 429.2 C
72.4 430.1594 L
77.6749 426.9337 82.2789 422.5712 85.6 417.4 C
89.6 420.2 L
85.338 426.8361 79.2937 432.1741 72.4 435.7877 C
72.4 470.4 L
90.8 470.4 L
90.8 475.2 L
72.4 475.2 L
72.4 494.2 L
67.4 494.2 L
67.4 475.2 L
36.6 475.2 L
36.6 470.4 L
67.4 470.4 L
67.4 438.046 L
62.4029 439.9546 57.1063 441 51.8 441 c
39.6212 441 32 433.8345 32 424.2 c
32 414.2886 39.7322 407.4 51.8 407.4 c
f
0 D
51.8 436.2 m
57.1168 436.2 62.4471 434.967 67.4 432.7776 C
67.4 429.2 L
67.4 418.0631 61.5077 412.2 51.8 412.2 c
42.3809 412.2 37 416.9648 37 424.2 c
37 431.3231 42.3544 436.2 51.8 436.2 c
f
*U
20.4 309.6 m
16.6832 323.538 14.95 336.6229 14.95 350.4 c
14.95 364.1771 16.6832 377.262 20.4 391.2 C
13.3 392.3 L
9.7 378.8 7.7 365.9 7.7 350.4 c
7.7 334.9 9.7 322 13.3 308.5 C
20.4 309.6 L
f
22.2 209.6 m
18.5178 223.408 16.7 236.7596 16.7 250.4 c
16.7 264.0404 18.5178 277.392 22.2 291.2 C
12.8 292.4 L
9.2 278.9 7.2 265.9 7.2 250.4 c
7.2 234.9 9.2 221.9 12.8 208.4 C
22.2 209.6 L
f
24 109.6 m
20.3525 123.2781 18.45 136.8963 18.45 150.4 c
18.45 163.9037 20.3525 177.5219 24 191.2 C
12.3 192.5 L
8.7 179 6.7 165.9 6.7 150.4 c
6.7 134.9 8.7 121.8 12.3 108.3 C
24 109.6 L
f
*u
1 D
51.6 307.3 m
64.1358 307.3 72.2657 315.4136 72.2971 329.0229 C
76.6703 325.9045 80.5856 321.8715 83.65 317.1 C
89.35 321 L
84.7429 328.1736 78.8755 333.6939 72.3 337.4017 C
72.3 368.1 L
90.9 368.1 L
90.9 374.9 L
72.3 374.9 L
72.3 394.3 L
65.2 394.3 L
65.2 374.9 L
36 374.9 L
36 368.1 L
65.2 368.1 L
65.2 340.6071 L
60.8254 342.1179 56.2488 342.9 51.6 342.9 c
39.1823 342.9 31.1 335.0984 31.1 325.1 c
31.1 314.7554 39.3627 307.3 51.6 307.3 c
f
0 D
51.6 336.1 m
56.1668 336.1 60.799 335.0409 65.2 333.0963 C
65.2 329.1 L
65.2 319.2684 60.0804 314.1 51.6 314.1 c
43.253 314.1 38.3 318.5284 38.3 325.1 c
38.3 331.5619 43.1772 336.1 51.6 336.1 c
f
*U
*u
1 D
51.4 207.2 m
63.6558 207.2 71.6324 214.8977 72.15 227.6813 C
75.692 224.7335 78.9511 221.0801 81.7 216.8 C
89.1 221.8 L
84.1758 229.4672 78.4674 235.1628 72.2 238.9725 C
72.2 265.8 L
91 265.8 L
91 274.6 L
72.2 274.6 L
72.2 288.4127 L
75.3908 284.2645 78.834 279.6554 81.7601 275.5301 C
87.5201 279.5801 L
83.9189 284.6948 79.8641 290.1525 76.1802 294.88 C
72.2 292.1245 L
72.2 294.4 L
63 294.4 L
63 274.6 L
35.4 274.6 L
35.4 265.8 L
63 265.8 L
63 243.0864 L
59.2598 244.2186 55.384 244.7999 51.4 244.7999 c
38.7435 244.7999 30.2 236.3623 30.2 226 c
30.2 215.2221 38.9933 207.2 51.4 207.2 c
f
0 D
51.4 236 m
55.2377 236 59.1725 235.0907 63 233.4096 C
63 229 L
63 220.4737 58.6533 216 51.4 216 c
44.1251 216 39.6 220.0921 39.6 226 c
39.6 231.8007 43.9999 236 51.4 236 c
f
*U
*u
1 D
51.2 107.1 m
63.0765 107.1 70.9028 114.2557 71.965 126.0864 C
74.7469 123.3921 77.3802 120.1899 79.75 116.5 C
88.85 122.6 L
83.6371 130.7166 78.0725 136.59 72.1 140.5086 C
72.1 163.5 L
91.1 163.5 L
91.1 174.3 L
72.1 174.3 L
72.1 184.8451 L
74.7457 181.3494 77.4774 177.6537 79.8001 174.3902 C
86.6401 179.1601 L
82.9325 184.4259 78.5104 190.3675 74.7602 195.18 C
72.1 193.3489 L
72.1 194.5 L
60.8 194.5 L
60.8 174.3 L
34.8 174.3 L
34.8 163.5 L
60.8 163.5 L
60.8 145.5298 L
57.703 146.3165 54.5059 146.6999 51.2 146.6999 c
38.3046 146.6999 29.3 137.6262 29.3 126.9 c
29.3 115.6889 38.6238 107.1 51.2 107.1 c
f
0 D
51.2 135.9 m
54.3276 135.9 57.5723 135.1653 60.8 133.77 C
60.8 128.9 L
60.8 121.679 57.2259 117.9 51.2 117.9 c
44.9971 117.9 40.9 121.6558 40.9 126.9 c
40.9 132.0395 44.8227 135.9 51.2 135.9 c
f
*U
11.8 92.6 m
8.2 79.1 6.2 65.9 6.2 50.4 c
6.2 34.9 8.2 21.7 11.8 8.2 C
25.8 9.6 L
22.1871 23.1481 20.2 37.033 20.2 50.4 c
20.2 63.767 22.1871 77.6519 25.8 91.2 C
11.8 92.6 L
f
417.8 409.6 m
414.0485 423.668 412.4 436.4862 412.4 450.4 c
412.4 464.3138 414.0485 477.132 417.8 491.2 C
413 492.2 L
409.4 478.7 407.4 465.9 407.4 450.4 c
407.4 434.9 409.4 422.1 413 408.6 C
417.8 409.6 L
f
*u
1 D
452.2 441 m
440.0212 441 432.4 433.8345 432.4 424.2 c
432.4 414.2886 440.1322 407.4 452.2 407.4 c
464.6435 407.4 471.8 415.4678 471.8 429.2 C
471.8 430.3959 L
476.9378 427.2137 481.5188 422.8205 485 417.4 C
489 420.2 L
484.6254 427.0115 478.6563 432.4536 471.8 436.0678 C
471.8 459 L
487 459 L
487 463.8 L
471.8 463.8 L
471.8 483.4 L
481.6257 483.4 L
483.0045 481.5411 484.3658 479.6767 485.6801 477.8101 C
489.2801 480.4201 L
485.8918 485.2324 482.5717 489.7225 479.0201 494.28 C
475.3302 491.67 L
476.2262 490.5202 477.1213 489.3628 478.0121 488.2 C
433.8 488.2 L
433.8 483.4 L
466.8 483.4 L
466.8 463.8 L
433.8 463.8 L
433.8 459 L
466.8 459 L
466.8 438.313 L
462.1708 440.0477 457.2491 441 452.2 441 c
f
0 D
466.8 429.2 m
466.8 417.5631 461.6854 412.2 452.2 412.2 c
442.7809 412.2 437.4 416.9648 437.4 424.2 c
437.4 431.3231 442.7544 436.2 452.2 436.2 c
457.138 436.2 462.1139 435.0866 466.8 433.029 C
466.8 429.2 L
f
*U
419.8 309.6 m
416.0831 323.538 414.35 336.6229 414.35 350.4 c
414.35 364.1771 416.0831 377.262 419.8 391.2 C
412.7 392.3 L
409.1 378.8 407.1 365.9 407.1 350.4 c
407.1 334.9 409.1 322 412.7 308.5 C
419.8 309.6 L
f
421.8 209.6 m
418.1178 223.408 416.3 236.7596 416.3 250.4 c
416.3 264.0404 418.1178 277.392 421.8 291.2 C
412.4 292.4 L
408.8 278.9 406.8 265.9 406.8 250.4 c
406.8 234.9 408.8 221.9 412.4 208.4 C
421.8 209.6 L
f
423.8 109.6 m
420.1525 123.2781 418.25 136.8963 418.25 150.4 c
418.25 163.9037 420.1525 177.5219 423.8 191.2 C
412.1 192.5 L
408.5 179 406.5 165.9 406.5 150.4 c
406.5 134.9 408.5 121.8 412.1 108.3 C
423.8 109.6 L
f
*u
1 D
452.1 307.3 m
464.6189 307.3 471.8156 315.1078 471.9841 328.6239 C
476.1998 325.5279 480.0612 321.4652 483.25 316.5 C
488.95 320.4 L
484.2366 327.7389 478.4769 333.3163 472 337.0128 C
472 357.85 L
487.3 357.85 L
487.3 364.55 L
472 364.55 L
472 381.6 L
480.1492 381.6 L
481.3729 379.9397 482.5792 378.2844 483.7201 376.6701 C
488.4001 380.0001 L
484.9054 384.9636 481.218 389.9375 477.6002 394.58 C
472.8302 391.25 L
473.578 390.2904 474.3428 389.2974 475.1085 388.3 C
433.9 388.3 L
433.9 381.6 L
464.9 381.6 L
464.9 364.55 L
433.9 364.55 L
433.9 357.85 L
464.9 357.85 L
464.9 340.2116 L
460.8214 341.5861 456.5357 342.3 452.1 342.3 c
439.6823 342.3 431.7 334.7984 431.7 324.8 c
431.7 314.4554 439.8627 307.3 452.1 307.3 c
f
0 D
452.1 335.6 m
456.3736 335.6 460.7208 334.6325 464.9 332.7769 C
464.9 329.1 L
464.9 318.61 460.5388 314 452.1 314 c
443.753 314 438.9 318.2285 438.9 324.8 c
438.9 331.2619 443.6771 335.6 452.1 335.6 c
f
*U
*u
1 D
452 207.2 m
464.1289 207.2 471.31 214.1959 472.1192 226.5955 C
475.4931 223.663 478.6746 219.9993 481.5 215.6 C
488.9 220.6 L
483.8871 228.4053 478.3161 234.1327 472.2 237.9218 C
472.2 256.7 L
487.6 256.7 L
487.6 265.3 L
472.2 265.3 L
472.2 279.8 L
478.6754 279.8 L
479.7416 278.3463 480.7814 276.9099 481.7601 275.5301 C
487.5201 279.5801 L
483.9189 284.6948 479.8641 290.1525 476.1802 294.88 C
470.3302 290.83 L
470.9412 290.046 471.5722 289.2289 472.2098 288.4 C
434 288.4 L
434 279.8 L
463 279.8 L
463 265.3 L
434 265.3 L
434 256.7 L
463 256.7 L
463 242.0429 L
459.4832 243.0774 455.8188 243.6 452 243.6 c
439.3434 243.6 431 235.7623 431 225.4 c
431 214.6221 439.5933 207.2 452 207.2 c
f
0 D
452 235 m
455.6252 235 459.3447 234.149 463 232.5149 C
463 229 L
463 219.6569 459.3921 215.8 452 215.8 c
444.725 215.8 440.4 219.4921 440.4 225.4 c
440.4 231.2007 444.5999 235 452 235 c
f
*U
*u
1 D
451.9 107.1 m
463.5234 107.1 470.631 113.2488 472.1026 124.3739 C
474.7543 121.6844 477.3275 118.4719 479.75 114.7 C
488.85 120.8 L
483.5799 129.0058 478.1741 134.871 472.4 138.7624 C
472.4 155.55 L
487.9 155.55 L
487.9 166.05 L
472.4 166.05 L
472.4 178 L
477.1935 178 L
478.0978 176.7623 478.9769 175.5469 479.8001 174.3902 C
486.6401 179.1601 L
482.9325 184.4259 478.5104 190.3675 474.7602 195.18 C
467.8302 190.41 L
468.3098 189.7945 468.8049 189.1553 469.3099 188.5 C
434.1 188.5 L
434.1 178 L
461.1 178 L
461.1 166.05 L
434.1 166.05 L
434.1 155.55 L
461.1 155.55 L
461.1 143.8256 L
458.1528 144.5521 455.0946 144.9 451.9 144.9 c
439.0046 144.9 430.3 136.7262 430.3 126 c
430.3 114.7889 439.3238 107.1 451.9 107.1 c
f
0 D
451.9 134.4 m
454.891 134.4 457.99 133.6927 461.1 132.3037 C
461.1 128.9 L
461.1 120.7039 458.2455 117.6 451.9 117.6 c
445.6971 117.6 441.9 120.7557 441.9 126 c
441.9 131.1395 445.5226 134.4 451.9 134.4 c
f
*U
411.8 92.6 m
408.2 79.1 406.2 65.9 406.2 50.4 c
406.2 34.9 408.2 21.7 411.8 8.2 C
425.8 9.6 L
422.1871 23.1481 420.2 37.033 420.2 50.4 c
420.2 63.767 422.1871 77.6519 425.8 91.2 C
411.8 92.6 L
f
*u
1 D
472.6 39.5465 m
472.6 54.4 L
488.2 54.4 L
488.2 66.8 L
472.6 66.8 L
472.6 76.2 L
475.7092 76.2 L
476.4473 75.1866 477.1685 74.1909 477.8401 73.2502 C
485.7601 78.7401 L
481.9461 84.1571 477.1566 90.5825 473.3402 95.48 C
465.3302 89.99 L
465.6766 89.5454 466.0424 89.0718 466.4069 88.6 C
434.2 88.6 L
434.2 76.2 L
459.2 76.2 L
459.2 66.8 L
434.2 66.8 L
434.2 54.4 L
459.2 54.4 L
459.2 45.5156 L
456.8237 45.9802 454.3665 46.2 451.8 46.2 c
438.6657 46.2 429.6 37.6901 429.6 26.6 c
429.6 14.9557 439.0543 7 451.8 7 c
462.8071 7 469.7952 12.2761 471.9094 22.0151 C
473.9588 19.642 475.9972 16.9184 478 13.8 C
488.8 21 L
483.3147 29.5408 478.0551 35.5441 472.6 39.5465 C
f
0 D
451.8 19.4 m
446.6692 19.4 443.4 22.0194 443.4 26.6 c
443.4 31.0783 446.4454 33.8 451.8 33.8 c
454.1735 33.8 456.6576 33.2321 459.2 32.1122 C
459.2 28.8 L
459.2 21.7508 457.0988 19.4 451.8 19.4 c
f
*U
99 484.7401 m
95.6117 489.5524 92.2916 494.0424 88.7401 498.6 C
85.0501 495.99 L
88.5898 491.4477 92.1194 486.7894 95.4 482.1301 C
99 484.7401 L
f
89.2801 480.4201 m
85.8918 485.2324 82.5717 489.7225 79.0201 494.28 C
75.3302 491.67 L
78.8698 487.1278 82.3996 482.4693 85.6801 477.8101 C
89.2801 480.4201 L
f
72.8302 391.25 m
76.4331 386.6266 80.326 381.4723 83.7201 376.6701 C
88.4001 380.0001 L
84.9054 384.9636 81.218 389.9375 77.6002 394.58 C
72.8302 391.25 L
f
83.6301 395.57 m
87.2331 390.9465 91.1258 385.7924 94.52 380.9901 C
99.2 384.3201 L
95.7053 389.2836 92.0178 394.2574 88.4001 398.9 C
83.6301 395.57 L
f
82.2101 295.15 m
85.8763 290.4454 90.1323 284.7954 93.64 279.8501 C
99.4 283.9001 L
95.7988 289.0148 91.7441 294.4725 88.0601 299.2 C
82.2101 295.15 L
f
80.7901 194.73 m
84.5196 189.9441 89.1387 183.7984 92.76 178.7101 C
99.6 183.4801 L
95.8925 188.7459 91.4703 194.6874 87.7201 199.5 C
80.7901 194.73 L
f
79.3701 94.31 m
83.1629 89.443 88.1451 82.8014 91.88 77.5701 C
99.8 83.0601 L
95.986 88.4771 91.1965 94.9025 87.3801 99.8 C
79.3701 94.31 L
f
*u
1 D
85.7601 78.7401 m
81.9461 84.1571 77.1566 90.5825 73.3402 95.48 C
72 94.5614 L
72 94.6 L
58.6 94.6 L
58.6 74 L
34.2 74 L
34.2 61.2 L
58.6 61.2 L
58.6 47.8723 L
56.1459 48.3647 53.619 48.5999 51 48.5999 c
37.8657 48.5999 28.4 38.8901 28.4 27.8 c
28.4 16.1557 38.2543 7 51 7 c
62.3964 7 70.0272 13.5289 71.6619 24.298 C
73.7836 21.9392 75.8461 19.2423 77.8 16.2 C
88.6 23.4 L
83.1282 31.9198 77.6921 37.9706 72 42.005 C
72 61.2 L
91.2 61.2 L
91.2 74 L
78.9218 74 L
85.7601 78.7401 L
f
0 D
51 19.8 m
45.8692 19.8 42.2 23.2194 42.2 27.8 c
42.2 32.2783 45.6454 35.8 51 35.8 c
53.4392 35.8 55.9992 35.2252 58.6 34.1367 C
58.6 28.8 L
58.6 22.8843 55.7987 19.8 51 19.8 c
f
72 81.2286 m
73.8505 78.7494 75.672 76.2682 77.3007 74 C
72 74 L
72 81.2286 L
f
*U
499 484.7401 m
495.6117 489.5524 492.2916 494.0424 488.7401 498.6 C
485.0501 495.99 L
488.5898 491.4477 492.1194 486.7894 495.4 482.1301 C
499 484.7401 L
f
483.6301 395.57 m
487.2331 390.9465 491.1258 385.7924 494.52 380.9901 C
499.2 384.3201 L
495.7053 389.2836 492.0178 394.2574 488.4001 398.9 C
483.6301 395.57 L
f
482.2101 295.15 m
485.8763 290.4454 490.1323 284.7954 493.64 279.8501 C
499.4 283.9001 L
495.7988 289.0148 491.7441 294.4725 488.0601 299.2 C
482.2101 295.15 L
f
480.7901 194.73 m
484.5196 189.9441 489.1387 183.7984 492.76 178.7101 C
499.6 183.4801 L
495.8925 188.7459 491.4703 194.6874 487.7201 199.5 C
480.7901 194.73 L
f
487.3801 99.8 m
479.3701 94.31 L
483.1629 89.443 488.1451 82.8014 491.88 77.5701 C
499.8 83.0601 L
495.986 88.4771 491.1965 94.9025 487.3801 99.8 C
f
198.2 483.6 m
194.4352 488.947 190.7462 493.936 186.8 499 C
182.7 496.1 L
186.633 491.053 190.5549 485.877 194.2 480.7 C
198.2 483.6 L
f
185 478.8 m
181.2352 484.147 177.5462 489.136 173.6 494.2 C
169.5 491.3 L
173.433 486.253 177.355 481.0769 181 475.9 C
185 478.8 L
f
167.5 390.7 m
171.5033 385.5627 175.8287 379.8358 179.6 374.5 C
184.8 378.2 L
180.917 383.715 176.8198 389.2416 172.8 394.4 C
167.5 390.7 L
f
165.5 290.1 m
169.5736 284.8726 174.3025 278.5947 178.2 273.1 C
184.6 277.6 L
180.5987 283.283 176.0934 289.3472 172 294.6 C
165.5 290.1 L
f
163.5 189.5 m
167.6439 184.1823 172.7762 177.3536 176.8 171.7 C
184.4 177 L
180.2805 182.8509 175.3669 189.4527 171.2 194.8 C
163.5 189.5 L
f
198.6 383 m
194.717 388.5149 190.6197 394.0416 186.6 399.2 C
181.3 395.5 L
185.3033 390.3628 189.6287 384.6359 193.4 379.3 C
198.6 383 L
f
199 282.4 m
194.9987 288.0829 190.4933 294.1472 186.4 299.4 C
179.9 294.9 L
183.9736 289.6725 188.7024 283.3947 192.6 277.9 C
199 282.4 L
f
199.4 181.8 m
195.2805 187.6509 190.3669 194.2527 186.2 199.6 C
178.5 194.3 L
182.6439 188.9823 187.7762 182.1536 191.8 176.5 C
199.4 181.8 L
f
177.1 93.7 m
181.3142 88.2921 186.85 80.9125 191 75.1 C
199.8 81.2 L
195.5622 87.2189 190.2405 94.3583 186 99.8 C
177.1 93.7 L
f
175.4 70.3 m
184.2 76.4 L
179.9622 82.4189 174.6405 89.5583 170.4 95 C
161.5 88.9 L
165.7142 83.4921 171.25 76.1125 175.4 70.3 C
f
298.2 483.6 m
294.4352 488.947 290.7462 493.936 286.8 499 C
282.7 496.1 L
286.633 491.053 290.5549 485.877 294.2 480.7 C
298.2 483.6 L
f
285 478.8 m
281.2352 484.147 277.5462 489.136 273.6 494.2 C
269.5 491.3 L
273.433 486.253 277.355 481.0769 281 475.9 C
285 478.8 L
f
284.8 378.2 m
280.917 383.715 276.8198 389.2416 272.8 394.4 C
267.5 390.7 L
271.5033 385.5627 275.8287 379.8358 279.6 374.5 C
284.8 378.2 L
f
281.3 395.5 m
285.3033 390.3628 289.6287 384.6359 293.4 379.3 C
298.6 383 L
294.717 388.5149 290.6197 394.0416 286.6 399.2 C
281.3 395.5 L
f
279.9 294.9 m
283.9736 289.6725 288.7024 283.3947 292.6 277.9 C
299 282.4 L
294.9987 288.0829 290.4933 294.1472 286.4 299.4 C
279.9 294.9 L
f
286.2 199.6 m
278.5 194.3 L
282.6439 188.9823 287.7762 182.1536 291.8 176.5 C
299.4 181.8 L
295.2805 187.6509 290.3669 194.2527 286.2 199.6 C
f
277.1 93.7 m
281.3142 88.2921 286.85 80.9125 291 75.1 C
299.8 81.2 L
295.5622 87.2189 290.2405 94.3583 286 99.8 C
277.1 93.7 L
f
390.8 475.2 m
387.0352 480.547 383.3462 485.536 379.4 490.6 C
375.3 487.7 L
379.233 482.653 383.1549 477.477 386.8 472.3 C
390.8 475.2 L
f
375.2 470.4 m
371.4352 475.747 367.7462 480.736 363.8 485.8 C
359.7 482.9 L
363.633 477.853 367.555 472.6769 371.2 467.5 C
375.2 470.4 L
f
358.3 382.7 m
362.3033 377.5627 366.6287 371.8358 370.4 366.5 C
375.6 370.2 L
371.717 375.715 367.6197 381.2416 363.6 386.4 C
358.3 382.7 L
f
356.9 282.5 m
360.9736 277.2725 365.7025 270.9947 369.6 265.5 C
376 270 L
371.9987 275.6829 367.4933 281.7471 363.4 287 C
356.9 282.5 L
f
355.5 182.3 m
359.6439 176.9823 364.7762 170.1536 368.8 164.5 C
376.4 169.8 L
372.2805 175.6509 367.3669 182.2527 363.2 187.6 C
355.5 182.3 L
f
392.1 375 m
388.217 380.5149 384.1197 386.0416 380.1 391.2 C
374.8 387.5 L
378.8033 382.3628 383.1287 376.6359 386.9 371.3 C
392.1 375 L
f
393.4 274.8 m
389.3987 280.483 384.8934 286.5471 380.8 291.8 C
374.3 287.3 L
378.3736 282.0726 383.1025 275.7947 387 270.3 C
393.4 274.8 L
f
394.7 174.6 m
390.5804 180.4509 385.6669 187.0527 381.5 192.4 C
373.8 187.1 L
377.9439 181.7823 383.0762 174.9536 387.1 169.3 C
394.7 174.6 L
f
396 74.4 m
391.7622 80.4189 386.4405 87.5583 382.2 93 C
373.3 86.9 L
377.5142 81.4921 383.05 74.1125 387.2 68.3 C
396 74.4 L
f
354.1 82.1 m
358.3142 76.6921 363.85 69.3125 368 63.5 C
376.8 69.6 L
372.5622 75.6189 367.2405 82.7583 363 88.2 C
354.1 82.1 L
f
U
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
