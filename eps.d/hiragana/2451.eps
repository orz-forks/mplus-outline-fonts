%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(TM) 7.0
%%For: (coz) (underforest)
%%Title: (2451.eps)
%%CreationDate: (5/26/04) (3:49 PM)
%%BoundingBox: 0 0 500 700
%%HiResBoundingBox: 0 0 500 700
%%DocumentProcessColors: Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_ColorImage_AI6 1.1 0
%%+ procset Adobe_Illustrator_AI5 1.2 0
%%+ procset Adobe_cshow 2.0 8
%AI5_FileFormat 3
%AI3_ColorUsage: Black&White
%AI3_IncludePlacedImages
%AI7_ImageSettings: 1
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 8.5 0 0 0 0 0 0 0 0 -1 -1
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () 
%AI3_TemplateBox: 244.5 356.5 244.5 356.5
%AI3_TileBox: -41.5 -19.5 534.5 742.5
%AI3_DocumentPreview: Macintosh_ColorPic
%AI5_ArtSize: 592 840
%AI5_RulerUnits: 2
%AI5_ArtFlags: 1 0 0 1 0 0 1 1 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI5_OpenToView: -331.5 752.5 -1.5 794 556 25 0 0 3 40 0 0
%AI5_OpenViewLayers: 5
%%PageOrigin:-41.5 -19.5
%%AI3_PaperRect:-10 808 585 -34
%%AI3_Margin:10 -43 -9 34
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 25 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			0
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			1
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop 
			0 eq
			{
				pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				pop
				3
				{
					1 exch sub
					3 index mul 
					1 exch sub
					3 1 roll
				} repeat
				4 -1 roll pop
				setrgbcolor
			} ifelse
		}
		def
	} if
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	level2?
	{
		gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
		add add add 4 eq
	}
	{
		1 0 0 0 testCMYKColorThrough
		0 1 0 0 testCMYKColorThrough
		0 0 1 0 testCMYKColorThrough
		0 0 0 1 testCMYKColorThrough
		and and and
	} ifelse
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.1 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 24 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize
{ 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6
	{
		dup type /arraytype eq
		{
			dup xcheck
			{
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not
{
	/Adobe_ColorImage_AI6_Vars 15 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/channelcount 0 def
	/sourcecount 0 def
	/sourcearray 4 array def
	/plateindex -1 def
	/XIMask 0 def
	/XIBinary 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIBuffer null def
	/XIDataProc null def
	/XIVersion 6 def
end
/WalkRGBString null def
/WalkCMYKString null def
/StuffRGBIntoGrayString null def
/RGBToGrayImageProc null def
/StuffCMYKIntoGrayString null def
/CMYKToGrayImageProc null def
/ColorImageCompositeEmulator null def
/SeparateCMYKImageProc null def
/FourEqual null def
/TestPlateIndex null def
currentdict /_colorimage known not
{
	/colorimage where
	{
		/colorimage get /_colorimage exch def
	}
	{
		/_colorimage null def
	} ifelse
} if
/_currenttransfer systemdict /currenttransfer get def
/colorimage null def
/XI null def
/WalkRGBString
{
	0 3 index
	dup length 1 sub 0 3 3 -1 roll
	{
		3 getinterval { } forall
		5 index exec
		3 index
	} for
	
	 5 { pop } repeat
} def
/WalkCMYKString
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll
	{
		4 getinterval { } forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/StuffRGBIntoGrayString
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/RGBToGrayImageProc
{	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		dup length 3 idiv string
		dup 3 1 roll 
		
		/StuffRGBIntoGrayString load exch
		WalkRGBString
 end
} def
/StuffCMYKIntoGrayString
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/CMYKToGrayImageProc
{	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		dup length 4 idiv string
		dup 3 1 roll 
		
		/StuffCMYKIntoGrayString load exch
		WalkCMYKString
 end
} def
/ColorImageCompositeEmulator
{
	pop true eq
	{
		Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat
	}
	{
		Adobe_ColorImage_AI6_Vars /channelcount get 1 ne
		{
			Adobe_ColorImage_AI6_Vars begin
				sourcearray 0 3 -1 roll put
			
				channelcount 3 eq 
				{ 
					/RGBToGrayImageProc 
				}
				{ 
					/CMYKToGrayImageProc
				} ifelse
				load
		 end
		} if
		image
	} ifelse
} def
/SeparateCMYKImageProc
{	
	Adobe_ColorImage_AI6_Vars begin
		sourcecount 0 ne
		{
			sourcearray plateindex get exec
		}
		{			
			sourcearray 0 get exec
			
			dup length 4 idiv string
			
			0 2 index
			
			plateindex 4 2 index length 1 sub
			{
				get 255 exch sub
				
				3 copy put pop 1 add
				
				2 index
			} for
			pop pop exch pop
		} ifelse
 end
} def
	
/FourEqual
{
	4 index ne
	{
		pop pop pop false
	}
	{
		4 index ne
		{
			pop pop false
		}
		{
			4 index ne
			{
				pop false
			}
			{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/TestPlateIndex
{
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where
		{
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 FourEqual 
			{ 
				/plateindex 0 def
			}
			{
				0 1 0 0 FourEqual
				{ 
					/plateindex 1 def
				}
				{
					0 0 1 0 FourEqual
					{
						/plateindex 2 def
					}
					{
						0 0 0 1 FourEqual
						{ 
							/plateindex 3 def
						}
						{
							0 0 0 0 FourEqual
							{
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/colorimage
{
	Adobe_ColorImage_AI6_Vars begin
		/channelcount 1 index def
		/sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def
		4 sourcecount add index dup 
		8 eq exch 1 eq or not
 end
	
	{
		/_colorimage load null ne
		{
			_colorimage
		}
		{
			Adobe_ColorImage_AI6_Vars /sourcecount get
			7 add { pop } repeat
		} ifelse
	}
	{
		dup 3 eq
		TestPlateIndex
		dup -1 eq exch 5 eq or or
		{
			/_colorimage load null eq
			{
				ColorImageCompositeEmulator
			}
			{
				dup 1 eq
				{
					pop pop image
				}
				{
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
					{
						gsave
						
						0 _currenttransfer exec
						1 _currenttransfer exec
						eq
						{ 0 _currenttransfer exec 0.5 lt }
						{ 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse
						
						{ { pop 0 } } { { pop 1 } } ifelse
						systemdict /settransfer get exec
					} if
					
					_colorimage
					
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
					{
						grestore
					} if
				} ifelse
			} ifelse
		}
		{
			dup 1 eq
			{
				pop pop
				image
			}
			{
				pop pop
				Adobe_ColorImage_AI6_Vars begin
					sourcecount -1 0
					{			
						exch sourcearray 3 1 roll put
					} for
					/SeparateCMYKImageProc load
			 end
				systemdict /image get exec
			} ifelse
		} ifelse
	} ifelse
} def
/XG
{
	pop pop
} def
/XF
{
	13 {pop} repeat
} def
/Xh
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIMask exch 0 ne def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		XIMask
		{
			/_lp /null ddef
			_fc
			/_lp /imagemask ddef
		}
		if
		/XIVersion 7 def
 end
} def
/XH
{
	Adobe_ColorImage_AI6_Vars begin
		/XIVersion 6 def
		grestore
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIMask exch 0 ne def
		/XIBinary exch 0 ne def
		pop
		pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq
		{
			XIImageWidth 8 div ceiling cvi
		}
		{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIBuffer exch string def
		XIBinary
		{
			/XIDataProc { currentfile XIBuffer readstring pop } def
			XIVersion 6 le
			{
				currentfile 128 string readline pop pop
			}
			if
		}
		{
			/XIDataProc { currentfile XIBuffer readhexstring pop } def
		} ifelse
		
		XIVersion 6 le
		{
			0 0 moveto
			XIImageMatrix concat
			XIImageWidth XIImageHeight scale
			XIMask
			{
				/_lp /null ddef
				_fc
				/_lp /imagemask ddef
			} if
		} if
		
		XIMask
		{
			XIImageWidth XIImageHeight
			false
			[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
			/XIDataProc load
			imagemask
		}
		{
			XIImageWidth XIImageHeight
			XIBitsPerPixel
			[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
			/XIDataProc load
			
			XIChannelCount 1 eq
			{
				gsave
				0 setgray
				image
				grestore
			}
			{
				false
				XIChannelCount
				colorimage
			} ifelse
		} ifelse
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 7.0 Full Prolog)
%%Version: 1.2 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 107 dict dup begin
put
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XA
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/_rgbtocmyk
{
3
	{
	1 exch sub 3 1 roll
	} repeat
3 copy 1 4 1 roll
3
	{
	3 index 2 copy gt
		{
		exch
		} if
	pop 4 1 roll
	} repeat
pop pop pop
4 1 roll
3
	{
	3 index sub
	3 1 roll
	} repeat
4 -1 roll
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq
	{
		findcmykcustomcolor
	}
	{
		/findrgbcustomcolor where not {
			4 1 roll _rgbtocmyk
			5 -1 roll
			findcmykcustomcolor
		}
		{
			pop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq
	{
		findcmykcustomcolor
	}
	{
		/findrgbcustomcolor where not {
			4 1 roll _rgbtocmyk
			5 -1 roll
			findcmykcustomcolor
		}
		{
			pop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%EndProlog
%%BeginSetup
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_BeginPalette
0 0 Pb
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 0 1 1 0 0 3 79 79 255 Lb
(glyphs) Ln
0 A
u
1 Ap
800 Ar
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
0 XR
100 600 m
100 700 L
0 700 L
0 600 L
100 600 L
n
500 600 m
500 700 L
400 700 L
400 600 L
500 600 L
n
200 600 m
200 700 L
100 700 L
100 600 L
200 600 L
n
300 600 m
300 700 L
200 700 L
200 600 L
300 600 L
n
400 600 m
400 700 L
300 700 L
300 600 L
400 600 L
n
100 500 m
100 600 L
0 600 L
0 500 L
100 500 L
n
500 500 m
500 600 L
400 600 L
400 500 L
500 500 L
n
200 500 m
200 600 L
100 600 L
100 500 L
200 500 L
n
300 500 m
300 600 L
200 600 L
200 500 L
300 500 L
n
400 500 m
400 600 L
300 600 L
300 500 L
400 500 L
n
100 400 m
100 500 L
0 500 L
0 400 L
100 400 L
n
500 400 m
500 500 L
400 500 L
400 400 L
500 400 L
n
200 400 m
200 500 L
100 500 L
100 400 L
200 400 L
n
300 400 m
300 500 L
200 500 L
200 400 L
300 400 L
n
400 400 m
400 500 L
300 500 L
300 400 L
400 400 L
n
100 300 m
100 400 L
0 400 L
0 300 L
100 300 L
n
500 300 m
500 400 L
400 400 L
400 300 L
500 300 L
n
200 300 m
200 400 L
100 400 L
100 300 L
200 300 L
n
300 300 m
300 400 L
200 400 L
200 300 L
300 300 L
n
400 300 m
400 400 L
300 400 L
300 300 L
400 300 L
n
100 200 m
100 300 L
0 300 L
0 200 L
100 200 L
n
500 200 m
500 300 L
400 300 L
400 200 L
500 200 L
n
200 200 m
200 300 L
100 300 L
100 200 L
200 200 L
n
300 200 m
300 300 L
200 300 L
200 200 L
300 200 L
n
400 200 m
400 300 L
300 300 L
300 200 L
400 200 L
n
100 100 m
100 200 L
0 200 L
0 100 L
100 100 L
n
500 100 m
500 200 L
400 200 L
400 100 L
500 100 L
n
200 100 m
200 200 L
100 200 L
100 100 L
200 100 L
n
300 100 m
300 200 L
200 200 L
200 100 L
300 100 L
n
400 100 m
400 200 L
300 200 L
300 100 L
400 100 L
n
100 0 m
100 100 L
0 100 L
0 0 L
100 0 L
n
500 0 m
500 100 L
400 100 L
400 0 L
500 0 L
n
200 0 m
200 100 L
100 100 L
100 0 L
200 0 L
n
300 0 m
300 100 L
200 100 L
200 0 L
300 0 L
n
400 0 m
400 100 L
300 100 L
300 0 L
400 0 L
n
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
0 Ap
0 O
0 g
1 D
18.7001 510.5803 m
15.3484 523.4429 13.8334 535.7748 13.8334 549.9969 c
13.8334 564.2191 15.3484 576.5509 18.7001 589.4136 C
13.3333 590.3303 L
9.8219 576.8522 8.3333 564.2212 8.3333 549.9969 c
8.3333 535.7727 9.8219 523.1416 13.3333 509.6636 C
18.7001 510.5803 L
f
23.3 310.35 m
20.032 322.9911 18.5 335.7341 18.5 350 c
18.5 364.2659 20.032 377.0088 23.3 389.65 C
13 391 L
9.5192 377.5314 8 364.7045 8 350 c
8 335.2955 9.5192 322.4685 13 309 C
23.3 310.35 L
f
25.1 210.2303 m
21.8739 222.7607 20.3334 235.7092 20.3334 249.9969 c
20.3334 264.2847 21.8739 277.2331 25.1 289.7636 C
12.3333 291.3303 L
8.8679 277.8665 7.3333 264.9416 7.3333 249.9969 c
7.3333 235.0522 8.8679 222.1273 12.3333 208.6636 C
25.1 210.2303 L
f
25.8999 110.1197 m
22.7157 122.5394 21.1666 135.6934 21.1666 150.003 c
21.1666 164.3127 22.7157 177.4666 25.8999 189.8864 C
10.6667 191.6697 L
7.2165 178.2107 5.6667 165.1879 5.6667 150.003 c
5.6667 134.8182 7.2165 121.7954 10.6667 108.3364 C
25.8999 110.1197 L
f
U
u
143.3334 581.0469 m
143.3334 586.4969 L
108.6667 586.4969 L
108.6667 581.3302 L
140.8333 581.3302 L
140.8333 585.1636 L
122.8203 575.1559 111.5 556.6906 111.5 539.3303 c
111.5 521.614 124.1505 509.6636 142.3334 509.6636 c
163.8298 509.6636 175.6667 520.76 175.6667 540.8302 c
175.6667 551.4047 172.8961 563.3169 165.6667 579.3302 C
160.75 577.9969 L
167.5897 563.027 170.1666 552.0924 170.1666 541.4969 c
170.1666 523.8677 160.776 514.8303 142.3334 514.8303 c
127.3244 514.8303 117.0001 524.7705 117.0001 539.3303 c
117.0001 555.1225 127.2929 571.889 143.3334 581.0469 C
f
143.6667 479.2938 m
143.6667 486.9939 L
108.3333 486.9939 L
108.3333 479.6605 L
140.6667 479.6605 L
140.6667 485.3272 L
122.2307 475.0846 111 456.7725 111 439.6606 c
111 421.4371 123.7522 409.3272 142.6667 409.3272 c
164.2164 409.3272 176.3334 420.3925 176.3334 439.6605 c
176.3334 449.9579 173.6169 461.5248 166.3334 477.6605 C
159.1999 476.1938 L
165.9049 461.6999 168.3332 451.5561 168.3332 440.9939 c
168.3332 424.9784 159.6454 416.6607 142.6667 416.6607 c
128.5461 416.6607 119.0001 425.8494 119.0001 439.6606 c
119.0001 454.3868 128.6751 470.4725 143.6667 479.2938 C
f
144 377.55 m
144 387.5 L
108 387.5 L
108 378 L
140.5 378 L
140.5 385.5 L
121.6411 375.0223 110.5 356.8634 110.5 340 c
110.5 321.2694 123.3539 309 143 309 c
164.6029 309 177 320.0343 177 338.5 c
177 348.5204 174.3376 359.742 167 376 C
157.65 374.4 L
164.2204 360.3821 166.5 351.0289 166.5 340.5 c
166.5 326.0981 158.515 318.5 143 318.5 c
129.7676 318.5 121 326.9373 121 340 c
121 353.6602 130.0572 369.0653 144 377.55 C
f
144.3334 275.7969 m
144.3334 287.9969 L
107.6667 287.9969 L
107.6667 276.3302 L
140.3333 276.3302 L
140.3333 285.6636 L
121.0514 274.951 110 256.9453 110 240.3303 c
110 221.0925 122.9555 208.6636 143.3334 208.6636 c
164.9895 208.6636 177.6667 219.6668 177.6667 237.3302 c
177.6667 247.0737 175.0585 257.9499 167.6667 274.3302 C
156.1 272.5969 L
162.5357 259.0551 164.6666 250.4925 164.6666 239.9969 c
164.6666 227.2088 157.3845 220.3303 143.3334 220.3303 c
130.9892 220.3303 123.0001 228.0162 123.0001 240.3303 c
123.0001 252.9245 131.4393 267.6488 144.3334 275.7969 C
f
144.6667 174.0531 m
144.6667 188.503 L
107.3334 188.503 L
107.3334 174.6697 L
140.1667 174.6697 L
140.1667 185.8364 L
120.4618 174.8888 109.5 157.0363 109.5 140.6697 c
109.5 120.9248 122.5572 108.3364 143.6667 108.3364 c
165.3761 108.3364 178.3333 119.3085 178.3333 136.1697 c
178.3333 145.6362 175.7792 156.1671 168.3333 172.6697 C
154.55 170.8031 L
160.8511 157.7373 162.8334 149.9654 162.8334 139.503 c
162.8334 128.3285 156.254 122.1696 143.6667 122.1696 c
132.2108 122.1696 125 129.1041 125 140.6697 c
125 152.198 132.8214 166.2416 144.6667 174.0531 C
f
U
u
160.75 577.9969 m
168.8407 567.267 179.5833 556.3302 189.5833 548.6636 C
192.6667 552.9969 L
183.25 560.2157 173.0807 570.3311 165.1667 580.8303 C
160.75 577.9969 L
f
159.1999 476.1938 m
167.7225 465.4598 178.8457 454.4785 189.0666 446.6271 C
193.3334 452.9939 L
183.8125 460.3064 173.6021 470.2487 165.3333 480.6605 C
159.1999 476.1938 L
f
157.65 374.4 m
166.6044 363.662 178.1082 352.6361 188.55 344.6 C
194 353 L
184.375 360.4062 174.1234 370.1755 165.5 380.5 C
157.65 374.4 L
f
156.1 272.5969 m
165.4863 261.8549 177.3707 250.7844 188.0333 242.5635 C
194.6667 252.9969 L
184.9375 260.4969 174.6448 270.0931 165.6667 280.3303 C
156.1 272.5969 L
f
154.55 170.8031 m
164.3682 160.0571 176.6332 148.942 187.5167 140.5364 C
195.3333 153.003 L
185.5 160.5968 175.1661 170.0199 165.8333 180.1697 C
154.55 170.8031 L
f
U
u
209.4167 521.0303 m
214.7639 530.818 219.7549 543.4321 222.7167 555.2136 C
217.5 556.3303 L
214.7029 545.204 209.7965 532.8411 204.5 523.1636 C
209.4167 521.0303 L
f
211.1334 420.4605 m
216.5994 430.6249 221.5634 443.3128 224.5334 455.1272 C
217 456.6606 L
214.2182 445.5955 209.2872 433.1318 204 423.3272 C
211.1334 420.4605 L
f
212.85 319.9 m
218.4349 330.441 223.3717 343.2026 226.35 355.05 C
216.5 357 L
213.7336 345.9962 208.7779 333.4315 203.5 323.5 C
212.85 319.9 L
f
214.5667 219.3303 m
220.2704 230.2479 225.1801 243.0833 228.1667 254.9636 C
216 257.3303 L
213.249 246.3877 208.2686 233.7221 203 223.6636 C
214.5667 219.3303 L
f
216.2833 118.7697 m
222.1058 130.064 226.9884 142.9731 229.9833 154.8864 C
215.5 157.6697 L
212.7644 146.7883 207.7593 134.0219 202.5 123.8364 C
216.2833 118.7697 L
f
U
u
293.8334 523.4969 m
290.5417 533.7261 284.2175 546.9663 277.8334 556.6636 C
273.1833 554.1636 L
279.1502 545.1073 285.468 531.9362 288.75 521.7803 C
293.8334 523.4969 L
f
294.6667 423.9939 m
291.3334 434.3273 285.0115 447.6194 278.6667 457.3273 C
271.8666 453.9272 L
277.6688 445.0612 284.0615 431.7241 287.3999 421.4605 C
294.6667 423.9939 L
f
295.5 324.5 m
292.125 334.9375 285.8055 348.2816 279.5 358 C
270.55 353.7 L
276.1875 345.0243 282.655 331.5211 286.05 321.15 C
295.5 324.5 L
f
296.3334 224.9969 m
292.9167 235.5386 286.5995 248.9347 280.3334 258.6636 C
269.2333 253.4636 L
274.7061 244.9783 281.2485 231.3089 284.7 220.8303 C
296.3334 224.9969 L
f
297.1667 125.503 m
293.7083 136.1489 287.3935 149.5969 281.1667 159.3363 C
267.9167 153.2364 L
273.2248 144.9414 279.8421 131.1059 283.35 120.5197 C
297.1667 125.503 L
f
U
u
395.5 523.4969 m
354.5154 561.0347 351.3363 567.6636 340 567.6636 c
330.5729 567.6636 327.9974 560.9569 304.5 532.4969 C
308.6667 528.8302 L
331.9206 557.0814 333.2487 561.8302 340 561.8302 c
348.7213 561.8302 350.2736 557.1518 391.75 519.1636 C
395.5 523.4969 L
f
396 423.9939 m
354.9438 461.5973 351.4932 468.3273 340 468.3273 c
330.4583 468.3273 327.5646 461.5352 304 432.9939 C
309.9334 427.4605 L
332.569 455.0489 333.924 459.6604 340 459.6604 c
347.9698 459.6604 349.5113 455.1603 390.5999 417.5271 C
396 423.9939 L
f
396.5 324.5 m
355.3722 362.1689 351.6501 369 340 369 c
330.3437 369 327.1318 362.1226 303.5 333.5 C
311.2 326.1 L
333.2173 353.0257 334.5992 357.5 340 357.5 c
347.2183 357.5 348.749 353.1781 389.45 315.9 C
396.5 324.5 L
f
397 224.9969 m
355.8007 262.7314 351.8069 269.6636 340 269.6636 c
330.2292 269.6636 326.6989 262.701 303 233.9969 C
312.4667 224.7302 L
333.8657 250.9932 335.2745 255.3302 340 255.3302 c
346.4668 255.3302 347.9866 251.1866 388.3 214.2636 C
397 224.9969 L
f
397.5 125.503 m
356.2291 163.3031 351.9638 170.3363 340 170.3363 c
330.1146 170.3363 326.2661 163.2884 302.5 134.503 C
313.7333 123.3697 L
334.5141 148.97 335.9497 153.1698 340 153.1698 c
345.7153 153.1698 347.2243 149.2044 387.15 112.6364 C
397.5 125.503 L
f
U
u
418.7001 510.5803 m
415.3484 523.4429 413.8334 535.7748 413.8334 549.9969 c
413.8334 564.2191 415.3484 576.5509 418.7001 589.4136 C
413.3333 590.3303 L
409.8219 576.8522 408.3333 564.2212 408.3333 549.9969 c
408.3333 535.7727 409.8219 523.1416 413.3333 509.6636 C
418.7001 510.5803 L
f
420.5001 410.4606 m
417.1903 423.2124 415.6668 435.7499 415.6668 449.9939 c
415.6668 464.2379 417.1903 476.7752 420.5001 489.5272 C
412.6666 490.6606 L
409.1705 477.1873 407.6666 464.4583 407.6666 449.9939 c
407.6666 435.5295 409.1705 422.8005 412.6666 409.3272 C
420.5001 410.4606 L
f
422.3 310.35 m
419.032 322.9911 417.5 335.7341 417.5 350 c
417.5 364.2659 419.032 377.0088 422.3 389.65 C
412 391 L
408.5192 377.5314 407 364.7045 407 350 c
407 335.2955 408.5192 322.4685 412 309 C
422.3 310.35 L
f
424.1 210.2303 m
420.8739 222.7607 419.3334 235.7092 419.3334 249.9969 c
419.3334 264.2847 420.8739 277.2331 424.1 289.7636 C
411.3333 291.3303 L
407.8679 277.8665 406.3333 264.9416 406.3333 249.9969 c
406.3333 235.0522 407.8679 222.1273 411.3333 208.6636 C
424.1 210.2303 L
f
426.8999 110.1197 m
423.7157 122.5394 422.1666 135.6934 422.1666 150.003 c
422.1666 164.3127 423.7157 177.4666 426.8999 189.8864 C
411.6667 191.6697 L
408.2165 178.2107 406.6667 165.1879 406.6667 150.003 c
406.6667 134.8182 408.2165 121.7954 411.6667 108.3364 C
426.8999 110.1197 L
f
U
266.8125 688 m
226 688 L
226 685 L
263 685 L
263 686.7 L
248.7963 683.6932 240 675.2272 240 667 c
240 649.4375 264 644.1875 264 628 c
264 619.782 256.165 613 245 613 c
239.8957 613 233.8125 614.625 230.3 616.7 C
229 614 L
232.9375 611.625 239.3 610 245 610 c
257.5789 610 267 617.8826 267 628 c
267 645.775 243 651.275 243 667 c
243 674.2659 252.7231 682.4417 267.5532 684.6888 C
266.8125 688 L
f
207.7 621.6 m
212.9283 631.0111 217.9465 643.5514 220.9 655.3 C
218 656 L
215.1875 644.8125 210.3058 632.5505 205 623 C
207.7 621.6 L
f
293 623 m
289.75 633.125 283.4235 646.3132 277 656 C
274.5 654.4 L
280.6316 645.1533 286.8746 632.1484 290.1 622.1 C
293 623 L
f
16.9 610.7 m
13.5065 623.6733 12 635.7997 12 650 c
12 664.2003 13.5065 676.3265 16.9 689.3 C
14 690 L
10.4733 676.5171 9 663.9841 9 650 c
9 636.0159 10.4733 623.4828 14 610 C
16.9 610.7 L
f
70 670 m
88 670 L
88 673 L
70 673 L
70 689 L
70 692 L
67 692 L
67 673 L
35 673 L
35 670 L
67 670 L
67 631 l
67 619.2258 61.151 613 51 613 c
41.6075 613 36 617.8598 36 626 c
36 634.1402 41.6075 639 51 639 c
63.064 639 76.9734 631.0192 84.5 619.3 C
87 621 L
79.0338 633.4037 64.3753 642 51 642 c
39.9922 642 33 635.9031 33 626 c
33 616.0971 39.9922 610 51 610 c
62.7543 610 70 617.5976 70 631 C
70 670 L
f
115 639 m
115 655.8582 125.9107 673.3055 143 682.8 C
143 686 L
109 686 L
109 683 L
141 683 L
141 685 L
123.41 675.2273 112 656.6088 112 639 c
112 621.7909 124.5489 610 142 610 c
163.4432 610 175 621.1274 175 642 c
175 652.8515 172.1753 665.109 165 681 C
162.3 679.8 L
169.2744 664.3541 172 652.6288 172 642 c
172 622.757 161.9065 613 142 613 c
126.1028 613 115 623.6916 115 639 c
f
162.3 679.8 m
169.9589 669.0741 180.3209 658.1819 190.1 650.7 C
192 653 L
182.6875 660.125 172.5593 670.4135 165 681 C
162.3 679.8 L
f
395 623 m
354.087 660.4722 351.1794 667 340 667 c
330.6875 667 328.4303 660.3786 305 632 C
307.4 630.2 L
331.2722 659.1139 332.5735 664 340 664 c
349.4729 664 351.036 659.1433 392.9 620.8 C
395 623 L
f
416.9 610.7 m
413.5065 623.6733 412 635.7997 412 650 c
412 664.2003 413.5065 676.3265 416.9 689.3 C
414 690 L
410.4733 676.5171 409 663.9841 409 650 c
409 636.0159 410.4733 623.4828 414 610 C
416.9 610.7 L
f
452 613 m
442.2185 613 437 617.875 437 625 c
437 632.2363 442.1629 637 452 637 c
463.787 637 476.6307 629.5528 484.5 617.3 c
487 619 L
478.6057 632.0702 464.8034 640 452 640 c
440.4589 640 434 633.903 434 625 c
434 616.0971 440.4589 610 452 610 c
463.2543 610 470 617.0976 470 631 C
470 660 L
487 660 L
487 663 L
470 663 L
470 684 L
476 684 L
476 687 L
435 687 L
435 684 L
467 684 L
467 663 L
435 663 L
435 660 L
467 660 L
467 631 l
467 618.7229 461.7865 613 452 613 c
f
93 683.5 m
93 678.8057 89.1943 675 84.5 675 c
79.8056 675 76 678.8057 76 683.5 c
76 688.1944 79.8056 692 84.5 692 c
89.1943 692 93 688.1944 93 683.5 C
96 683.5 L
96 689.8512 90.8512 695 84.5 695 c
78.1488 695 73 689.8512 73 683.5 c
73 677.1488 78.1488 672 84.5 672 c
90.8512 672 96 677.1488 96 683.5 C
93 683.5 L
f
192 683.5 m
192 678.8057 188.1943 675 183.5 675 c
178.8056 675 175 678.8057 175 683.5 c
175 688.1944 178.8056 692 183.5 692 c
188.1943 692 192 688.1944 192 683.5 C
195 683.5 L
195 689.8512 189.8512 695 183.5 695 c
177.1488 695 172 689.8512 172 683.5 c
172 677.1488 177.1488 672 183.5 672 c
189.8512 672 195 677.1488 195 683.5 C
192 683.5 L
f
285 683.5 m
285 678.8057 281.1943 675 276.5 675 c
271.8056 675 268 678.8057 268 683.5 c
268 688.1944 271.8056 692 276.5 692 c
281.1943 692 285 688.1944 285 683.5 C
288 683.5 L
288 689.8512 282.8512 695 276.5 695 c
270.1488 695 265 689.8512 265 683.5 c
265 677.1488 270.1488 672 276.5 672 c
282.8512 672 288 677.1488 288 683.5 C
285 683.5 L
f
385 671.5 m
385 666.8057 381.1943 663 376.5 663 c
371.8056 663 368 666.8057 368 671.5 c
368 676.1944 371.8056 680 376.5 680 c
381.1943 680 385 676.1944 385 671.5 C
388 671.5 L
388 677.8512 382.8512 683 376.5 683 c
370.1488 683 365 677.8512 365 671.5 c
365 665.1488 370.1488 660 376.5 660 c
382.8512 660 388 665.1488 388 671.5 C
385 671.5 L
f
493 683.5 m
493 678.8057 489.1943 675 484.5 675 c
479.8056 675 476 678.8057 476 683.5 c
476 688.1944 479.8056 692 484.5 692 c
489.1943 692 493 688.1944 493 683.5 C
496 683.5 L
496 689.8512 490.8512 695 484.5 695 c
478.1488 695 473 689.8512 473 683.5 c
473 677.1488 478.1488 672 484.5 672 c
490.8512 672 496 677.1488 496 683.5 C
493 683.5 L
f
27.7 90 m
10 92 L
6.5652 78.5458 5 65.425 5 50 c
5 34.575 6.5652 21.4542 10 8 C
27.7 10 L
24.5576 22.309 23 35.6685 23 50 c
23 64.3315 24.5576 77.691 27.7 90 C
f
u
70.3334 568.3302 m
87.6667 568.3302 L
87.6667 573.4969 L
70.3334 573.4969 L
70.3334 588.6636 L
70.3334 591.9969 L
64.5 591.9969 L
64.5 573.4969 L
33.6667 573.4969 L
33.6667 568.3302 L
64.8333 568.3302 L
64.8333 530.6636 L
64.8333 520.2165 59.5702 514.6636 50.3334 514.6636 c
41.6781 514.6636 36.6667 518.9839 36.6667 526.3303 c
36.6667 533.6489 41.6503 537.9969 50.3334 537.9969 c
62.221 537.9969 75.016 530.5522 82.9833 518.1469 C
87 521.3303 L
78.3696 534.7682 64.1468 543.1636 50.5 543.1636 c
38.632 543.1636 31.3333 536.7158 31.3333 526.3303 c
31.3333 515.8709 38.6875 509.4969 50.5 509.4969 c
62.6024 509.4969 70.3334 517.2804 70.3334 530.4969 C
70.3334 568.3302 L
f
75 365 m
91 365 L
91 373.5 L
73 373.5 L
73 388 L
73 392 L
63.5 392 L
63.5 374.5 L
35 374.5 L
35 365 L
64.5 365 L
64.5 330 L
64.5 322.2068 60.4088 318 53 318 c
45.8191 318 42 321.2413 42 327 c
42 332.6754 45.7357 336 53 336 c
64.5349 336 75.1014 329.6275 83.95 315.85 C
91 322 L
81.0413 337.5061 67.6899 345.5 53.5 345.5 c
39.9117 345.5 32 338.3504 32 327 c
32 315.4277 40.0782 308.5 53.5 308.5 c
66.2986 308.5 75 316.6552 75 329.5 C
75 365 L
f
76.3334 263.3302 m
91.6667 263.3302 L
91.6667 273.6636 L
73.6667 273.6636 L
73.6667 287.6636 L
73.6667 291.9969 L
62 291.9969 L
62 274.9969 L
34.6667 274.9969 L
34.6667 263.3302 L
63.3333 263.3302 L
63.3333 229.6636 L
63.3333 223.1974 59.8281 219.6636 53.3334 219.6636 c
46.8896 219.6636 43.6667 222.3654 43.6667 227.3303 c
43.6667 232.1841 46.7785 234.9969 53.3334 234.9969 c
64.6919 234.9969 74.1441 229.1605 83.4333 214.6969 C
92 222.3303 L
81.3771 238.8706 68.4615 246.6636 54 246.6636 c
39.5515 246.6636 31.3333 239.1631 31.3333 227.3303 c
31.3333 215.2015 39.7735 207.9969 54 207.9969 c
67.1468 207.9969 76.3334 216.338 76.3334 228.9969 C
76.3334 263.3302 L
f
76.6666 161.6697 m
91.3333 161.6697 L
91.3333 173.8364 L
73.3333 173.8364 L
73.3333 187.3364 L
73.3333 192.003 L
59.5001 192.003 L
59.5001 175.503 L
33.3334 175.503 L
33.3334 161.6697 L
61.1667 161.6697 L
61.1667 129.3364 L
61.1667 124.1972 58.2474 121.3363 52.6667 121.3363 c
46.9601 121.3363 44.3333 123.4987 44.3333 127.6697 c
44.3333 131.702 46.8211 134.0031 52.6667 134.0031 c
63.8488 134.0031 72.1868 128.7028 81.9167 113.5531 C
92 122.6697 L
80.7129 140.2441 68.2329 147.8363 53.5 147.8363 c
38.1914 147.8363 29.6667 139.985 29.6667 127.6697 c
29.6667 114.9845 38.4689 107.503 53.5 107.503 c
66.9949 107.503 76.6666 116.03 76.6666 128.503 C
76.6666 161.6697 L
f
U
93 23 m
81.0487 41.6086 69.0045 49 54 49 c
37.8312 49 29 40.7977 29 28 c
29 14.7583 38.1642 7 54 7 c
67.843 7 78 15.7128 78 28 C
78 60 L
92 60 L
92 74 L
74 74 L
74 87 L
74 92 L
58 92 L
58 76 L
33 76 L
33 60 L
60 60 L
60 29 L
60 25.1878 57.6667 23 53 23 c
48.0307 23 46 24.6228 46 28 c
46 31.2107 47.8639 33 53 33 c
64.0058 33 71.2295 28.2358 81.4 12.4 C
93 23 L
f
145 72.3 m
145 89 L
107 89 L
107 73 L
140 73 L
140 86 L
119.8722 74.8174 109 57.1181 109 41 c
109 20.7479 122.1589 8 144 8 c
165.7627 8 179 18.9411 179 35 c
179 44.1894 176.5 54.375 169 71 C
153 69 L
159.1664 56.4102 161 49.429 161 39 c
161 29.4392 155.1235 24 144 24 c
133.4324 24 127 30.183 127 41 c
127 51.4623 134.2036 64.8251 145 72.3 C
f
153 69 m
163.25 58.25 175.8956 47.0903 187 38.5 C
196 53 L
186.0625 60.6875 175.6875 69.9375 166 80 C
153 69 L
f
u
267.0104 588.6636 m
225.5 588.6636 L
225.5 583.4969 L
261.1666 583.4969 L
261 585.9136 L
247.3322 582.2225 239.1667 573.8624 239.1667 565.8302 c
239.1667 548.8824 261.8333 543.6115 261.8333 528.3303 c
261.8333 520.8282 254.9367 514.8303 245 514.8303 c
240.1117 514.8303 234.2922 516.3664 230.6167 518.4637 C
228.5 513.6636 L
232.5711 511.208 239.1987 509.4969 245 509.4969 c
258.1354 509.4969 267.6667 517.4872 267.6667 528.3303 c
267.6667 545.7053 245.0001 551.5178 245.0001 566.1636 c
245.0001 572.9909 254.2413 580.8299 268.2277 583.1042 C
267.0104 588.6636 L
f
267.2083 489.3273 m
225 489.3273 L
225 481.9938 L
259.3332 481.9938 L
258.9999 485.1272 L
245.8682 480.7519 238.3333 472.4976 238.3333 464.6605 c
238.3333 448.3272 259.6665 443.0355 259.6665 428.6606 c
259.6665 421.8743 253.7085 416.6607 245 416.6607 c
240.3278 416.6607 234.7718 418.1079 230.9333 420.2274 C
228 413.3272 L
232.2046 410.7911 239.0974 408.9939 245 408.9939 c
258.692 408.9939 268.3334 417.0918 268.3334 428.6606 c
268.3334 445.6356 247.0001 451.7606 247.0001 465.3272 c
247.0001 471.7158 255.7594 479.2182 268.9022 481.5197 C
267.2083 489.3273 L
f
267.4062 390 m
224.5 390 L
224.5 380.5 L
257.5 380.5 L
257 384.35 L
244.4042 379.2905 237.5 371.1421 237.5 363.5 c
237.5 347.7812 257.5 342.4687 257.5 329 c
257.5 322.9295 252.4803 318.5 245 318.5 c
240.5438 318.5 235.2514 319.8583 231.25 322 C
227.5 313 L
231.8383 310.3833 238.9961 308.5 245 308.5 c
259.2485 308.5 269 316.7055 269 329 c
269 345.575 249 352.0125 249 364.5 c
249 370.45 257.2774 377.6157 269.5766 379.9444 C
267.4062 390 L
f
267.6042 290.6636 m
224 290.6636 L
224 278.9969 L
255.6666 278.9969 L
255 283.5636 L
242.9402 277.8198 236.6667 269.7773 236.6667 262.3302 c
236.6667 247.2261 255.3333 241.8928 255.3333 229.3303 c
255.3333 223.9756 251.2521 220.3303 245 220.3303 c
240.7598 220.3303 235.731 221.5997 231.5667 223.7637 C
227 212.6636 L
231.4718 209.9663 238.8948 207.9969 245 207.9969 c
259.805 207.9969 269.6667 216.3101 269.6667 229.3303 c
269.6667 245.5053 251.0001 252.2553 251.0001 263.6636 c
251.0001 269.175 258.7956 276.0039 270.2511 278.3598 C
267.6042 290.6636 L
f
267.8021 191.3363 m
223.5 191.3363 L
223.5 177.5031 L
253.8334 177.5031 L
253.0001 182.7864 L
241.4762 176.3585 235.8334 168.4218 235.8334 161.1697 c
235.8334 146.6801 253.1667 141.326 253.1667 129.6697 c
253.1667 125.0308 250.0239 122.1696 245 122.1696 c
240.9758 122.1696 236.2106 123.3502 231.8833 125.5363 C
226.5 112.3364 L
231.1054 109.5586 238.7935 107.503 245 107.503 c
260.3615 107.503 270.3333 115.9239 270.3333 129.6697 c
270.3333 145.4447 253 152.5072 253 162.8364 c
253 167.9092 260.3136 174.4015 270.9255 176.7846 C
267.8021 191.3363 L
f
U
268 92 m
223 92 L
223 76 L
252 76 L
251 82 L
240.0122 74.8878 235 67.057 235 60 c
235 46.125 251 40.75 251 30 c
251 26.0769 248.7957 24 245 24 c
241.1919 24 236.6903 25.0916 232.2 27.3 C
226 12 L
230.739 9.1416 238.6922 7 245 7 c
260.9181 7 271 15.5285 271 30 c
271 45.375 255 52.75 255 62 c
255 66.6342 261.8318 72.7897 271.6 75.2 C
268 92 L
f
218 18.2 m
223.9414 29.8709 228.7968 42.8538 231.8 54.8 C
215 58 L
212.2798 47.1798 207.25 34.3125 202 24 C
218 18.2 L
f
298 26 m
294.5 36.75 288.1875 50.25 282 60 C
266.6 53 L
271.7434 44.8954 278.4355 30.8937 282 20.2 C
298 26 L
f
398 26 m
356.6575 63.8656 352.1207 71 340 71 c
330 71 325.8333 63.8667 302 35 C
315 22 L
335.1625 46.9375 336.625 51 340 51 c
344.9638 51 346.4619 47.2129 386 11 C
398 26 L
f
427.7 90 m
410 92 L
406.5652 78.5458 405 65.425 405 50 c
405 34.575 406.5652 21.4542 410 8 C
427.7 10 L
424.5576 22.309 423 35.6685 423 50 c
423 64.3315 424.5576 77.691 427.7 90 C
f
u
474.5 582.3302 m
474.5 587.4969 L
433.6667 587.4969 L
433.6667 582.3302 L
464.5 582.3302 L
464.5 563.8303 L
433.6667 563.8303 L
433.6667 558.6636 L
464.5 558.6636 L
464.5 530.6636 L
464.5 519.6863 459.8776 514.6636 451.1667 514.6636 c
442.115 514.6636 437.5001 518.9466 437.5001 525.3303 c
437.5001 531.8068 442.0409 535.9969 451.1667 535.9969 c
462.8235 535.9969 474.7304 528.9969 482.9833 516.1469 C
487 519.3303 L
478.0129 533.3236 464.5036 541.1636 451.3334 541.1636 c
438.9376 541.1636 432.1667 534.8269 432.1667 525.3303 c
432.1667 515.7875 438.9931 509.4969 451.3334 509.4969 c
462.9079 509.4969 470 516.7527 470 530.4969 C
470 558.6636 L
486.6667 558.6636 L
486.6667 563.8303 L
470 563.8303 L
470 582.3302 L
474.5 582.3302 L
f
475 480.6605 m
475 487.9939 L
434.3333 487.9939 L
434.3333 480.6605 L
463.9999 480.6605 L
463.9999 464.6606 L
434.3333 464.6606 L
434.3333 457.3271 L
463.9999 457.3271 L
463.9999 430.3272 L
463.9999 420.6497 459.9687 416.3273 452.3333 416.3273 c
444.0115 416.3273 440.0001 420.0183 440.0001 425.6606 c
440.0001 431.3772 443.9189 434.9938 452.3333 434.9938 c
463.8599 434.9938 474.8302 428.441 483.4666 414.9938 C
489.0001 419.6606 L
479.4201 434.577 466.2038 442.3273 452.6667 442.3273 c
439.4162 442.3273 432.3333 435.7508 432.3333 425.6606 c
432.3333 415.478 439.5274 408.9939 452.6667 408.9939 c
464.5616 408.9939 472.0001 416.4077 472.0001 429.9939 C
472.0001 457.3271 L
488.3334 457.3271 L
488.3334 464.6606 L
472.0001 464.6606 L
472.0001 480.6605 L
475 480.6605 L
f
474.5 379 m
474.5 388.5 L
434 388.5 L
434 379 L
462.5 379 L
462.5 365.5 L
434 365.5 L
434 356 L
462.5 356 L
462.5 330 L
462.5 321.6221 459.0598 318 452.5 318 c
444.908 318 441.5 321.0989 441.5 326 c
441.5 330.9568 444.7968 334 452.5 334 c
463.8964 334 473.9301 327.8943 482.95 313.85 C
490 320 L
479.8272 335.8394 466.9039 343.5 453 343.5 c
438.8949 343.5 431.5 336.6838 431.5 326 c
431.5 315.1776 439.0616 308.5 453 308.5 c
465.2152 308.5 473 316.0719 473 329.5 C
473 356 L
489 356 L
489 365.5 L
473 365.5 L
473 379 L
474.5 379 L
f
473 277.3302 m
473 288.9969 L
432.6667 288.9969 L
432.6667 277.3302 L
460 277.3302 L
460 265.3303 L
432.6667 265.3303 L
432.6667 253.6636 L
460 253.6636 L
460 229.6636 L
460 222.5855 457.1509 219.6636 451.6667 219.6636 c
444.8044 219.6636 442.0001 222.1706 442.0001 226.3303 c
442.0001 230.5273 444.6748 232.9969 451.6667 232.9969 c
462.9329 232.9969 472.0299 227.3384 481.4333 212.6969 C
490 220.3303 L
479.2344 237.0928 466.6042 244.6636 452.3334 244.6636 c
437.3736 244.6636 429.6667 237.6076 429.6667 226.3303 c
429.6667 214.868 437.5959 207.9969 452.3334 207.9969 c
464.8688 207.9969 473 215.727 473 228.9969 C
473 253.6636 L
488.6667 253.6636 L
488.6667 265.3303 L
473 265.3303 L
473 277.3302 L
473 277.3302 L
f
474.5 175.6697 m
474.5 189.503 L
434.3334 189.503 L
434.3334 175.6697 L
460.5001 175.6697 L
460.5001 167.1697 L
434.3334 167.1697 L
434.3334 153.3364 L
460.5001 153.3364 L
460.5001 129.3364 L
460.5001 123.5579 458.2421 121.3363 453.8333 121.3363 c
447.7009 121.3363 445.5 123.2513 445.5 126.6697 c
445.5 130.107 447.5528 132.0031 453.8333 132.0031 c
464.9693 132.0031 473.1297 126.7917 482.9167 111.5531 C
493 120.6697 L
481.6415 138.3552 469.3043 145.8363 454.6667 145.8363 c
438.8523 145.8363 430.8334 138.5406 430.8334 126.6697 c
430.8334 114.5677 439.1302 107.503 454.6667 107.503 c
467.5224 107.503 476 115.3913 476 128.503 C
476 153.3364 L
491.3333 153.3364 L
491.3333 167.1697 L
476 167.1697 L
476 175.6697 L
474.5 175.6697 L
f
U
473 74 m
473 90 L
433 90 L
433 74 L
458 74 L
458 68 L
433 68 L
433 52 L
458 52 L
458 29 L
458 24.5213 456.3332 23 453 23 c
447.5974 23 446 24.3229 446 27 c
446 29.6774 447.4308 31 453 31 c
464.0058 31 471.2295 26.2358 481.4 10.4 C
493 21 L
481.0487 39.6086 469.0045 47 454 47 c
437.331 47 429 39.4645 429 27 c
429 14.2581 437.6644 7 454 7 c
467.1761 7 476 15.0463 476 28 C
476 52 L
491 52 L
491 68 L
476 68 L
476 74 L
473 74 L
f
u
93 583.0803 m
93 578.6161 89.3808 574.9969 84.9167 574.9969 c
80.4524 574.9969 76.8333 578.6161 76.8333 583.0803 c
76.8333 587.5446 80.4524 591.1636 84.9167 591.1636 c
89.3808 591.1636 93 587.5446 93 583.0803 C
97.3334 583.0803 L
97.3334 589.9377 91.7741 595.4969 84.9167 595.4969 c
78.0592 595.4969 72.5 589.9377 72.5 583.0803 c
72.5 576.2228 78.0592 570.6636 84.9167 570.6636 c
91.7741 570.6636 97.3334 576.2228 97.3334 583.0803 C
93 583.0803 L
f
19.5001 410.4606 m
16.1903 423.2124 14.6668 435.7499 14.6668 449.9939 c
14.6668 464.2379 16.1903 476.7752 19.5001 489.5272 C
11.6666 490.6606 L
8.1705 477.1873 6.6666 464.4583 6.6666 449.9939 c
6.6666 435.5295 8.1705 422.8005 11.6666 409.3272 C
19.5001 410.4606 L
f
68.6667 466.6605 m
85.3334 466.6605 L
85.3334 473.9939 L
68.6667 473.9939 L
68.6667 488.3272 L
68.6667 491.9939 L
59.9999 491.9939 L
59.9999 473.9939 L
30.3333 473.9939 L
30.3333 466.6605 L
60.6666 466.6605 L
60.6666 430.3272 L
60.6666 421.2071 55.9895 416.3273 47.6667 416.3273 c
39.7486 416.3273 35.3334 420.1081 35.3334 426.6606 c
35.3334 433.1576 39.693 436.9938 47.6667 436.9938 c
59.3779 436.9938 71.0587 430.0853 79.4666 416.9938 C
85.0001 421.6606 L
75.7055 436.1327 61.9184 444.3273 48 444.3273 c
35.2718 444.3273 27.6666 437.5286 27.6666 426.6606 c
27.6666 415.6447 35.3828 408.9939 48 408.9939 c
60.4506 408.9939 68.6667 416.9632 68.6667 429.9939 C
68.6667 466.6605 L
f
91.9999 482.6605 m
91.9999 478.4264 88.5674 474.9939 84.3333 474.9939 c
80.0992 474.9939 76.6667 478.4264 76.6667 482.6605 c
76.6667 486.8947 80.0992 490.3272 84.3333 490.3272 c
88.5674 490.3272 91.9999 486.8947 91.9999 482.6605 C
97.6667 482.6605 L
97.6667 490.0243 91.697 495.9939 84.3333 495.9939 c
76.9696 495.9939 70.9999 490.0243 70.9999 482.6605 c
70.9999 475.2968 76.9696 469.3271 84.3333 469.3271 c
91.697 469.3271 97.6667 475.2968 97.6667 482.6605 C
91.9999 482.6605 L
f
90 382.25 m
90 378.246 86.754 375 82.75 375 c
78.746 375 75.5 378.246 75.5 382.25 c
75.5 386.254 78.746 389.5 82.75 389.5 c
86.754 389.5 90 386.254 90 382.25 C
97 382.25 L
97 390.1199 90.6199 396.5 82.75 396.5 c
74.88 396.5 68.5 390.1199 68.5 382.25 c
68.5 374.38 74.88 368 82.75 368 c
90.6199 368 97 374.38 97 382.25 C
90 382.25 L
f
89 280.8303 m
89 277.0564 85.9405 273.9969 82.1667 273.9969 c
78.3928 273.9969 75.3333 277.0564 75.3333 280.8303 c
75.3333 284.6042 78.3928 287.6636 82.1667 287.6636 c
85.9405 287.6636 89 284.6042 89 280.8303 C
97.3334 280.8303 L
97.3334 289.2065 90.5429 295.9969 82.1667 295.9969 c
73.7904 295.9969 67 289.2065 67 280.8303 c
67 272.4541 73.7904 265.6636 82.1667 265.6636 c
90.5429 265.6636 97.3334 272.4541 97.3334 280.8303 C
89 280.8303 L
f
88 181.4197 m
88 177.8759 85.1271 175.003 81.5834 175.003 c
78.0396 175.003 75.1667 177.8759 75.1667 181.4197 c
75.1667 184.9636 78.0396 187.8364 81.5834 187.8364 c
85.1271 187.8364 88 184.9636 88 181.4197 C
97.6667 181.4197 L
97.6667 190.3022 90.4658 197.503 81.5834 197.503 c
72.7009 197.503 65.5001 190.3022 65.5001 181.4197 c
65.5001 172.5373 72.7009 165.3364 81.5834 165.3364 c
90.4658 165.3364 97.6667 172.5373 97.6667 181.4197 C
88 181.4197 L
f
U
87 81 m
87 77.6863 84.3137 75 81 75 c
77.6864 75 75 77.6863 75 81 c
75 84.3137 77.6864 87 81 87 c
84.3137 87 87 84.3137 87 81 C
98 81 L
98 90.3887 90.3887 98 81 98 c
71.6113 98 64 90.3887 64 81 c
64 71.6113 71.6113 64 81 64 c
90.3887 64 98 71.6113 98 81 C
87 81 L
f
u
191.1667 583.7469 m
191.1667 579.2827 187.5475 575.6636 183.0833 575.6636 c
178.619 575.6636 175 579.2827 175 583.7469 c
175 588.2112 178.619 591.8302 183.0833 591.8302 c
187.5475 591.8302 191.1667 588.2112 191.1667 583.7469 C
195.5 583.7469 L
195.5 590.6044 189.9408 596.1636 183.0833 596.1636 c
176.2258 596.1636 170.6666 590.6044 170.6666 583.7469 c
170.6666 576.8895 176.2258 571.3302 183.0833 571.3302 c
189.9408 571.3302 195.5 576.8895 195.5 583.7469 C
191.1667 583.7469 L
f
189.3333 479.9938 m
189.3333 475.7598 185.9007 472.3272 181.6666 472.3272 c
177.4325 472.3272 174 475.7598 174 479.9938 c
174 484.228 177.4325 487.6605 181.6666 487.6605 c
185.9007 487.6605 189.3333 484.228 189.3333 479.9938 C
195 479.9938 L
195 487.3576 189.0304 493.3272 181.6666 493.3272 c
174.3029 493.3272 168.3332 487.3576 168.3332 479.9938 c
168.3332 472.6301 174.3029 466.6605 181.6666 466.6605 c
189.0304 466.6605 195 472.6301 195 479.9938 C
189.3333 479.9938 L
f
189.5 380.25 m
189.5 376.246 186.254 373 182.25 373 c
178.246 373 175 376.246 175 380.25 c
175 384.254 178.246 387.5 182.25 387.5 c
186.254 387.5 189.5 384.254 189.5 380.25 C
196.5 380.25 L
196.5 388.1199 190.1199 394.5 182.25 394.5 c
174.38 394.5 168 388.1199 168 380.25 c
168 372.38 174.38 366 182.25 366 c
190.1199 366 196.5 372.38 196.5 380.25 C
189.5 380.25 L
f
186.6667 280.4969 m
186.6667 276.723 183.6072 273.6636 179.8333 273.6636 c
176.0594 273.6636 173 276.723 173 280.4969 c
173 284.2709 176.0594 287.3302 179.8333 287.3302 c
183.6072 287.3302 186.6667 284.2709 186.6667 280.4969 C
195 280.4969 L
195 288.8731 188.2095 295.6636 179.8333 295.6636 c
171.4571 295.6636 164.6666 288.8731 164.6666 280.4969 c
164.6666 272.1207 171.4571 265.3302 179.8333 265.3302 c
188.2095 265.3302 195 272.1207 195 280.4969 C
186.6667 280.4969 L
f
187.8334 179.7531 m
187.8334 176.2093 184.9605 173.3364 181.4167 173.3364 c
177.8729 173.3364 175 176.2093 175 179.7531 c
175 183.2969 177.8729 186.1697 181.4167 186.1697 c
184.9605 186.1697 187.8334 183.2969 187.8334 179.7531 C
197.5 179.7531 L
197.5 188.6355 190.2991 195.8364 181.4167 195.8364 c
172.5342 195.8364 165.3334 188.6355 165.3334 179.7531 c
165.3334 170.8706 172.5342 163.6697 181.4167 163.6697 c
190.2991 163.6697 197.5 170.8706 197.5 179.7531 C
187.8334 179.7531 L
f
U
187 79 m
187 75.6863 184.3137 73 181 73 c
177.6864 73 175 75.6863 175 79 c
175 82.3137 177.6864 85 181 85 c
184.3137 85 187 82.3137 187 79 C
198 79 L
198 88.3887 190.3887 96 181 96 c
171.6113 96 164 88.3887 164 79 c
164 69.6113 171.6113 62 181 62 c
190.3887 62 198 69.6113 198 79 C
187 79 L
f
u
284.8333 583.0803 m
284.8333 578.6161 281.2142 574.9969 276.75 574.9969 c
272.2857 574.9969 268.6667 578.6161 268.6667 583.0803 c
268.6667 587.5446 272.2857 591.1636 276.75 591.1636 c
281.2142 591.1636 284.8333 587.5446 284.8333 583.0803 C
289.1667 583.0803 L
289.1667 589.9377 283.6075 595.4969 276.75 595.4969 c
269.8925 595.4969 264.3333 589.9377 264.3333 583.0803 c
264.3333 576.2228 269.8925 570.6636 276.75 570.6636 c
283.6075 570.6636 289.1667 576.2228 289.1667 583.0803 C
284.8333 583.0803 L
f
284.6667 482.6605 m
284.6667 478.4264 281.2341 474.9939 277 474.9939 c
272.7659 474.9939 269.3334 478.4264 269.3334 482.6605 c
269.3334 486.8947 272.7659 490.3272 277 490.3272 c
281.2341 490.3272 284.6667 486.8947 284.6667 482.6605 C
290.3334 482.6605 L
290.3334 490.0243 284.3637 495.9939 277 495.9939 c
269.6363 495.9939 263.6666 490.0243 263.6666 482.6605 c
263.6666 475.2968 269.6363 469.3271 277 469.3271 c
284.3637 469.3271 290.3334 475.2968 290.3334 482.6605 C
284.6667 482.6605 L
f
284.5 382.25 m
284.5 378.246 281.254 375 277.25 375 c
273.246 375 270 378.246 270 382.25 c
270 386.254 273.246 389.5 277.25 389.5 c
281.254 389.5 284.5 386.254 284.5 382.25 C
291.5 382.25 L
291.5 390.1199 285.1199 396.5 277.25 396.5 c
269.38 396.5 263 390.1199 263 382.25 c
263 374.38 269.38 368 277.25 368 c
285.1199 368 291.5 374.38 291.5 382.25 C
284.5 382.25 L
f
284.3333 281.8303 m
284.3333 278.0564 281.2739 274.9969 277.5 274.9969 c
273.7261 274.9969 270.6667 278.0564 270.6667 281.8303 c
270.6667 285.6042 273.7261 288.6636 277.5 288.6636 c
281.2739 288.6636 284.3333 285.6042 284.3333 281.8303 C
292.6667 281.8303 L
292.6667 290.2065 285.8762 296.9969 277.5 296.9969 c
269.1238 296.9969 262.3333 290.2065 262.3333 281.8303 c
262.3333 273.4541 269.1238 266.6636 277.5 266.6636 c
285.8762 266.6636 292.6667 273.4541 292.6667 281.8303 C
284.3333 281.8303 L
f
284.1667 181.4197 m
284.1667 177.8759 281.2938 175.003 277.75 175.003 c
274.2062 175.003 271.3333 177.8759 271.3333 181.4197 c
271.3333 184.9636 274.2062 187.8364 277.75 187.8364 c
281.2938 187.8364 284.1667 184.9636 284.1667 181.4197 C
293.8333 181.4197 L
293.8333 190.3022 286.6324 197.503 277.75 197.503 c
268.8675 197.503 261.6667 190.3022 261.6667 181.4197 c
261.6667 172.5373 268.8675 165.3364 277.75 165.3364 c
286.6324 165.3364 293.8333 172.5373 293.8333 181.4197 C
284.1667 181.4197 L
f
U
284 81 m
284 77.6863 281.3137 75 278 75 c
274.6864 75 272 77.6863 272 81 c
272 84.3137 274.6864 87 278 87 c
281.3137 87 284 84.3137 284 81 C
295 81 L
295 90.3887 287.3887 98 278 98 c
268.6113 98 261 90.3887 261 81 c
261 71.6113 268.6113 64 278 64 c
287.3887 64 295 71.6113 295 81 C
284 81 L
f
u
384.3333 572.4136 m
384.3333 567.9495 380.7142 564.3303 376.25 564.3303 c
371.7857 564.3303 368.1667 567.9495 368.1667 572.4136 c
368.1667 576.8779 371.7857 580.4969 376.25 580.4969 c
380.7142 580.4969 384.3333 576.8779 384.3333 572.4136 C
388.6667 572.4136 L
388.6667 579.2711 383.1074 584.8303 376.25 584.8303 c
369.3925 584.8303 363.8333 579.2711 363.8333 572.4136 c
363.8333 565.5562 369.3925 559.9969 376.25 559.9969 c
383.1074 559.9969 388.6667 565.5562 388.6667 572.4136 C
384.3333 572.4136 L
f
383.6666 473.3273 m
383.6666 469.0932 380.2341 465.6606 376 465.6606 c
371.7658 465.6606 368.3333 469.0932 368.3333 473.3273 c
368.3333 477.5614 371.7658 480.9939 376 480.9939 c
380.2341 480.9939 383.6666 477.5614 383.6666 473.3273 C
389.3334 473.3273 L
389.3334 480.691 383.3637 486.6607 376 486.6607 c
368.6362 486.6607 362.6666 480.691 362.6666 473.3273 c
362.6666 465.9636 368.6362 459.9939 376 459.9939 c
383.3637 459.9939 389.3334 465.9636 389.3334 473.3273 C
383.6666 473.3273 L
f
383 374.25 m
383 370.246 379.754 367 375.75 367 c
371.746 367 368.5 370.246 368.5 374.25 c
368.5 378.254 371.746 381.5 375.75 381.5 c
379.754 381.5 383 378.254 383 374.25 C
390 374.25 L
390 382.1199 383.6199 388.5 375.75 388.5 c
367.88 388.5 361.5 382.1199 361.5 374.25 c
361.5 366.38 367.88 360 375.75 360 c
383.6199 360 390 366.38 390 374.25 C
383 374.25 L
f
382.3333 275.1636 m
382.3333 271.3898 379.2739 268.3303 375.5 268.3303 c
371.7261 268.3303 368.6667 271.3898 368.6667 275.1636 c
368.6667 278.9376 371.7261 281.9969 375.5 281.9969 c
379.2739 281.9969 382.3333 278.9376 382.3333 275.1636 C
390.6667 275.1636 L
390.6667 283.5399 383.8762 290.3303 375.5 290.3303 c
367.1238 290.3303 360.3333 283.5399 360.3333 275.1636 c
360.3333 266.7874 367.1238 259.9969 375.5 259.9969 c
383.8762 259.9969 390.6667 266.7874 390.6667 275.1636 C
382.3333 275.1636 L
f
381.6667 176.0863 m
381.6667 172.5426 378.7938 169.6697 375.25 169.6697 c
371.7062 169.6697 368.8333 172.5426 368.8333 176.0863 c
368.8333 179.6302 371.7062 182.503 375.25 182.503 c
378.7938 182.503 381.6667 179.6302 381.6667 176.0863 C
391.3333 176.0863 L
391.3333 184.9688 384.1324 192.1696 375.25 192.1696 c
366.3676 192.1696 359.1667 184.9688 359.1667 176.0863 c
359.1667 167.2039 366.3676 160.003 375.25 160.003 c
384.1324 160.003 391.3333 167.2039 391.3333 176.0863 C
381.6667 176.0863 L
f
U
381 77 m
381 73.6863 378.3137 71 375 71 c
371.6864 71 369 73.6863 369 77 c
369 80.3137 371.6864 83 375 83 c
378.3137 83 381 80.3137 381 77 C
392 77 L
392 86.3887 384.3887 94 375 94 c
365.6113 94 358 86.3887 358 77 c
358 67.6113 365.6113 60 375 60 c
384.3887 60 392 67.6113 392 77 C
381 77 L
f
u
493 582.7469 m
493 578.2827 489.3808 574.6636 484.9167 574.6636 c
480.4524 574.6636 476.8333 578.2827 476.8333 582.7469 c
476.8333 587.2112 480.4524 590.8302 484.9167 590.8302 c
489.3808 590.8302 493 587.2112 493 582.7469 C
497.3334 582.7469 L
497.3334 589.6044 491.7741 595.1636 484.9167 595.1636 c
478.0592 595.1636 472.5 589.6044 472.5 582.7469 c
472.5 575.8895 478.0592 570.3302 484.9167 570.3302 c
491.7741 570.3302 497.3334 575.8895 497.3334 582.7469 C
493 582.7469 L
f
490.9999 481.9938 m
490.9999 477.7598 487.5674 474.3272 483.3333 474.3272 c
479.0992 474.3272 475.6667 477.7598 475.6667 481.9938 c
475.6667 486.228 479.0992 489.6605 483.3333 489.6605 c
487.5674 489.6605 490.9999 486.228 490.9999 481.9938 C
496.6667 481.9938 L
496.6667 489.3576 490.697 495.3272 483.3333 495.3272 c
475.9696 495.3272 469.9999 489.3576 469.9999 481.9938 c
469.9999 474.6301 475.9696 468.6605 483.3333 468.6605 c
490.697 468.6605 496.6667 474.6301 496.6667 481.9938 C
490.9999 481.9938 L
f
490 383.25 m
490 379.246 486.754 376 482.75 376 c
478.746 376 475.5 379.246 475.5 383.25 c
475.5 387.254 478.746 390.5 482.75 390.5 c
486.754 390.5 490 387.254 490 383.25 C
497 383.25 L
497 391.1199 490.6199 397.5 482.75 397.5 c
474.88 397.5 468.5 391.1199 468.5 383.25 c
468.5 375.38 474.88 369 482.75 369 c
490.6199 369 497 375.38 497 383.25 C
490 383.25 L
f
489 282.4969 m
489 278.723 485.9405 275.6636 482.1667 275.6636 c
478.3928 275.6636 475.3333 278.723 475.3333 282.4969 c
475.3333 286.2709 478.3928 289.3302 482.1667 289.3302 c
485.9405 289.3302 489 286.2709 489 282.4969 C
497.3334 282.4969 L
497.3334 290.8731 490.5429 297.6636 482.1667 297.6636 c
473.7904 297.6636 467 290.8731 467 282.4969 c
467 274.1207 473.7904 267.3302 482.1667 267.3302 c
490.5429 267.3302 497.3334 274.1207 497.3334 282.4969 C
489 282.4969 L
f
488 178.7531 m
488 175.2093 485.1271 172.3364 481.5834 172.3364 c
478.0396 172.3364 475.1667 175.2093 475.1667 178.7531 c
475.1667 182.2969 478.0396 185.1697 481.5834 185.1697 c
485.1271 185.1697 488 182.2969 488 178.7531 C
497.6667 178.7531 L
497.6667 187.6355 490.4658 194.8364 481.5834 194.8364 c
472.7009 194.8364 465.5001 187.6355 465.5001 178.7531 c
465.5001 169.8706 472.7009 162.6697 481.5834 162.6697 c
490.4658 162.6697 497.6667 169.8706 497.6667 178.7531 C
488 178.7531 L
f
U
487 79 m
487 75.6863 484.3137 73 481 73 c
477.6864 73 475 75.6863 475 79 c
475 82.3137 477.6864 85 481 85 c
484.3137 85 487 82.3137 487 79 C
498 79 L
498 88.3887 490.3887 96 481 96 c
471.6113 96 464 88.3887 464 79 c
464 69.6113 471.6113 62 481 62 c
490.3887 62 498 69.6113 498 79 C
487 79 L
f
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
