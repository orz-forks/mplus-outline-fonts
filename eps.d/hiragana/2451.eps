%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(TM) 7.0
%%For: (coz) (underforest)
%%Title: (2451.eps)
%%CreationDate: (4/22/04) (10:34 AM)
%%BoundingBox: 0 1 500 701
%%HiResBoundingBox: 0 1 500 701
%%DocumentProcessColors: Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_ColorImage_AI6 1.1 0
%%+ procset Adobe_Illustrator_AI5 1.2 0
%%+ procset Adobe_cshow 2.0 8
%AI5_FileFormat 3
%AI3_ColorUsage: Black&White
%AI3_IncludePlacedImages
%AI7_ImageSettings: 1
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 8.5 0 0 0 0 0 0 0 0 -1 -1
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () 
%AI3_TemplateBox: 244.5 356.5 244.5 356.5
%AI3_TileBox: -41.5 -19.5 534.5 742.5
%AI3_DocumentPreview: Macintosh_ColorPic
%AI5_ArtSize: 592 840
%AI5_RulerUnits: 2
%AI5_ArtFlags: 1 0 0 1 0 0 1 1 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI5_OpenToView: -331.5 752.5 -1.5 794 556 25 0 0 3 40 0 0
%AI5_OpenViewLayers: 5
%%PageOrigin:-41.5 -19.5
%%AI3_PaperRect:-10 808 585 -34
%%AI3_Margin:10 -43 -9 34
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 25 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			0
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			1
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop 
			0 eq
			{
				pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				pop
				3
				{
					1 exch sub
					3 index mul 
					1 exch sub
					3 1 roll
				} repeat
				4 -1 roll pop
				setrgbcolor
			} ifelse
		}
		def
	} if
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	level2?
	{
		gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
		add add add 4 eq
	}
	{
		1 0 0 0 testCMYKColorThrough
		0 1 0 0 testCMYKColorThrough
		0 0 1 0 testCMYKColorThrough
		0 0 0 1 testCMYKColorThrough
		and and and
	} ifelse
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.1 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 24 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize
{ 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6
	{
		dup type /arraytype eq
		{
			dup xcheck
			{
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not
{
	/Adobe_ColorImage_AI6_Vars 15 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/channelcount 0 def
	/sourcecount 0 def
	/sourcearray 4 array def
	/plateindex -1 def
	/XIMask 0 def
	/XIBinary 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIBuffer null def
	/XIDataProc null def
	/XIVersion 6 def
end
/WalkRGBString null def
/WalkCMYKString null def
/StuffRGBIntoGrayString null def
/RGBToGrayImageProc null def
/StuffCMYKIntoGrayString null def
/CMYKToGrayImageProc null def
/ColorImageCompositeEmulator null def
/SeparateCMYKImageProc null def
/FourEqual null def
/TestPlateIndex null def
currentdict /_colorimage known not
{
	/colorimage where
	{
		/colorimage get /_colorimage exch def
	}
	{
		/_colorimage null def
	} ifelse
} if
/_currenttransfer systemdict /currenttransfer get def
/colorimage null def
/XI null def
/WalkRGBString
{
	0 3 index
	dup length 1 sub 0 3 3 -1 roll
	{
		3 getinterval { } forall
		5 index exec
		3 index
	} for
	
	 5 { pop } repeat
} def
/WalkCMYKString
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll
	{
		4 getinterval { } forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/StuffRGBIntoGrayString
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/RGBToGrayImageProc
{	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		dup length 3 idiv string
		dup 3 1 roll 
		
		/StuffRGBIntoGrayString load exch
		WalkRGBString
 end
} def
/StuffCMYKIntoGrayString
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/CMYKToGrayImageProc
{	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		dup length 4 idiv string
		dup 3 1 roll 
		
		/StuffCMYKIntoGrayString load exch
		WalkCMYKString
 end
} def
/ColorImageCompositeEmulator
{
	pop true eq
	{
		Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat
	}
	{
		Adobe_ColorImage_AI6_Vars /channelcount get 1 ne
		{
			Adobe_ColorImage_AI6_Vars begin
				sourcearray 0 3 -1 roll put
			
				channelcount 3 eq 
				{ 
					/RGBToGrayImageProc 
				}
				{ 
					/CMYKToGrayImageProc
				} ifelse
				load
		 end
		} if
		image
	} ifelse
} def
/SeparateCMYKImageProc
{	
	Adobe_ColorImage_AI6_Vars begin
		sourcecount 0 ne
		{
			sourcearray plateindex get exec
		}
		{			
			sourcearray 0 get exec
			
			dup length 4 idiv string
			
			0 2 index
			
			plateindex 4 2 index length 1 sub
			{
				get 255 exch sub
				
				3 copy put pop 1 add
				
				2 index
			} for
			pop pop exch pop
		} ifelse
 end
} def
	
/FourEqual
{
	4 index ne
	{
		pop pop pop false
	}
	{
		4 index ne
		{
			pop pop false
		}
		{
			4 index ne
			{
				pop false
			}
			{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/TestPlateIndex
{
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where
		{
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 FourEqual 
			{ 
				/plateindex 0 def
			}
			{
				0 1 0 0 FourEqual
				{ 
					/plateindex 1 def
				}
				{
					0 0 1 0 FourEqual
					{
						/plateindex 2 def
					}
					{
						0 0 0 1 FourEqual
						{ 
							/plateindex 3 def
						}
						{
							0 0 0 0 FourEqual
							{
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/colorimage
{
	Adobe_ColorImage_AI6_Vars begin
		/channelcount 1 index def
		/sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def
		4 sourcecount add index dup 
		8 eq exch 1 eq or not
 end
	
	{
		/_colorimage load null ne
		{
			_colorimage
		}
		{
			Adobe_ColorImage_AI6_Vars /sourcecount get
			7 add { pop } repeat
		} ifelse
	}
	{
		dup 3 eq
		TestPlateIndex
		dup -1 eq exch 5 eq or or
		{
			/_colorimage load null eq
			{
				ColorImageCompositeEmulator
			}
			{
				dup 1 eq
				{
					pop pop image
				}
				{
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
					{
						gsave
						
						0 _currenttransfer exec
						1 _currenttransfer exec
						eq
						{ 0 _currenttransfer exec 0.5 lt }
						{ 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse
						
						{ { pop 0 } } { { pop 1 } } ifelse
						systemdict /settransfer get exec
					} if
					
					_colorimage
					
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
					{
						grestore
					} if
				} ifelse
			} ifelse
		}
		{
			dup 1 eq
			{
				pop pop
				image
			}
			{
				pop pop
				Adobe_ColorImage_AI6_Vars begin
					sourcecount -1 0
					{			
						exch sourcearray 3 1 roll put
					} for
					/SeparateCMYKImageProc load
			 end
				systemdict /image get exec
			} ifelse
		} ifelse
	} ifelse
} def
/XG
{
	pop pop
} def
/XF
{
	13 {pop} repeat
} def
/Xh
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIMask exch 0 ne def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		XIMask
		{
			/_lp /null ddef
			_fc
			/_lp /imagemask ddef
		}
		if
		/XIVersion 7 def
 end
} def
/XH
{
	Adobe_ColorImage_AI6_Vars begin
		/XIVersion 6 def
		grestore
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIMask exch 0 ne def
		/XIBinary exch 0 ne def
		pop
		pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq
		{
			XIImageWidth 8 div ceiling cvi
		}
		{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIBuffer exch string def
		XIBinary
		{
			/XIDataProc { currentfile XIBuffer readstring pop } def
			XIVersion 6 le
			{
				currentfile 128 string readline pop pop
			}
			if
		}
		{
			/XIDataProc { currentfile XIBuffer readhexstring pop } def
		} ifelse
		
		XIVersion 6 le
		{
			0 0 moveto
			XIImageMatrix concat
			XIImageWidth XIImageHeight scale
			XIMask
			{
				/_lp /null ddef
				_fc
				/_lp /imagemask ddef
			} if
		} if
		
		XIMask
		{
			XIImageWidth XIImageHeight
			false
			[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
			/XIDataProc load
			imagemask
		}
		{
			XIImageWidth XIImageHeight
			XIBitsPerPixel
			[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
			/XIDataProc load
			
			XIChannelCount 1 eq
			{
				gsave
				0 setgray
				image
				grestore
			}
			{
				false
				XIChannelCount
				colorimage
			} ifelse
		} ifelse
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 7.0 Full Prolog)
%%Version: 1.2 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 107 dict dup begin
put
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XA
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/_rgbtocmyk
{
3
	{
	1 exch sub 3 1 roll
	} repeat
3 copy 1 4 1 roll
3
	{
	3 index 2 copy gt
		{
		exch
		} if
	pop 4 1 roll
	} repeat
pop pop pop
4 1 roll
3
	{
	3 index sub
	3 1 roll
	} repeat
4 -1 roll
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq
	{
		findcmykcustomcolor
	}
	{
		/findrgbcustomcolor where not {
			4 1 roll _rgbtocmyk
			5 -1 roll
			findcmykcustomcolor
		}
		{
			pop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq
	{
		findcmykcustomcolor
	}
	{
		/findrgbcustomcolor where not {
			4 1 roll _rgbtocmyk
			5 -1 roll
			findcmykcustomcolor
		}
		{
			pop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%EndProlog
%%BeginSetup
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_BeginPalette
0 0 Pb
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 0 1 1 0 0 3 79 79 255 Lb
(glyphs) Ln
0 A
u
1 Ap
800 Ar
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
0 XR
100 601 m
100 701 L
0 701 L
0 601 L
100 601 L
n
500 601 m
500 701 L
400 701 L
400 601 L
500 601 L
n
200 601 m
200 701 L
100 701 L
100 601 L
200 601 L
n
300 601 m
300 701 L
200 701 L
200 601 L
300 601 L
n
400 601 m
400 701 L
300 701 L
300 601 L
400 601 L
n
100 501 m
100 601 L
0 601 L
0 501 L
100 501 L
n
500 501 m
500 601 L
400 601 L
400 501 L
500 501 L
n
200 501 m
200 601 L
100 601 L
100 501 L
200 501 L
n
300 501 m
300 601 L
200 601 L
200 501 L
300 501 L
n
400 501 m
400 601 L
300 601 L
300 501 L
400 501 L
n
100 401 m
100 501 L
0 501 L
0 401 L
100 401 L
n
500 401 m
500 501 L
400 501 L
400 401 L
500 401 L
n
200 401 m
200 501 L
100 501 L
100 401 L
200 401 L
n
300 401 m
300 501 L
200 501 L
200 401 L
300 401 L
n
400 401 m
400 501 L
300 501 L
300 401 L
400 401 L
n
100 301 m
100 401 L
0 401 L
0 301 L
100 301 L
n
500 301 m
500 401 L
400 401 L
400 301 L
500 301 L
n
200 301 m
200 401 L
100 401 L
100 301 L
200 301 L
n
300 301 m
300 401 L
200 401 L
200 301 L
300 301 L
n
400 301 m
400 401 L
300 401 L
300 301 L
400 301 L
n
100 201 m
100 301 L
0 301 L
0 201 L
100 201 L
n
500 201 m
500 301 L
400 301 L
400 201 L
500 201 L
n
200 201 m
200 301 L
100 301 L
100 201 L
200 201 L
n
300 201 m
300 301 L
200 301 L
200 201 L
300 201 L
n
400 201 m
400 301 L
300 301 L
300 201 L
400 201 L
n
100 101 m
100 201 L
0 201 L
0 101 L
100 101 L
n
500 101 m
500 201 L
400 201 L
400 101 L
500 101 L
n
200 101 m
200 201 L
100 201 L
100 101 L
200 101 L
n
300 101 m
300 201 L
200 201 L
200 101 L
300 101 L
n
400 101 m
400 201 L
300 201 L
300 101 L
400 101 L
n
100 1 m
100 101 L
0 101 L
0 1 L
100 1 L
n
500 1 m
500 101 L
400 101 L
400 1 L
500 1 L
n
200 1 m
200 101 L
100 101 L
100 1 L
200 1 L
n
300 1 m
300 101 L
200 101 L
200 1 L
300 1 L
n
400 1 m
400 101 L
300 101 L
300 1 L
400 1 L
n
U
*u
0 Ap
0 O
0 g
1 D
269 689 m
226 689 L
226 686 L
263 686 L
263 687.7 L
248.7963 684.6932 240 676.2272 240 668 c
240 650.4375 264 645.1875 264 629 c
264 620.782 256.165 614 245 614 c
239.8957 614 233.8125 615.625 230.3 617.7 C
229 615 L
232.9375 612.625 239.3 611 245 611 c
257.5789 611 267 618.8826 267 629 c
267 646.775 243 652.275 243 668 c
243 675.6583 253.8017 684.3274 270 686 C
269 689 L
f
207.7 622.6 m
212.9283 632.0111 217.9465 644.5514 220.9 656.3 C
218 657 L
215.1875 645.8125 210.3058 633.5505 205 624 C
207.7 622.6 L
f
293 624 m
289.75 634.125 283.4235 647.3132 277 657 C
274.5 655.4 L
280.6316 646.1533 286.8746 633.1484 290.1 623.1 C
293 624 L
f
287 684.5 m
287 679.8057 283.1943 676 278.5 676 c
273.8057 676 270 679.8057 270 684.5 c
270 689.1943 273.8057 693 278.5 693 c
283.1943 693 287 689.1943 287 684.5 C
290 684.5 L
290 690.8512 284.8512 696 278.5 696 c
272.1489 696 267 690.8512 267 684.5 c
267 678.1488 272.1489 673 278.5 673 c
284.8512 673 290 678.1488 290 684.5 C
287 684.5 L
f
*U
u
16.9 611.7 m
13.5065 624.6733 12 636.7997 12 651 c
12 665.2003 13.5065 677.3265 16.9 690.3 C
14 691 L
10.4733 677.5171 9 664.9841 9 651 c
9 637.0159 10.4733 624.4828 14 611 C
16.9 611.7 L
f
70 671 m
88 671 L
88 674 L
70 674 L
70 690 L
70 693 L
67 693 L
67 674 L
35 674 L
35 671 L
67 671 L
67 632 l
67 620.2258 61.151 614 51 614 c
41.6075 614 36 618.8598 36 627 c
36 635.1402 41.6075 640 51 640 c
63.064 640 76.9734 632.0192 84.5 620.3 C
87 622 L
79.0338 634.4037 64.3753 643 51 643 c
39.9922 643 33 636.9031 33 627 c
33 617.0971 39.9922 611 51 611 c
62.7543 611 70 618.5976 70 632 C
70 671 L
f
96 687.5 m
96 693.2989 91.2989 698 85.5 698 c
79.7011 698 75 693.2989 75 687.5 c
75 681.7011 79.7011 677 85.5 677 c
91.2989 677 96 681.7011 96 687.5 C
93 687.5 L
93 683.3579 89.6421 680 85.5 680 c
81.3579 680 78 683.3579 78 687.5 c
78 691.6421 81.3579 695 85.5 695 c
89.6421 695 93 691.6421 93 687.5 C
96 687.5 L
f
U
u
115 640 m
115 656.8582 125.9107 674.3055 143 683.8 C
143 687 L
109 687 L
109 684 L
141 684 L
141 686 L
123.41 676.2273 112 657.6088 112 640 c
112 622.7909 124.5489 611 142 611 c
163.4432 611 175 622.1274 175 643 c
175 653.8515 172.1753 666.109 165 682 C
162.3 680.8 L
169.2744 665.3541 172 653.6288 172 643 c
172 623.757 161.9065 614 142 614 c
126.1028 614 115 624.6916 115 640 c
f
162.3 680.8 m
169.9589 670.0741 180.3209 659.1819 190.1 651.7 C
192 654 L
182.6875 661.125 172.5593 671.4135 165 682 C
162.3 680.8 L
f
0 D
192 684.5 m
192 679.8057 188.1943 676 183.5 676 c
178.8057 676 175 679.8057 175 684.5 c
175 689.1943 178.8057 693 183.5 693 c
188.1943 693 192 689.1943 192 684.5 C
195 684.5 L
195 690.8512 189.8512 696 183.5 696 c
177.1489 696 172 690.8512 172 684.5 c
172 678.1488 177.1489 673 183.5 673 c
189.8512 673 195 678.1488 195 684.5 C
192 684.5 L
f
U
u
1 D
395 624 m
354.087 661.4722 351.1794 668 340 668 c
330.6875 668 328.4303 661.3786 305 633 C
307.4 631.2 L
331.2722 660.1139 332.5735 665 340 665 c
349.4729 665 351.036 660.1433 392.9 621.8 C
395 624 L
f
0 D
384 673.5 m
384 678.1943 380.1943 682 375.5 682 c
370.8057 682 367 678.1943 367 673.5 c
367 668.8057 370.8057 665 375.5 665 c
380.1943 665 384 668.8057 384 673.5 C
387 673.5 L
387 667.1488 381.8512 662 375.5 662 c
369.1489 662 364 667.1488 364 673.5 c
364 679.8512 369.1489 685 375.5 685 c
381.8512 685 387 679.8512 387 673.5 C
384 673.5 L
f
U
*u
u
1 D
416.9 611.7 m
413.5065 624.6733 412 636.7997 412 651 c
412 665.2003 413.5065 677.3265 416.9 690.3 C
414 691 L
410.4733 677.5171 409 664.9841 409 651 c
409 637.0159 410.4733 624.4828 414 611 C
416.9 611.7 L
f
U
452 614 m
442.2185 614 437 618.875 437 626 c
437 633.2363 442.1629 638 452 638 c
463.787 638 476.6307 630.5528 484.5 618.3 c
487 620 L
478.6057 633.0702 464.8034 641 452 641 c
440.4589 641 434 634.903 434 626 c
434 617.0971 440.4589 611 452 611 c
463.2543 611 470 618.0976 470 632 C
470 661 L
487 661 L
487 664 L
470 664 L
470 685 L
476 685 L
476 688 L
435 688 L
435 685 L
467 685 L
467 664 L
435 664 L
435 661 L
467 661 L
467 632 l
467 619.7229 461.7865 614 452 614 c
f
492 686.5 m
492 682.3579 488.6421 679 484.5 679 c
480.3579 679 477 682.3579 477 686.5 c
477 690.6421 480.3579 694 484.5 694 c
488.6421 694 492 690.6421 492 686.5 C
495 686.5 L
495 692.2989 490.2989 697 484.5 697 c
478.7011 697 474 692.2989 474 686.5 c
474 680.7011 478.7011 676 484.5 676 c
490.2989 676 495 680.7011 495 686.5 C
492 686.5 L
f
*U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
*u
27.7 91 m
10 93 L
6.5652 79.5458 5 66.425 5 51 c
5 35.575 6.5652 22.4542 10 9 C
27.7 11 L
24.5576 23.309 23 36.6685 23 51 c
23 65.3315 24.5576 78.691 27.7 91 C
f
93 24 m
81.0487 42.6086 69.0045 50 54 50 c
37.8312 50 29 41.7977 29 29 c
29 15.7583 38.1642 8 54 8 c
67.843 8 78 16.7128 78 29 C
78 61 L
92 61 L
92 77 L
76 77 L
76 88 L
76 93 L
58 93 L
58 77 L
33 77 L
33 61 L
60 61 L
60 30 L
60 26.1878 57.6667 24 53 24 c
48.0307 24 46 25.6228 46 29 c
46 32.2107 47.8639 34 53 34 c
64.0058 34 71.2295 29.2358 81.4 13.4 C
93 24 L
f
97 83 m
97 91.2841 90.2841 98 82 98 c
73.7158 98 67 91.2841 67 83 c
67 74.7158 73.7158 68 82 68 c
90.2841 68 97 74.7158 97 83 C
87 83 L
87 80.2386 84.7613 78 82 78 c
79.2386 78 77 80.2386 77 83 c
77 85.7614 79.2386 88 82 88 c
84.7613 88 87 85.7614 87 83 C
97 83 L
f
*U
*u
145 73.3 m
145 90 L
107 90 L
107 74 L
140 74 L
140 87 L
119.8722 75.8174 109 58.1181 109 42 c
109 21.7479 122.1589 9 144 9 c
165.7627 9 179 19.9411 179 36 c
179 45.1894 176.5 55.375 169 72 C
153 70 L
159.1664 57.4102 161 50.429 161 40 c
161 30.4392 155.1235 25 144 25 c
133.4324 25 127 31.183 127 42 c
127 52.4623 134.2036 65.8251 145 73.3 C
f
153 70 m
163.25 59.25 175.8956 48.0903 187 39.5 C
196 54 L
186.0625 61.6875 175.6875 70.9375 166 81 C
153 70 L
f
185 81 m
185 77.6863 182.3137 75 179 75 c
175.6863 75 173 77.6863 173 81 c
173 84.3137 175.6863 87 179 87 c
182.3137 87 185 84.3137 185 81 C
195 81 L
195 89.8364 187.8364 97 179 97 c
170.1636 97 163 89.8364 163 81 c
163 72.1636 170.1636 65 179 65 c
187.8364 65 195 72.1636 195 81 C
185 81 L
f
*U
*u
268 93 m
223 93 L
223 77 L
252 77 L
251 83 L
240.0122 75.8878 235 68.057 235 61 c
235 47.125 251 41.75 251 31 c
251 27.0769 248.7957 25 245 25 c
241.1919 25 236.6903 26.0916 232.2 28.3 C
226 13 L
230.739 10.1416 238.6922 8 245 8 c
260.9181 8 271 16.5285 271 31 c
271 46.375 255 53.75 255 63 c
255 67.6342 261.8318 73.7897 271.6 76.2 C
268 93 L
f
218 19.2 m
223.9414 30.8709 228.7968 43.8538 231.8 55.8 C
215 59 L
212.2798 48.1798 207.25 35.3125 202 25 C
218 19.2 L
f
298 27 m
294.5 37.75 288.1875 51.25 282 61 C
266.6 54 L
271.7434 45.8954 278.4355 31.8937 282 21.2 C
298 27 L
f
294 82 m
294 90.8364 286.8364 98 278 98 c
269.1636 98 262 90.8364 262 82 c
262 73.1636 269.1636 66 278 66 c
286.8364 66 294 73.1636 294 82 C
284 82 L
284 78.6863 281.3137 76 278 76 c
274.6863 76 272 78.6863 272 82 c
272 85.3137 274.6863 88 278 88 c
281.3137 88 284 85.3137 284 82 C
294 82 L
f
*U
u
398 27 m
356.6575 64.8656 352.1207 72 340 72 c
330 72 325.8333 64.8667 302 36 C
315 23 L
335.1625 47.9375 336.625 52 340 52 c
344.9638 52 346.4619 48.2129 386 12 C
398 27 L
f
0 D
381 76 m
381 72.6863 378.3137 70 375 70 c
371.6863 70 369 72.6863 369 76 c
369 79.3137 371.6863 82 375 82 c
378.3137 82 381 79.3137 381 76 C
391 76 L
391 84.8364 383.8364 92 375 92 c
366.1636 92 359 84.8364 359 76 c
359 67.1636 366.1636 60 375 60 c
383.8364 60 391 67.1636 391 76 C
381 76 L
f
U
u
1 D
18.7001 511.5803 m
15.3484 524.4429 13.8334 536.7748 13.8334 550.9969 c
13.8334 565.2191 15.3484 577.5509 18.7001 590.4136 C
13.3333 591.3303 L
9.8219 577.8522 8.3333 565.2212 8.3333 550.9969 c
8.3333 536.7727 9.8219 524.1416 13.3333 510.6636 C
18.7001 511.5803 L
f
20.5001 411.4606 m
17.1903 424.2124 15.6668 436.7499 15.6668 450.9939 c
15.6668 465.2379 17.1903 477.7752 20.5001 490.5272 C
12.6666 491.6606 L
9.1705 478.1873 7.6666 465.4583 7.6666 450.9939 c
7.6666 436.5295 9.1705 423.8005 12.6666 410.3272 C
20.5001 411.4606 L
f
22.3 311.35 m
19.032 323.9911 17.5 336.7341 17.5 351 c
17.5 365.2659 19.032 378.0088 22.3 390.65 C
12 392 L
8.5192 378.5314 7 365.7045 7 351 c
7 336.2955 8.5192 323.4685 12 310 C
22.3 311.35 L
f
24.1 211.2303 m
20.8739 223.7607 19.3334 236.7092 19.3334 250.9969 c
19.3334 265.2847 20.8739 278.2331 24.1 290.7636 C
11.3333 292.3303 L
7.8679 278.8665 6.3333 265.9416 6.3333 250.9969 c
6.3333 236.0522 7.8679 223.1273 11.3333 209.6636 C
24.1 211.2303 L
f
25.8999 111.1197 m
22.7157 123.5394 21.1666 136.6934 21.1666 151.003 c
21.1666 165.3127 22.7157 178.4666 25.8999 190.8864 C
10.6667 192.6697 L
7.2165 179.2107 5.6667 166.1879 5.6667 151.003 c
5.6667 135.8182 7.2165 122.7954 10.6667 109.3364 C
25.8999 111.1197 L
f
U
u
71.3334 568.3302 m
88.6667 568.3302 L
88.6667 573.4969 L
71 573.4969 L
71 589.6636 L
71 592.9969 L
65.5 592.9969 L
65.5 573.4969 L
34.6667 573.4969 L
34.6667 568.3302 L
65.8333 568.3302 L
65.8333 531.6636 L
65.8333 521.2165 60.5702 515.6636 51.3334 515.6636 c
42.6781 515.6636 37.6667 519.9839 37.6667 527.3303 c
37.6667 534.6489 42.6503 538.9969 51.3334 538.9969 c
63.221 538.9969 76.016 531.5522 83.9833 519.1469 C
88 522.3303 L
79.3696 535.7682 65.1468 544.1636 51.5 544.1636 c
39.632 544.1636 32.3333 537.7158 32.3333 527.3303 c
32.3333 516.8709 39.6875 510.4969 51.5 510.4969 c
63.6024 510.4969 71.3334 518.2804 71.3334 531.4969 C
71.3334 568.3302 L
f
71.6667 468.6605 m
89.3334 468.6605 L
89.3334 475.9939 L
71.0001 475.9939 L
71.0001 489.3272 L
71.0001 492.9939 L
62.9999 492.9939 L
62.9999 475.9939 L
34.3333 475.9939 L
34.3333 468.6605 L
63.6666 468.6605 L
63.6666 431.3272 L
63.6666 422.2071 58.9895 417.3273 50.6667 417.3273 c
42.7486 417.3273 38.3334 421.1081 38.3334 427.6606 c
38.3334 434.1576 42.693 437.9938 50.6667 437.9938 c
62.3779 437.9938 74.0587 431.0853 82.4666 417.9938 C
88.0001 422.6606 L
78.7055 437.1327 64.9184 445.3273 51 445.3273 c
38.2718 445.3273 30.6666 438.5286 30.6666 427.6606 c
30.6666 416.6447 38.3828 409.9939 51 409.9939 c
63.4506 409.9939 71.6667 417.9632 71.6667 430.9939 C
71.6667 468.6605 L
f
75 367 m
90 367 L
90 376.5 L
74 376.5 L
74 389 L
74 393 L
63.5 393 L
63.5 376.5 L
34 376.5 L
34 367 L
64.5 367 L
64.5 331 L
64.5 323.2068 60.4088 319 53 319 c
45.8191 319 42 322.2413 42 328 c
42 333.6754 45.7357 337 53 337 c
64.5349 337 75.1014 330.6275 83.95 316.85 C
91 323 L
81.0413 338.5061 67.6899 346.5 53.5 346.5 c
39.9117 346.5 32 339.3504 32 328 c
32 316.4277 40.0782 309.5 53.5 309.5 c
66.2986 309.5 75 317.6552 75 330.5 C
75 367 L
f
75.3334 264.3302 m
90.6667 264.3302 L
90.6667 275.9969 L
74 275.9969 L
74 288.6636 L
74 292.9969 L
61 292.9969 L
61 275.9969 L
33.6667 275.9969 L
33.6667 264.3302 L
62.3333 264.3302 L
62.3333 230.6636 L
62.3333 224.1974 58.8281 220.6636 52.3334 220.6636 c
45.8896 220.6636 42.6667 223.3654 42.6667 228.3303 c
42.6667 233.1841 45.7785 235.9969 52.3334 235.9969 c
63.6919 235.9969 73.1441 230.1605 82.4333 215.6969 C
91 223.3303 L
80.3771 239.8706 67.4615 247.6636 53 247.6636 c
38.5515 247.6636 30.3333 240.1631 30.3333 228.3303 c
30.3333 216.2015 38.7735 208.9969 53 208.9969 c
66.1468 208.9969 75.3334 217.338 75.3334 229.9969 C
75.3334 264.3302 L
f
76.6666 162.6697 m
91.3333 162.6697 L
91.3333 176.503 L
75 176.503 L
75 188.3364 L
75 193.003 L
59.5001 193.003 L
59.5001 176.503 L
33.3334 176.503 L
33.3334 162.6697 L
61.1667 162.6697 L
61.1667 130.3364 L
61.1667 125.1972 58.2474 122.3363 52.6667 122.3363 c
46.9601 122.3363 44.3333 124.4987 44.3333 128.6697 c
44.3333 132.702 46.8211 135.0031 52.6667 135.0031 c
63.8488 135.0031 72.1868 129.7028 81.9167 114.5531 C
92 123.6697 L
80.7129 141.2441 68.2329 148.8363 53.5 148.8363 c
38.1914 148.8363 29.6667 140.985 29.6667 128.6697 c
29.6667 115.9845 38.4689 108.503 53.5 108.503 c
66.9949 108.503 76.6666 117.03 76.6666 129.503 C
76.6666 162.6697 L
f
U
u
143.3334 582.0469 m
143.3334 587.4969 L
108.6667 587.4969 L
108.6667 582.3302 L
140.8333 582.3302 L
140.8333 586.1636 L
122.8203 576.1559 111.5 557.6906 111.5 540.3303 c
111.5 522.614 124.1505 510.6636 142.3334 510.6636 c
163.8298 510.6636 175.6667 521.76 175.6667 541.8302 c
175.6667 552.4047 172.8961 564.3169 165.6667 580.3302 C
160.75 578.9969 L
167.5897 564.027 170.1666 553.0924 170.1666 542.4969 c
170.1666 524.8677 160.776 515.8303 142.3334 515.8303 c
127.3244 515.8303 117.0001 525.7705 117.0001 540.3303 c
117.0001 556.1225 127.2929 572.889 143.3334 582.0469 C
f
143.6667 480.2938 m
143.6667 487.9939 L
108.3333 487.9939 L
108.3333 480.6605 L
140.6667 480.6605 L
140.6667 486.3272 L
122.2307 476.0846 111 457.7725 111 440.6606 c
111 422.4371 123.7522 410.3272 142.6667 410.3272 c
164.2164 410.3272 176.3334 421.3925 176.3334 440.6605 c
176.3334 450.9579 173.6169 462.5248 166.3334 478.6605 C
159.1999 477.1938 L
165.9049 462.6999 168.3332 452.5561 168.3332 441.9939 c
168.3332 425.9784 159.6454 417.6607 142.6667 417.6607 c
128.5461 417.6607 119.0001 426.8494 119.0001 440.6606 c
119.0001 455.3868 128.6751 471.4725 143.6667 480.2938 C
f
144 378.55 m
144 388.5 L
108 388.5 L
108 379 L
140.5 379 L
140.5 386.5 L
121.6411 376.0223 110.5 357.8634 110.5 341 c
110.5 322.2694 123.3539 310 143 310 c
164.6029 310 177 321.0343 177 339.5 c
177 349.5204 174.3376 360.742 167 377 C
157.65 375.4 L
164.2204 361.3821 166.5 352.0289 166.5 341.5 c
166.5 327.0981 158.515 319.5 143 319.5 c
129.7676 319.5 121 327.9373 121 341 c
121 354.6602 130.0572 370.0653 144 378.55 C
f
144.3334 276.7969 m
144.3334 288.9969 L
107.6667 288.9969 L
107.6667 277.3302 L
140.3333 277.3302 L
140.3333 286.6636 L
121.0514 275.951 110 257.9453 110 241.3303 c
110 222.0925 122.9555 209.6636 143.3334 209.6636 c
164.9895 209.6636 177.6667 220.6668 177.6667 238.3302 c
177.6667 248.0737 175.0585 258.9499 167.6667 275.3302 C
156.1 273.5969 L
162.5357 260.0551 164.6666 251.4925 164.6666 240.9969 c
164.6666 228.2088 157.3845 221.3303 143.3334 221.3303 c
130.9892 221.3303 123.0001 229.0162 123.0001 241.3303 c
123.0001 253.9245 131.4393 268.6488 144.3334 276.7969 C
f
144.6667 175.0531 m
144.6667 189.503 L
107.3334 189.503 L
107.3334 175.6697 L
140.1667 175.6697 L
140.1667 186.8364 L
120.4618 175.8888 109.5 158.0363 109.5 141.6697 c
109.5 121.9248 122.5572 109.3364 143.6667 109.3364 c
165.3761 109.3364 178.3333 120.3085 178.3333 137.1697 c
178.3333 146.6362 175.7792 157.1671 168.3333 173.6697 C
154.55 171.8031 L
160.8511 158.7373 162.8334 150.9654 162.8334 140.503 c
162.8334 129.3285 156.254 123.1696 143.6667 123.1696 c
132.2108 123.1696 125 130.1041 125 141.6697 c
125 153.198 132.8214 167.2416 144.6667 175.0531 C
f
U
u
160.75 578.9969 m
168.8407 568.267 179.5833 557.3302 189.5833 549.6636 C
192.6667 553.9969 L
183.25 561.2157 173.0807 571.3311 165.1667 581.8303 C
160.75 578.9969 L
f
159.1999 477.1938 m
167.7225 466.4598 178.8457 455.4785 189.0666 447.6271 C
193.3334 453.9939 L
183.8125 461.3064 173.6021 471.2487 165.3333 481.6605 C
159.1999 477.1938 L
f
157.65 375.4 m
166.6044 364.662 178.1082 353.6361 188.55 345.6 C
194 354 L
184.375 361.4062 174.1234 371.1755 165.5 381.5 C
157.65 375.4 L
f
156.1 273.5969 m
165.4863 262.8549 177.3707 251.7844 188.0333 243.5635 C
194.6667 253.9969 L
184.9375 261.4969 174.6448 271.0931 165.6667 281.3303 C
156.1 273.5969 L
f
154.55 171.8031 m
164.3682 161.0571 176.6332 149.942 187.5167 141.5364 C
195.3333 154.003 L
185.5 161.5968 175.1661 171.0199 165.8333 181.1697 C
154.55 171.8031 L
f
U
u
209.4167 522.0303 m
214.7639 531.818 219.7549 544.4321 222.7167 556.2136 C
217.5 557.3303 L
214.7029 546.204 209.7965 533.8411 204.5 524.1636 C
209.4167 522.0303 L
f
211.1334 421.4605 m
216.5994 431.6249 221.5634 444.3128 224.5334 456.1272 C
217 457.6606 L
214.2182 446.5955 209.2872 434.1318 204 424.3272 C
211.1334 421.4605 L
f
212.85 320.9 m
218.4349 331.441 223.3717 344.2026 226.35 356.05 C
216.5 358 L
213.7336 346.9962 208.7779 334.4315 203.5 324.5 C
212.85 320.9 L
f
214.5667 220.3303 m
220.2704 231.2479 225.1801 244.0833 228.1667 255.9636 C
216 258.3303 L
213.249 247.3877 208.2686 234.7221 203 224.6636 C
214.5667 220.3303 L
f
216.2833 119.7697 m
222.1058 131.064 226.9884 143.9731 229.9833 155.8864 C
215.5 158.6697 L
212.7644 147.7883 207.7593 135.0219 202.5 124.8364 C
216.2833 119.7697 L
f
U
u
268.8333 589.6636 m
225.5 589.6636 L
225.5 584.4969 L
261.1666 584.4969 L
261 586.9136 L
247.3322 583.2225 239.1667 574.8624 239.1667 566.8302 c
239.1667 549.8824 261.8333 544.6115 261.8333 529.3303 c
261.8333 521.8282 254.9367 515.8303 245 515.8303 c
240.1117 515.8303 234.2922 517.3664 230.6167 519.4637 C
228.5 514.6636 L
232.5711 512.208 239.1987 510.4969 245 510.4969 c
258.1354 510.4969 267.6667 518.4872 267.6667 529.3303 c
267.6667 546.7053 245.0001 552.5178 245.0001 567.1636 c
245.0001 574.3179 255.1401 582.568 270.2667 584.3636 C
268.8333 589.6636 L
f
268.6667 490.3273 m
225 490.3273 L
225 482.9938 L
259.3332 482.9938 L
258.9999 486.1272 L
245.8682 481.7519 238.3333 473.4976 238.3333 465.6605 c
238.3333 449.3272 259.6665 444.0355 259.6665 429.6606 c
259.6665 422.8743 253.7085 417.6607 245 417.6607 c
240.3278 417.6607 234.7718 419.1079 230.9333 421.2274 C
228 414.3272 L
232.2046 411.7911 239.0974 409.9939 245 409.9939 c
258.692 409.9939 268.3334 418.0918 268.3334 429.6606 c
268.3334 446.6356 247.0001 452.7606 247.0001 466.3272 c
247.0001 472.9774 256.4785 480.8086 270.5333 482.7271 C
268.6667 490.3273 L
f
268.5 391 m
224.5 391 L
224.5 381.5 L
257.5 381.5 L
257 385.35 L
244.4042 380.2905 237.5 372.1421 237.5 364.5 c
237.5 348.7812 257.5 343.4687 257.5 330 c
257.5 323.9295 252.4803 319.5 245 319.5 c
240.5438 319.5 235.2514 320.8583 231.25 323 C
227.5 314 L
231.8383 311.3833 238.9961 309.5 245 309.5 c
259.2485 309.5 269 317.7055 269 330 c
269 346.575 249 353.0125 249 365.5 c
249 371.6462 257.8167 379.0585 270.8 381.1 C
268.5 391 L
f
268.3333 291.6636 m
224 291.6636 L
224 279.9969 L
255.6666 279.9969 L
255 284.5636 L
242.9402 278.8198 236.6667 270.7773 236.6667 263.3302 c
236.6667 248.2261 255.3333 242.8928 255.3333 230.3303 c
255.3333 224.9756 251.2521 221.3303 245 221.3303 c
240.7598 221.3303 235.731 222.5997 231.5667 224.7637 C
227 213.6636 L
231.4718 210.9663 238.8948 208.9969 245 208.9969 c
259.805 208.9969 269.6667 217.3101 269.6667 230.3303 c
269.6667 246.5053 251.0001 253.2553 251.0001 264.6636 c
251.0001 270.3058 259.1551 277.2992 271.0667 279.4636 C
268.3333 291.6636 L
f
268.1667 192.3363 m
223.5 192.3363 L
223.5 178.5031 L
253.8334 178.5031 L
253.0001 183.7864 L
241.4762 177.3585 235.8334 169.4218 235.8334 162.1697 c
235.8334 147.6801 253.1667 142.326 253.1667 130.6697 c
253.1667 126.0308 250.0239 123.1696 245 123.1696 c
240.9758 123.1696 236.2106 124.3502 231.8833 126.5363 C
226.5 113.3364 L
231.1054 110.5586 238.7935 108.503 245 108.503 c
260.3615 108.503 270.3333 116.9239 270.3333 130.6697 c
270.3333 146.4447 253 153.5072 253 163.8364 c
253 168.9746 260.4934 175.5491 271.3333 177.8364 C
268.1667 192.3363 L
f
U
u
293.8334 524.4969 m
290.5417 534.7261 284.2175 547.9663 277.8334 557.6636 C
273.1833 555.1636 L
279.1502 546.1073 285.468 532.9362 288.75 522.7803 C
293.8334 524.4969 L
f
294.6667 424.9939 m
291.3334 435.3273 285.0115 448.6194 278.6667 458.3273 C
271.8666 454.9272 L
277.6688 446.0612 284.0615 432.7241 287.3999 422.4605 C
294.6667 424.9939 L
f
295.5 325.5 m
292.125 335.9375 285.8055 349.2816 279.5 359 C
270.55 354.7 L
276.1875 346.0243 282.655 332.5211 286.05 322.15 C
295.5 325.5 L
f
296.3334 225.9969 m
292.9167 236.5386 286.5995 249.9347 280.3334 259.6636 C
269.2333 254.4636 L
274.7061 245.9783 281.2485 232.3089 284.7 221.8303 C
296.3334 225.9969 L
f
297.1667 126.503 m
293.7083 137.1489 287.3935 150.5969 281.1667 160.3363 C
267.9167 154.2364 L
273.2248 145.9414 279.8421 132.1059 283.35 121.5197 C
297.1667 126.503 L
f
U
u
395.5 524.4969 m
354.5154 562.0347 351.3363 568.6636 340 568.6636 c
330.5729 568.6636 327.9974 561.9569 304.5 533.4969 C
308.6667 529.8302 L
331.9206 558.0814 333.2487 562.8302 340 562.8302 c
348.7213 562.8302 350.2736 558.1518 391.75 520.1636 C
395.5 524.4969 L
f
396 424.9939 m
354.9438 462.5973 351.4932 469.3273 340 469.3273 c
330.4583 469.3273 327.5646 462.5352 304 433.9939 C
309.9334 428.4605 L
332.569 456.0489 333.924 460.6604 340 460.6604 c
347.9698 460.6604 349.5113 456.1603 390.5999 418.5271 C
396 424.9939 L
f
396.5 325.5 m
355.3722 363.1689 351.6501 370 340 370 c
330.3437 370 327.1318 363.1226 303.5 334.5 C
311.2 327.1 L
333.2173 354.0257 334.5992 358.5 340 358.5 c
347.2183 358.5 348.749 354.1781 389.45 316.9 C
396.5 325.5 L
f
397 225.9969 m
355.8007 263.7314 351.8069 270.6636 340 270.6636 c
330.2292 270.6636 326.6989 263.701 303 234.9969 C
312.4667 225.7302 L
333.8657 251.9932 335.2745 256.3302 340 256.3302 c
346.4668 256.3302 347.9866 252.1866 388.3 215.2636 C
397 225.9969 L
f
397.5 126.503 m
356.2291 164.3031 351.9638 171.3363 340 171.3363 c
330.1146 171.3363 326.2661 164.2884 302.5 135.503 C
313.7333 124.3697 L
334.5141 149.97 335.9497 154.1698 340 154.1698 c
345.7153 154.1698 347.2243 150.2044 387.15 113.6364 C
397.5 126.503 L
f
U
u
418.7001 511.5803 m
415.3484 524.4429 413.8334 536.7748 413.8334 550.9969 c
413.8334 565.2191 415.3484 577.5509 418.7001 590.4136 C
413.3333 591.3303 L
409.8219 577.8522 408.3333 565.2212 408.3333 550.9969 c
408.3333 536.7727 409.8219 524.1416 413.3333 510.6636 C
418.7001 511.5803 L
f
420.5001 411.4606 m
417.1903 424.2124 415.6668 436.7499 415.6668 450.9939 c
415.6668 465.2379 417.1903 477.7752 420.5001 490.5272 C
412.6666 491.6606 L
409.1705 478.1873 407.6666 465.4583 407.6666 450.9939 c
407.6666 436.5295 409.1705 423.8005 412.6666 410.3272 C
420.5001 411.4606 L
f
422.3 311.35 m
419.032 323.9911 417.5 336.7341 417.5 351 c
417.5 365.2659 419.032 378.0088 422.3 390.65 C
412 392 L
408.5192 378.5314 407 365.7045 407 351 c
407 336.2955 408.5192 323.4685 412 310 C
422.3 311.35 L
f
424.1 211.2303 m
420.8739 223.7607 419.3334 236.7092 419.3334 250.9969 c
419.3334 265.2847 420.8739 278.2331 424.1 290.7636 C
411.3333 292.3303 L
407.8679 278.8665 406.3333 265.9416 406.3333 250.9969 c
406.3333 236.0522 407.8679 223.1273 411.3333 209.6636 C
424.1 211.2303 L
f
425.8999 111.1197 m
422.7157 123.5394 421.1666 136.6934 421.1666 151.003 c
421.1666 165.3127 422.7157 178.4666 425.8999 190.8864 C
410.6667 192.6697 L
407.2165 179.2107 405.6667 166.1879 405.6667 151.003 c
405.6667 135.8182 407.2165 122.7954 410.6667 109.3364 C
425.8999 111.1197 L
f
U
u
475.8333 583.3302 m
475.8333 588.4969 L
434.6667 588.4969 L
434.6667 583.3302 L
465.5 583.3302 L
465.5 564.6636 L
434.6667 564.6636 L
434.6667 559.4969 L
465.5 559.4969 L
465.5 531.6636 L
465.5 520.6863 460.8776 515.6636 452.1667 515.6636 c
443.115 515.6636 438.5001 519.9466 438.5001 526.3303 c
438.5001 532.8068 443.0409 536.9969 452.1667 536.9969 c
463.8235 536.9969 475.7304 529.9969 483.9833 517.1469 C
488 520.3303 L
479.0129 534.3236 465.5036 542.1636 452.3334 542.1636 c
439.9376 542.1636 433.1667 535.8269 433.1667 526.3303 c
433.1667 516.7875 439.9931 510.4969 452.3334 510.4969 c
463.9079 510.4969 471 517.7527 471 531.4969 C
471 559.4969 L
487.6667 559.4969 L
487.6667 564.6636 L
471 564.6636 L
471 583.3302 L
475.8333 583.3302 L
f
475.6667 481.6605 m
475.6667 488.9939 L
434.3333 488.9939 L
434.3333 481.6605 L
463.9999 481.6605 L
463.9999 465.3273 L
434.3333 465.3273 L
434.3333 457.9938 L
463.9999 457.9938 L
463.9999 431.3272 L
463.9999 421.6497 459.9687 417.3273 452.3333 417.3273 c
444.0115 417.3273 440.0001 421.0183 440.0001 426.6606 c
440.0001 432.3772 443.9189 435.9938 452.3333 435.9938 c
463.8599 435.9938 474.8302 429.441 483.4666 415.9938 C
489.0001 420.6606 L
479.4201 435.577 466.2038 443.3273 452.6667 443.3273 c
439.4162 443.3273 432.3333 436.7508 432.3333 426.6606 c
432.3333 416.478 439.5274 409.9939 452.6667 409.9939 c
464.5616 409.9939 472.0001 417.4077 472.0001 430.9939 C
472.0001 457.9938 L
488.3334 457.9938 L
488.3334 465.3273 L
472.0001 465.3273 L
472.0001 481.6605 L
475.6667 481.6605 L
f
475.5 380 m
475.5 389.5 L
434 389.5 L
434 380 L
462.5 380 L
462.5 366 L
434 366 L
434 356.5 L
462.5 356.5 L
462.5 331 L
462.5 322.6221 459.0598 319 452.5 319 c
444.908 319 441.5 322.0989 441.5 327 c
441.5 331.9568 444.7968 335 452.5 335 c
463.8964 335 473.9301 328.8943 482.95 314.85 C
490 321 L
479.8272 336.8394 466.9039 344.5 453 344.5 c
438.8949 344.5 431.5 337.6838 431.5 327 c
431.5 316.1776 439.0616 309.5 453 309.5 c
465.2152 309.5 473 317.0719 473 330.5 C
473 356.5 L
489 356.5 L
489 366 L
473 366 L
473 380 L
475.5 380 L
f
475.3333 278.3302 m
475.3333 289.9969 L
433.6667 289.9969 L
433.6667 278.3302 L
461 278.3302 L
461 266.6636 L
433.6667 266.6636 L
433.6667 254.9969 L
461 254.9969 L
461 230.6636 L
461 223.5855 458.1509 220.6636 452.6667 220.6636 c
445.8044 220.6636 443.0001 223.1706 443.0001 227.3303 c
443.0001 231.5273 445.6748 233.9969 452.6667 233.9969 c
463.9329 233.9969 473.0299 228.3384 482.4333 213.6969 C
491 221.3303 L
480.2344 238.0928 467.6042 245.6636 453.3334 245.6636 c
438.3736 245.6636 430.6667 238.6076 430.6667 227.3303 c
430.6667 215.868 438.5959 208.9969 453.3334 208.9969 c
465.8688 208.9969 474 216.727 474 229.9969 C
474 254.9969 L
489.6667 254.9969 L
489.6667 266.6636 L
474 266.6636 L
474 278.3302 L
475.3333 278.3302 L
f
475.1667 176.6697 m
475.1667 190.503 L
433.3334 190.503 L
433.3334 176.6697 L
459.5001 176.6697 L
459.5001 167.3363 L
433.3334 167.3363 L
433.3334 153.5031 L
459.5001 153.5031 L
459.5001 130.3364 L
459.5001 124.5579 457.2421 122.3363 452.8333 122.3363 c
446.7009 122.3363 444.5 124.2513 444.5 127.6697 c
444.5 131.107 446.5528 133.0031 452.8333 133.0031 c
463.9693 133.0031 472.1297 127.7917 481.9167 112.5531 C
492 121.6697 L
480.6415 139.3552 468.3043 146.8363 453.6667 146.8363 c
437.8523 146.8363 429.8334 139.5406 429.8334 127.6697 c
429.8334 115.5677 438.1302 108.503 453.6667 108.503 c
466.5224 108.503 475 116.3913 475 129.503 C
475 153.5031 L
490.3333 153.5031 L
490.3333 167.3363 L
475 167.3363 L
475 176.6697 L
475.1667 176.6697 L
f
U
u
96.1667 586.7469 m
96.1667 592.96 91.1298 597.9969 84.9167 597.9969 c
78.7035 597.9969 73.6666 592.96 73.6666 586.7469 c
73.6666 580.5338 78.7035 575.4969 84.9167 575.4969 c
91.1298 575.4969 96.1667 580.5338 96.1667 586.7469 C
92 586.7469 L
92 582.8349 88.8286 579.6636 84.9167 579.6636 c
81.0047 579.6636 77.8333 582.8349 77.8333 586.7469 c
77.8333 590.6589 81.0047 593.8302 84.9167 593.8302 c
88.8286 593.8302 92 590.6589 92 586.7469 C
96.1667 586.7469 L
f
97.3333 485.9938 m
97.3333 492.6212 91.9606 497.9939 85.3333 497.9939 c
78.7059 497.9939 73.3332 492.6212 73.3332 485.9938 c
73.3332 479.3665 78.7059 473.9938 85.3333 473.9938 c
91.9606 473.9938 97.3333 479.3665 97.3333 485.9938 C
91.9999 485.9938 L
91.9999 482.312 89.0151 479.3272 85.3333 479.3272 c
81.6514 479.3272 78.6667 482.312 78.6667 485.9938 c
78.6667 489.6757 81.6514 492.6605 85.3333 492.6605 c
89.0151 492.6605 91.9999 489.6757 91.9999 485.9938 C
97.3333 485.9938 L
f
95.5 384.25 m
95.5 391.2915 89.7915 397 82.75 397 c
75.7084 397 70 391.2915 70 384.25 c
70 377.2084 75.7084 371.5 82.75 371.5 c
89.7915 371.5 95.5 377.2084 95.5 384.25 C
89 384.25 L
89 380.7982 86.2017 378 82.75 378 c
79.2982 378 76.5 380.7982 76.5 384.25 c
76.5 387.7017 79.2982 390.5 82.75 390.5 c
86.2017 390.5 89 387.7017 89 384.25 C
95.5 384.25 L
f
95.6667 283.4969 m
95.6667 290.9526 89.6224 296.9969 82.1667 296.9969 c
74.7109 296.9969 68.6666 290.9526 68.6666 283.4969 c
68.6666 276.0411 74.7109 269.9969 82.1667 269.9969 c
89.6224 269.9969 95.6667 276.0411 95.6667 283.4969 C
88 283.4969 L
88 280.2753 85.3882 277.6636 82.1667 277.6636 c
78.945 277.6636 76.3333 280.2753 76.3333 283.4969 c
76.3333 286.7185 78.945 289.3302 82.1667 289.3302 c
85.3882 289.3302 88 286.7185 88 283.4969 C
95.6667 283.4969 L
f
95.8333 182.7531 m
95.8333 190.6229 89.4532 197.003 81.5834 197.003 c
73.7134 197.003 67.3334 190.6229 67.3334 182.7531 c
67.3334 174.8831 73.7134 168.5031 81.5834 168.5031 c
89.4532 168.5031 95.8333 174.8831 95.8333 182.7531 C
87 182.7531 L
87 179.7615 84.5748 177.3364 81.5834 177.3364 c
78.5918 177.3364 76.1667 179.7615 76.1667 182.7531 c
76.1667 185.7446 78.5918 188.1697 81.5834 188.1697 c
84.5748 188.1697 87 185.7446 87 182.7531 C
95.8333 182.7531 L
f
U
u
190.8333 584.9136 m
190.8333 580.4494 187.2142 576.8303 182.75 576.8303 c
178.2858 576.8303 174.6667 580.4494 174.6667 584.9136 c
174.6667 589.3778 178.2858 592.9969 182.75 592.9969 c
187.2142 592.9969 190.8333 589.3778 190.8333 584.9136 C
195 584.9136 L
195 591.679 189.5154 597.1636 182.75 597.1636 c
175.9846 597.1636 170.5 591.679 170.5 584.9136 c
170.5 578.1482 175.9846 572.6636 182.75 572.6636 c
189.5154 572.6636 195 578.1482 195 584.9136 C
190.8333 584.9136 L
f
190.6666 484.3272 m
190.6666 480.0931 187.234 476.6605 183 476.6605 c
178.7659 476.6605 175.3333 480.0931 175.3333 484.3272 c
175.3333 488.5613 178.7659 491.9938 183 491.9938 c
187.234 491.9938 190.6666 488.5613 190.6666 484.3272 C
196 484.3272 L
196 491.5068 190.1796 497.3272 183 497.3272 c
175.8204 497.3272 169.9999 491.5068 169.9999 484.3272 c
169.9999 477.1476 175.8204 471.3271 183 471.3271 c
190.1796 471.3271 196 477.1476 196 484.3272 C
190.6666 484.3272 L
f
188.5 381.75 m
188.5 377.746 185.254 374.5 181.25 374.5 c
177.246 374.5 174 377.746 174 381.75 c
174 385.754 177.246 389 181.25 389 c
185.254 389 188.5 385.754 188.5 381.75 C
195 381.75 L
195 389.3438 188.8438 395.5 181.25 395.5 c
173.6562 395.5 167.5 389.3438 167.5 381.75 c
167.5 374.1562 173.6562 368 181.25 368 c
188.8438 368 195 374.1562 195 381.75 C
188.5 381.75 L
f
186.3333 282.1636 m
186.3333 278.3897 183.2739 275.3303 179.5 275.3303 c
175.7261 275.3303 172.6667 278.3897 172.6667 282.1636 c
172.6667 285.9375 175.7261 288.9969 179.5 288.9969 c
183.2739 288.9969 186.3333 285.9375 186.3333 282.1636 C
194 282.1636 L
194 290.1716 187.508 296.6636 179.5 296.6636 c
171.492 296.6636 165 290.1716 165 282.1636 c
165 274.1556 171.492 267.6636 179.5 267.6636 c
187.508 267.6636 194 274.1556 194 282.1636 C
186.3333 282.1636 L
f
186.1667 180.5864 m
186.1667 177.0426 183.2938 174.1697 179.75 174.1697 c
176.2062 174.1697 173.3334 177.0426 173.3334 180.5864 c
173.3334 184.1302 176.2062 187.0031 179.75 187.0031 c
183.2938 187.0031 186.1667 184.1302 186.1667 180.5864 C
195 180.5864 L
195 189.0086 188.1722 195.8364 179.75 195.8364 c
171.3278 195.8364 164.5001 189.0086 164.5001 180.5864 c
164.5001 172.1642 171.3278 165.3364 179.75 165.3364 c
188.1722 165.3364 195 172.1642 195 180.5864 C
186.1667 180.5864 L
f
U
u
290.6667 584.0803 m
290.6667 590.8457 285.1821 596.3303 278.4167 596.3303 c
271.6513 596.3303 266.1667 590.8457 266.1667 584.0803 c
266.1667 577.3148 271.6513 571.8302 278.4167 571.8302 c
285.1821 571.8302 290.6667 577.3148 290.6667 584.0803 C
286.5 584.0803 L
286.5 579.6161 282.8808 575.9969 278.4167 575.9969 c
273.9525 575.9969 270.3334 579.6161 270.3334 584.0803 c
270.3334 588.5444 273.9525 592.1636 278.4167 592.1636 c
282.8808 592.1636 286.5 588.5444 286.5 584.0803 C
290.6667 584.0803 L
f
291.3334 483.6605 m
291.3334 490.8402 285.513 496.6606 278.3333 496.6606 c
271.1538 496.6606 265.3333 490.8402 265.3333 483.6605 c
265.3333 476.4809 271.1538 470.6605 278.3333 470.6605 c
285.513 470.6605 291.3334 476.4809 291.3334 483.6605 C
286 483.6605 L
286 479.4264 282.5674 475.9939 278.3333 475.9939 c
274.0992 475.9939 270.6667 479.4264 270.6667 483.6605 c
270.6667 487.8946 274.0992 491.3272 278.3333 491.3272 c
282.5674 491.3272 286 487.8946 286 483.6605 C
291.3334 483.6605 L
f
292 383.25 m
292 390.8438 285.8438 397 278.25 397 c
270.6562 397 264.5 390.8438 264.5 383.25 c
264.5 375.6562 270.6562 369.5 278.25 369.5 c
285.8438 369.5 292 375.6562 292 383.25 C
285.5 383.25 L
285.5 379.246 282.254 376 278.25 376 c
274.246 376 271 379.246 271 383.25 c
271 387.254 274.246 390.5 278.25 390.5 c
282.254 390.5 285.5 387.254 285.5 383.25 C
292 383.25 L
f
292.6667 282.8303 m
292.6667 290.8383 286.1747 297.3303 278.1667 297.3303 c
270.1587 297.3303 263.6667 290.8383 263.6667 282.8303 c
263.6667 274.8222 270.1587 268.3302 278.1667 268.3302 c
286.1747 268.3302 292.6667 274.8222 292.6667 282.8303 C
285 282.8303 L
285 279.0564 281.9405 275.9969 278.1667 275.9969 c
274.3928 275.9969 271.3334 279.0564 271.3334 282.8303 c
271.3334 286.6042 274.3928 289.6636 278.1667 289.6636 c
281.9405 289.6636 285 286.6042 285 282.8303 C
292.6667 282.8303 L
f
293.3333 182.4197 m
293.3333 190.8419 286.5055 197.6697 278.0833 197.6697 c
269.6612 197.6697 262.8334 190.8419 262.8334 182.4197 c
262.8334 173.9975 269.6612 167.1697 278.0833 167.1697 c
286.5055 167.1697 293.3333 173.9975 293.3333 182.4197 C
284.5 182.4197 L
284.5 178.8759 281.6271 176.003 278.0833 176.003 c
274.5395 176.003 271.6667 178.8759 271.6667 182.4197 c
271.6667 185.9635 274.5395 188.8364 278.0833 188.8364 c
281.6271 188.8364 284.5 185.9635 284.5 182.4197 C
293.3333 182.4197 L
f
U
u
383.5 573.9136 m
383.5 569.4494 379.8808 565.8303 375.4167 565.8303 c
370.9525 565.8303 367.3334 569.4494 367.3334 573.9136 c
367.3334 578.3778 370.9525 581.9969 375.4167 581.9969 c
379.8808 581.9969 383.5 578.3778 383.5 573.9136 C
387.6667 573.9136 L
387.6667 580.679 382.1821 586.1636 375.4167 586.1636 c
368.6513 586.1636 363.1667 580.679 363.1667 573.9136 c
363.1667 567.1482 368.6513 561.6636 375.4167 561.6636 c
382.1821 561.6636 387.6667 567.1482 387.6667 573.9136 C
383.5 573.9136 L
f
383 474.3273 m
383 470.0932 379.5674 466.6606 375.3333 466.6606 c
371.0992 466.6606 367.6667 470.0932 367.6667 474.3273 c
367.6667 478.5613 371.0992 481.9939 375.3333 481.9939 c
379.5674 481.9939 383 478.5613 383 474.3273 C
388.3334 474.3273 L
388.3334 481.5069 382.513 487.3273 375.3333 487.3273 c
368.1538 487.3273 362.3333 481.5069 362.3333 474.3273 c
362.3333 467.1476 368.1538 461.3272 375.3333 461.3272 c
382.513 461.3272 388.3334 467.1476 388.3334 474.3273 C
383 474.3273 L
f
382.5 374.75 m
382.5 370.746 379.254 367.5 375.25 367.5 c
371.246 367.5 368 370.746 368 374.75 c
368 378.754 371.246 382 375.25 382 c
379.254 382 382.5 378.754 382.5 374.75 C
389 374.75 L
389 382.3438 382.8438 388.5 375.25 388.5 c
367.6562 388.5 361.5 382.3438 361.5 374.75 c
361.5 367.1562 367.6562 361 375.25 361 c
382.8438 361 389 367.1562 389 374.75 C
382.5 374.75 L
f
382 275.1636 m
382 271.3897 378.9405 268.3303 375.1667 268.3303 c
371.3928 268.3303 368.3334 271.3897 368.3334 275.1636 c
368.3334 278.9375 371.3928 281.9969 375.1667 281.9969 c
378.9405 281.9969 382 278.9375 382 275.1636 C
389.6667 275.1636 L
389.6667 283.1716 383.1747 289.6636 375.1667 289.6636 c
367.1587 289.6636 360.6667 283.1716 360.6667 275.1636 c
360.6667 267.1556 367.1587 260.6636 375.1667 260.6636 c
383.1747 260.6636 389.6667 267.1556 389.6667 275.1636 C
382 275.1636 L
f
381.5 175.5864 m
381.5 172.0426 378.6271 169.1697 375.0833 169.1697 c
371.5395 169.1697 368.6667 172.0426 368.6667 175.5864 c
368.6667 179.1302 371.5395 182.003 375.0833 182.003 c
378.6271 182.003 381.5 179.1302 381.5 175.5864 C
390.3333 175.5864 L
390.3333 184.0086 383.5055 190.8363 375.0833 190.8363 c
366.6612 190.8363 359.8334 184.0086 359.8334 175.5864 c
359.8334 167.1642 366.6612 160.3364 375.0833 160.3364 c
383.5055 160.3364 390.3333 167.1642 390.3333 175.5864 C
381.5 175.5864 L
f
U
u
495.3334 586.2469 m
495.3334 592.46 490.2964 597.4969 484.0833 597.4969 c
477.8702 597.4969 472.8333 592.46 472.8333 586.2469 c
472.8333 580.0338 477.8702 574.9969 484.0833 574.9969 c
490.2964 574.9969 495.3334 580.0338 495.3334 586.2469 C
491.1667 586.2469 L
491.1667 582.335 487.9953 579.1636 484.0833 579.1636 c
480.1713 579.1636 477 582.335 477 586.2469 c
477 590.1589 480.1713 593.3302 484.0833 593.3302 c
487.9953 593.3302 491.1667 590.1589 491.1667 586.2469 C
495.3334 586.2469 L
f
496.6667 485.9939 m
496.6667 492.6212 491.2939 497.9939 484.6666 497.9939 c
478.0393 497.9939 472.6666 492.6212 472.6666 485.9939 c
472.6666 479.3665 478.0393 473.9938 484.6666 473.9938 c
491.2939 473.9938 496.6667 479.3665 496.6667 485.9939 C
491.3333 485.9939 L
491.3333 482.312 488.3484 479.3272 484.6666 479.3272 c
480.9848 479.3272 478 482.312 478 485.9939 c
478 489.6757 480.9848 492.6605 484.6666 492.6605 c
488.3484 492.6605 491.3333 489.6757 491.3333 485.9939 C
496.6667 485.9939 L
f
496 384.75 m
496 391.7915 490.2915 397.5 483.25 397.5 c
476.2084 397.5 470.5 391.7915 470.5 384.75 c
470.5 377.7084 476.2084 372 483.25 372 c
490.2915 372 496 377.7084 496 384.75 C
489.5 384.75 L
489.5 381.2982 486.7017 378.5 483.25 378.5 c
479.7982 378.5 477 381.2982 477 384.75 c
477 388.2017 479.7982 391 483.25 391 c
486.7017 391 489.5 388.2017 489.5 384.75 C
496 384.75 L
f
496.3334 284.4969 m
496.3334 291.9526 490.289 297.9969 482.8333 297.9969 c
475.3775 297.9969 469.3333 291.9526 469.3333 284.4969 c
469.3333 277.0411 475.3775 270.9969 482.8333 270.9969 c
490.289 270.9969 496.3334 277.0411 496.3334 284.4969 C
488.6667 284.4969 L
488.6667 281.2753 486.0549 278.6636 482.8333 278.6636 c
479.6117 278.6636 477 281.2753 477 284.4969 c
477 287.7186 479.6117 290.3302 482.8333 290.3302 c
486.0549 290.3302 488.6667 287.7186 488.6667 284.4969 C
496.3334 284.4969 L
f
496.6667 185.253 m
496.6667 193.1229 490.2865 199.503 482.4167 199.503 c
474.5467 199.503 468.1667 193.1229 468.1667 185.253 c
468.1667 177.3831 474.5467 171.0031 482.4167 171.0031 c
490.2865 171.0031 496.6667 177.3831 496.6667 185.253 C
487.8334 185.253 L
487.8334 182.2615 485.4081 179.8364 482.4167 179.8364 c
479.4251 179.8364 477 182.2615 477 185.253 c
477 188.2446 479.4251 190.6697 482.4167 190.6697 c
485.4081 190.6697 487.8334 188.2446 487.8334 185.253 C
496.6667 185.253 L
f
U
*u
u
427.7 91 m
410 93 L
406.5652 79.5458 405 66.425 405 51 c
405 35.575 406.5652 22.4542 410 9 C
427.7 11 L
424.5576 23.309 423 36.6685 423 51 c
423 65.3315 424.5576 78.691 427.7 91 C
f
U
475 75 m
475 91 L
433 91 L
433 75 L
458 75 L
458 68 L
433 68 L
433 52 L
458 52 L
458 30 L
458 25.5213 456.3332 24 453 24 c
447.5974 24 446 25.3229 446 28 c
446 30.6774 447.4308 32 453 32 c
464.0058 32 471.2295 27.2358 481.4 11.4 C
493 22 L
481.0487 40.6086 469.0045 48 454 48 c
437.331 48 429 40.4645 429 28 c
429 15.2581 437.6644 8 454 8 c
467.1761 8 476 16.0463 476 29 C
476 52 L
491 52 L
491 68 L
476 68 L
476 75 L
475 75 L
f
497 85 m
497 93.2841 490.2841 100 482 100 c
473.7158 100 467 93.2841 467 85 c
467 76.7158 473.7158 70 482 70 c
490.2841 70 497 76.7158 497 85 C
487 85 L
487 82.2386 484.7613 80 482 80 c
479.2386 80 477 82.2386 477 85 c
477 87.7614 479.2386 90 482 90 c
484.7613 90 487 87.7614 487 85 C
497 85 L
f
*U
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
