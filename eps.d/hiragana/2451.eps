%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(TM) 7.0
%%For: (coz) (underforest)
%%Title: (2451.eps)
%%CreationDate: (5/28/04) (5:30 PM)
%%BoundingBox: 0 0 500 700
%%HiResBoundingBox: 0 0 500 700
%%DocumentProcessColors: Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_ColorImage_AI6 1.1 0
%%+ procset Adobe_Illustrator_AI5 1.2 0
%%+ procset Adobe_cshow 2.0 8
%AI5_FileFormat 3
%AI3_ColorUsage: Black&White
%AI3_IncludePlacedImages
%AI7_ImageSettings: 1
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 8.5 0 0 0 0 0 0 0 0 -1 -1
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () 
%AI3_TemplateBox: 244.5 356.5 244.5 356.5
%AI3_TileBox: -41.5 -19.5 534.5 742.5
%AI3_DocumentPreview: Macintosh_ColorPic
%AI5_ArtSize: 592 840
%AI5_RulerUnits: 2
%AI5_ArtFlags: 1 0 0 1 0 0 1 1 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI5_OpenToView: -331.5 752.5 -1.5 794 556 25 0 0 3 40 0 0
%AI5_OpenViewLayers: 5
%%PageOrigin:-41.5 -19.5
%%AI3_PaperRect:-10 808 585 -34
%%AI3_Margin:10 -43 -9 34
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 25 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			0
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			1
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop 
			0 eq
			{
				pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				pop
				3
				{
					1 exch sub
					3 index mul 
					1 exch sub
					3 1 roll
				} repeat
				4 -1 roll pop
				setrgbcolor
			} ifelse
		}
		def
	} if
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	level2?
	{
		gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
		add add add 4 eq
	}
	{
		1 0 0 0 testCMYKColorThrough
		0 1 0 0 testCMYKColorThrough
		0 0 1 0 testCMYKColorThrough
		0 0 0 1 testCMYKColorThrough
		and and and
	} ifelse
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.1 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 24 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize
{ 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6
	{
		dup type /arraytype eq
		{
			dup xcheck
			{
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not
{
	/Adobe_ColorImage_AI6_Vars 15 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/channelcount 0 def
	/sourcecount 0 def
	/sourcearray 4 array def
	/plateindex -1 def
	/XIMask 0 def
	/XIBinary 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIBuffer null def
	/XIDataProc null def
	/XIVersion 6 def
end
/WalkRGBString null def
/WalkCMYKString null def
/StuffRGBIntoGrayString null def
/RGBToGrayImageProc null def
/StuffCMYKIntoGrayString null def
/CMYKToGrayImageProc null def
/ColorImageCompositeEmulator null def
/SeparateCMYKImageProc null def
/FourEqual null def
/TestPlateIndex null def
currentdict /_colorimage known not
{
	/colorimage where
	{
		/colorimage get /_colorimage exch def
	}
	{
		/_colorimage null def
	} ifelse
} if
/_currenttransfer systemdict /currenttransfer get def
/colorimage null def
/XI null def
/WalkRGBString
{
	0 3 index
	dup length 1 sub 0 3 3 -1 roll
	{
		3 getinterval { } forall
		5 index exec
		3 index
	} for
	
	 5 { pop } repeat
} def
/WalkCMYKString
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll
	{
		4 getinterval { } forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/StuffRGBIntoGrayString
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/RGBToGrayImageProc
{	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		dup length 3 idiv string
		dup 3 1 roll 
		
		/StuffRGBIntoGrayString load exch
		WalkRGBString
 end
} def
/StuffCMYKIntoGrayString
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/CMYKToGrayImageProc
{	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		dup length 4 idiv string
		dup 3 1 roll 
		
		/StuffCMYKIntoGrayString load exch
		WalkCMYKString
 end
} def
/ColorImageCompositeEmulator
{
	pop true eq
	{
		Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat
	}
	{
		Adobe_ColorImage_AI6_Vars /channelcount get 1 ne
		{
			Adobe_ColorImage_AI6_Vars begin
				sourcearray 0 3 -1 roll put
			
				channelcount 3 eq 
				{ 
					/RGBToGrayImageProc 
				}
				{ 
					/CMYKToGrayImageProc
				} ifelse
				load
		 end
		} if
		image
	} ifelse
} def
/SeparateCMYKImageProc
{	
	Adobe_ColorImage_AI6_Vars begin
		sourcecount 0 ne
		{
			sourcearray plateindex get exec
		}
		{			
			sourcearray 0 get exec
			
			dup length 4 idiv string
			
			0 2 index
			
			plateindex 4 2 index length 1 sub
			{
				get 255 exch sub
				
				3 copy put pop 1 add
				
				2 index
			} for
			pop pop exch pop
		} ifelse
 end
} def
	
/FourEqual
{
	4 index ne
	{
		pop pop pop false
	}
	{
		4 index ne
		{
			pop pop false
		}
		{
			4 index ne
			{
				pop false
			}
			{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/TestPlateIndex
{
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where
		{
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 FourEqual 
			{ 
				/plateindex 0 def
			}
			{
				0 1 0 0 FourEqual
				{ 
					/plateindex 1 def
				}
				{
					0 0 1 0 FourEqual
					{
						/plateindex 2 def
					}
					{
						0 0 0 1 FourEqual
						{ 
							/plateindex 3 def
						}
						{
							0 0 0 0 FourEqual
							{
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/colorimage
{
	Adobe_ColorImage_AI6_Vars begin
		/channelcount 1 index def
		/sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def
		4 sourcecount add index dup 
		8 eq exch 1 eq or not
 end
	
	{
		/_colorimage load null ne
		{
			_colorimage
		}
		{
			Adobe_ColorImage_AI6_Vars /sourcecount get
			7 add { pop } repeat
		} ifelse
	}
	{
		dup 3 eq
		TestPlateIndex
		dup -1 eq exch 5 eq or or
		{
			/_colorimage load null eq
			{
				ColorImageCompositeEmulator
			}
			{
				dup 1 eq
				{
					pop pop image
				}
				{
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
					{
						gsave
						
						0 _currenttransfer exec
						1 _currenttransfer exec
						eq
						{ 0 _currenttransfer exec 0.5 lt }
						{ 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse
						
						{ { pop 0 } } { { pop 1 } } ifelse
						systemdict /settransfer get exec
					} if
					
					_colorimage
					
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
					{
						grestore
					} if
				} ifelse
			} ifelse
		}
		{
			dup 1 eq
			{
				pop pop
				image
			}
			{
				pop pop
				Adobe_ColorImage_AI6_Vars begin
					sourcecount -1 0
					{			
						exch sourcearray 3 1 roll put
					} for
					/SeparateCMYKImageProc load
			 end
				systemdict /image get exec
			} ifelse
		} ifelse
	} ifelse
} def
/XG
{
	pop pop
} def
/XF
{
	13 {pop} repeat
} def
/Xh
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIMask exch 0 ne def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		XIMask
		{
			/_lp /null ddef
			_fc
			/_lp /imagemask ddef
		}
		if
		/XIVersion 7 def
 end
} def
/XH
{
	Adobe_ColorImage_AI6_Vars begin
		/XIVersion 6 def
		grestore
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIMask exch 0 ne def
		/XIBinary exch 0 ne def
		pop
		pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq
		{
			XIImageWidth 8 div ceiling cvi
		}
		{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIBuffer exch string def
		XIBinary
		{
			/XIDataProc { currentfile XIBuffer readstring pop } def
			XIVersion 6 le
			{
				currentfile 128 string readline pop pop
			}
			if
		}
		{
			/XIDataProc { currentfile XIBuffer readhexstring pop } def
		} ifelse
		
		XIVersion 6 le
		{
			0 0 moveto
			XIImageMatrix concat
			XIImageWidth XIImageHeight scale
			XIMask
			{
				/_lp /null ddef
				_fc
				/_lp /imagemask ddef
			} if
		} if
		
		XIMask
		{
			XIImageWidth XIImageHeight
			false
			[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
			/XIDataProc load
			imagemask
		}
		{
			XIImageWidth XIImageHeight
			XIBitsPerPixel
			[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
			/XIDataProc load
			
			XIChannelCount 1 eq
			{
				gsave
				0 setgray
				image
				grestore
			}
			{
				false
				XIChannelCount
				colorimage
			} ifelse
		} ifelse
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 7.0 Full Prolog)
%%Version: 1.2 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 107 dict dup begin
put
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XA
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/_rgbtocmyk
{
3
	{
	1 exch sub 3 1 roll
	} repeat
3 copy 1 4 1 roll
3
	{
	3 index 2 copy gt
		{
		exch
		} if
	pop 4 1 roll
	} repeat
pop pop pop
4 1 roll
3
	{
	3 index sub
	3 1 roll
	} repeat
4 -1 roll
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq
	{
		findcmykcustomcolor
	}
	{
		/findrgbcustomcolor where not {
			4 1 roll _rgbtocmyk
			5 -1 roll
			findcmykcustomcolor
		}
		{
			pop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq
	{
		findcmykcustomcolor
	}
	{
		/findrgbcustomcolor where not {
			4 1 roll _rgbtocmyk
			5 -1 roll
			findcmykcustomcolor
		}
		{
			pop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%EndProlog
%%BeginSetup
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_BeginPalette
0 0 Pb
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 0 1 1 0 0 3 79 79 255 Lb
(glyphs) Ln
0 A
u
1 Ap
800 Ar
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
0 XR
100 600 m
100 700 L
0 700 L
0 600 L
100 600 L
n
500 600 m
500 700 L
400 700 L
400 600 L
500 600 L
n
200 600 m
200 700 L
100 700 L
100 600 L
200 600 L
n
300 600 m
300 700 L
200 700 L
200 600 L
300 600 L
n
400 600 m
400 700 L
300 700 L
300 600 L
400 600 L
n
100 500 m
100 600 L
0 600 L
0 500 L
100 500 L
n
500 500 m
500 600 L
400 600 L
400 500 L
500 500 L
n
200 500 m
200 600 L
100 600 L
100 500 L
200 500 L
n
300 500 m
300 600 L
200 600 L
200 500 L
300 500 L
n
400 500 m
400 600 L
300 600 L
300 500 L
400 500 L
n
100 400 m
100 500 L
0 500 L
0 400 L
100 400 L
n
500 400 m
500 500 L
400 500 L
400 400 L
500 400 L
n
200 400 m
200 500 L
100 500 L
100 400 L
200 400 L
n
300 400 m
300 500 L
200 500 L
200 400 L
300 400 L
n
400 400 m
400 500 L
300 500 L
300 400 L
400 400 L
n
100 300 m
100 400 L
0 400 L
0 300 L
100 300 L
n
500 300 m
500 400 L
400 400 L
400 300 L
500 300 L
n
200 300 m
200 400 L
100 400 L
100 300 L
200 300 L
n
300 300 m
300 400 L
200 400 L
200 300 L
300 300 L
n
400 300 m
400 400 L
300 400 L
300 300 L
400 300 L
n
100 200 m
100 300 L
0 300 L
0 200 L
100 200 L
n
500 200 m
500 300 L
400 300 L
400 200 L
500 200 L
n
200 200 m
200 300 L
100 300 L
100 200 L
200 200 L
n
300 200 m
300 300 L
200 300 L
200 200 L
300 200 L
n
400 200 m
400 300 L
300 300 L
300 200 L
400 200 L
n
100 100 m
100 200 L
0 200 L
0 100 L
100 100 L
n
500 100 m
500 200 L
400 200 L
400 100 L
500 100 L
n
200 100 m
200 200 L
100 200 L
100 100 L
200 100 L
n
300 100 m
300 200 L
200 200 L
200 100 L
300 100 L
n
400 100 m
400 200 L
300 200 L
300 100 L
400 100 L
n
100 0 m
100 100 L
0 100 L
0 0 L
100 0 L
n
500 0 m
500 100 L
400 100 L
400 0 L
500 0 L
n
200 0 m
200 100 L
100 100 L
100 0 L
200 0 L
n
300 0 m
300 100 L
200 100 L
200 0 L
300 0 L
n
400 0 m
400 100 L
300 100 L
300 0 L
400 0 L
n
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
0 Ap
0 O
0 g
1 D
269 688 m
227 688 L
227 685 L
264 685 L
264 686.7 L
249.7963 683.6932 241 675.2272 241 667 c
241 649.4375 265 644.1875 265 628 c
265 619.782 257.165 613 246 613 c
240.8957 613 234.8125 614.625 231.3 616.7 C
230 614 L
233.9375 611.625 240.3 610 246 610 c
258.5789 610 268 617.8826 268 628 c
268 645.775 244 651.275 244 667 c
244 674.3516 253.7113 682.5282 268.818 684.651 C
269 688 L
f
208.7 621.6 m
213.9283 631.0111 218.9465 643.5514 221.9 655.3 C
219 656 L
216.1875 644.8125 211.3058 632.5505 206 623 C
208.7 621.6 L
f
294 623 m
290.75 633.125 284.4235 646.3132 278 656 C
275.5 654.4 L
281.6316 645.1533 287.8746 632.1484 291.1 622.1 C
294 623 L
f
383 671.5 m
383 666.8057 379.1943 663 374.5 663 c
369.8056 663 366 666.8057 366 671.5 c
366 676.1944 369.8056 680 374.5 680 c
379.1943 680 383 676.1944 383 671.5 C
386 671.5 L
386 677.8512 380.8512 683 374.5 683 c
368.1488 683 363 677.8512 363 671.5 c
363 665.1488 368.1488 660 374.5 660 c
380.8512 660 386 665.1488 386 671.5 C
383 671.5 L
f
71 670 m
81 670 L
81 673 L
71 673 L
71 691 L
68 691 L
68 673 L
35 673 L
35 670 L
68 670 L
68 631 l
68 619.2258 62.151 613 52 613 c
42.6075 613 37 617.8598 37 626 c
37 634.1402 42.6075 639 52 639 c
64.064 639 77.9734 631.0192 85.5 619.3 C
88 621 L
80.0338 633.4037 65.3753 642 52 642 c
40.9922 642 34 635.9031 34 626 c
34 616.0971 40.9922 610 52 610 c
63.7543 610 71 617.5976 71 631 C
71 670 L
f
417.9 610.7 m
414.5065 623.6733 413 635.7997 413 650 c
413 664.2003 414.5065 676.3265 417.9 689.3 C
415 690 L
411.4733 676.5171 410 663.9841 410 650 c
410 636.0159 411.4733 623.4828 415 610 C
417.9 610.7 L
f
452 613 m
442.2185 613 437 617.875 437 625 c
437 632.2363 442.1629 637 452 637 c
463.787 637 476.6307 629.5528 484.5 617.3 c
487 619 L
478.6057 632.0702 464.8034 640 452 640 c
440.4589 640 434 633.903 434 625 c
434 616.0971 440.4589 610 452 610 c
463.2543 610 470 617.0976 470 631 C
470 659 L
487 659 L
487 662 L
470 662 L
470 683 L
478 683 L
478 686 L
435 686 L
435 683 L
467 683 L
467 662 L
435 662 L
435 659 L
467 659 L
467 631 l
467 618.7229 461.7865 613 452 613 c
f
116 639 m
116 655.8582 126.9107 673.3055 144 682.8 C
144 686 L
110 686 L
110 683 L
142 683 L
142 685 L
124.41 675.2273 113 656.6088 113 639 c
113 621.7909 125.5489 610 143 610 c
164.4432 610 176 621.1274 176 642 c
176 652.8515 173.1753 665.109 166 681 C
163.3 679.8 L
170.2744 664.3541 173 652.6288 173 642 c
173 622.757 162.9065 613 143 613 c
127.1028 613 116 623.6916 116 639 c
f
163.3 679.8 m
170.9589 669.0741 181.3209 658.1819 191.1 650.7 C
193 653 L
183.6875 660.125 173.5593 670.4135 166 681 C
163.3 679.8 L
f
395 624 m
354.087 661.4722 351.1794 668 340 668 c
330.6875 668 328.4303 661.3786 305 633 C
307.4 631.2 L
331.2722 660.1139 332.5735 665 340 665 c
349.4729 665 351.036 660.1433 392.9 621.8 C
395 624 L
f
17.9 610.7 m
14.5065 623.6733 13 635.7997 13 650 c
13 664.2003 14.5065 676.3265 17.9 689.3 C
15 690 L
11.4733 676.5171 10 663.9841 10 650 c
10 636.0159 11.4733 623.4828 15 610 C
17.9 610.7 L
f
94 678.5 m
94 674.3579 90.6421 671 86.5 671 c
82.3579 671 79 674.3579 79 678.5 c
79 682.6421 82.3579 686 86.5 686 c
90.6421 686 94 682.6421 94 678.5 C
97 678.5 L
97 684.2989 92.2989 689 86.5 689 c
80.7011 689 76 684.2989 76 678.5 c
76 672.7011 80.7011 668 86.5 668 c
92.2989 668 97 672.7011 97 678.5 C
94 678.5 L
f
191 682.5 m
191 678.3579 187.6421 675 183.5 675 c
179.3579 675 176 678.3579 176 682.5 c
176 686.6421 179.3579 690 183.5 690 c
187.6421 690 191 686.6421 191 682.5 C
194 682.5 L
194 688.2989 189.2989 693 183.5 693 c
177.7011 693 173 688.2989 173 682.5 c
173 676.7011 177.7011 672 183.5 672 c
189.2989 672 194 676.7011 194 682.5 C
191 682.5 L
f
283 680.5 m
283 676.3579 279.6421 673 275.5 673 c
271.3579 673 268 676.3579 268 680.5 c
268 684.6421 271.3579 688 275.5 688 c
279.6421 688 283 684.6421 283 680.5 C
286 680.5 L
286 686.2989 281.2989 691 275.5 691 c
269.7011 691 265 686.2989 265 680.5 c
265 674.7011 269.7011 670 275.5 670 c
281.2989 670 286 674.7011 286 680.5 C
283 680.5 L
f
493 681.5 m
493 677.3579 489.6421 674 485.5 674 c
481.3579 674 478 677.3579 478 681.5 c
478 685.6421 481.3579 689 485.5 689 c
489.6421 689 493 685.6421 493 681.5 C
496 681.5 L
496 687.2989 491.2989 692 485.5 692 c
479.7011 692 475 687.2989 475 681.5 c
475 675.7011 479.7011 671 485.5 671 c
491.2989 671 496 675.7011 496 681.5 C
493 681.5 L
f
u
161.5833 577.9969 m
169.674 567.267 180.4166 556.3302 190.4166 548.6636 C
193.5 552.8303 L
184.0833 560.049 173.914 570.1645 166 580.6636 C
161.5833 577.9969 L
f
159.8665 476.1938 m
168.3892 465.4599 179.5124 454.4785 189.7333 446.6271 C
194 452.6606 L
184.4792 459.9731 174.2687 469.9154 166 480.3272 C
159.8665 476.1938 L
f
158.15 374.4 m
167.1044 363.662 178.6082 352.6361 189.05 344.6 C
194.5 352.5 L
184.875 359.9062 174.6234 369.6755 166 380 C
158.15 374.4 L
f
156.4333 272.5969 m
165.8196 261.8549 177.704 250.7844 188.3666 242.5635 C
195 252.3303 L
185.2708 259.8303 174.9781 269.4264 166 279.6636 C
156.4333 272.5969 L
f
154.7167 170.8031 m
164.5348 160.0571 176.7998 148.942 187.6834 140.5364 C
195.5 152.1697 L
185.6667 159.7635 175.3328 169.1865 166 179.3364 C
154.7167 170.8031 L
f
U
153 69 m
163.25 58.25 175.8956 47.0903 187 38.5 C
196 52 L
186.0625 59.6875 175.6875 68.9375 166 79 C
153 69 L
f
u
268.8333 588.6636 m
226.1667 588.6636 L
226.1667 583.4969 L
261.8333 583.4969 L
261.6666 585.9136 L
247.9989 582.2225 239.8333 573.8624 239.8333 565.8302 c
239.8333 548.8824 262.4999 543.6115 262.4999 528.3303 c
262.4999 520.8281 255.6034 514.8303 245.6667 514.8303 c
240.7784 514.8303 234.9588 516.3664 231.2833 518.4637 C
229.1667 513.6636 L
233.2377 511.208 239.8653 509.4969 245.6667 509.4969 c
258.8021 509.4969 268.3334 517.4872 268.3334 528.3303 c
268.3334 545.7053 245.6667 551.5178 245.6667 566.1636 c
245.6667 573.0455 254.8571 580.8598 269.0182 583.0479 C
268.8333 588.6636 L
f
268.6667 489.3273 m
225.3333 489.3273 L
225.3333 481.9938 L
259.6665 481.9938 L
259.3332 485.1272 L
246.2015 480.7519 238.6666 472.4976 238.6666 464.6605 c
238.6666 448.3272 259.9998 443.0355 259.9998 428.6606 c
259.9998 421.8742 254.0418 416.6607 245.3333 416.6607 c
240.6611 416.6607 235.1051 418.1079 231.2666 420.2273 C
228.3333 413.3272 L
232.5379 410.7911 239.4307 408.9939 245.3333 408.9939 c
259.0253 408.9939 268.6667 417.0918 268.6667 428.6606 c
268.6667 445.6356 247.3334 451.7606 247.3334 465.3272 c
247.3334 471.7395 256.0029 479.1913 269.2183 481.4448 C
268.6667 489.3273 L
f
268.5 390 m
224.5 390 L
224.5 380.5 L
257.5 380.5 L
257 384.35 L
244.4042 379.2905 237.5 371.1421 237.5 363.5 c
237.5 347.7812 257.5 342.4687 257.5 329 c
257.5 322.9294 252.4803 318.5 245 318.5 c
240.5438 318.5 235.2514 319.8583 231.25 322 C
227.5 313 L
231.8383 310.3833 238.9961 308.5 245 308.5 c
259.2485 308.5 269 316.7055 269 329 c
269 345.575 249 352.0125 249 364.5 c
249 370.4427 257.1486 377.5322 269.4184 379.8509 C
268.5 390 L
f
268.3334 290.6636 m
223.6667 290.6636 L
223.6667 278.9969 L
255.3333 278.9969 L
254.6666 283.5636 L
242.6068 277.8198 236.3333 269.7773 236.3333 262.3302 c
236.3333 247.2261 254.9999 241.8928 254.9999 229.3303 c
254.9999 223.9756 250.9187 220.3303 244.6667 220.3303 c
240.4265 220.3303 235.3977 221.5997 231.2333 223.7637 C
226.6667 212.6636 L
231.1385 209.9663 238.5614 207.9969 244.6667 207.9969 c
259.4717 207.9969 269.3334 216.3101 269.3334 229.3303 c
269.3334 245.5053 250.6667 252.2553 250.6667 263.6636 c
250.6667 269.1367 258.2943 275.8637 269.6186 278.2478 C
268.3334 290.6636 L
f
268.1667 191.3364 m
222.8334 191.3364 L
222.8334 177.5031 L
253.1667 177.5031 L
252.3334 182.7864 L
240.8096 176.3584 235.1667 168.4218 235.1667 161.1697 c
235.1667 146.6801 252.5001 141.326 252.5001 129.6697 c
252.5001 125.0307 249.3573 122.1697 244.3334 122.1697 c
240.3092 122.1697 235.544 123.3502 231.2167 125.5363 C
225.8334 112.3364 L
230.4388 109.5585 238.1268 107.5031 244.3334 107.5031 c
259.6949 107.5031 269.6667 115.9239 269.6667 129.6697 c
269.6667 145.4447 252.3333 152.5072 252.3333 162.8364 c
252.3333 167.84 259.44 174.2046 269.8187 176.654 C
268.1667 191.3364 L
f
U
268 92 m
222 92 L
222 76 L
251 76 L
250 82 L
239.0122 74.8878 234 67.057 234 60 c
234 46.125 250 40.75 250 30 c
250 26.0769 247.7957 24 244 24 c
240.1919 24 235.6903 25.0916 231.2 27.3 C
225 12 L
229.739 9.1416 237.6922 7 244 7 c
259.9181 7 270 15.5285 270 30 c
270 45.375 254 52.75 254 62 c
254 66.5339 260.5858 72.5361 270.0188 75.0509 C
268 92 L
f
u
210.0834 521.0303 m
215.4305 530.818 220.4216 543.4321 223.3834 555.2136 C
218.1667 556.3303 L
215.3695 545.204 210.4631 532.8411 205.1667 523.1636 C
210.0834 521.0303 L
f
211.4667 420.4605 m
216.9328 430.6249 221.8967 443.3128 224.8668 455.1272 C
217.3333 456.6606 L
214.5515 445.5955 209.6205 433.1318 204.3333 423.3273 C
211.4667 420.4605 L
f
212.85 319.9 m
218.4349 330.441 223.3717 343.2026 226.35 355.05 C
216.5 357 L
213.7336 345.9961 208.7779 333.4315 203.5 323.5 C
212.85 319.9 L
f
214.2334 219.3303 m
219.9371 230.2479 224.8467 243.0833 227.8334 254.9636 C
215.6667 257.3303 L
212.9157 246.3876 207.9352 233.7221 202.6667 223.6636 C
214.2334 219.3303 L
f
215.6166 118.7697 m
221.4392 130.064 226.3217 142.9731 229.3166 154.8863 C
214.8334 157.6697 L
212.0978 146.7883 207.0927 134.0219 201.8334 123.8364 C
215.6166 118.7697 L
f
U
217 18.2 m
222.9414 29.8709 227.7968 42.8538 230.8 54.8 C
214 58 L
211.2798 47.1798 206.25 34.3125 201 24 C
217 18.2 L
f
u
294.5 523.497 m
291.2083 533.7261 284.8842 546.9663 278.5 556.6636 C
273.8499 554.1636 L
279.8168 545.1073 286.1347 531.9362 289.4166 521.7803 C
294.5 523.497 L
f
295 423.9939 m
291.6667 434.3273 285.3448 447.6194 279 457.3273 C
272.1999 453.9272 L
278.0021 445.0612 284.3948 431.724 287.7332 421.4605 C
295 423.9939 L
f
295.5 324.5 m
292.125 334.9375 285.8055 348.2816 279.5 358 C
270.55 353.7 L
276.1875 345.0243 282.655 331.521 286.05 321.15 C
295.5 324.5 L
f
296 224.997 m
292.5833 235.5386 286.2662 248.9347 280 258.6636 C
268.8999 253.4636 L
274.3727 244.9783 280.9151 231.3088 284.3666 220.8303 C
296 224.997 L
f
296.5 125.503 m
293.0417 136.1488 286.7268 149.5969 280.5 159.3364 C
267.25 153.2364 L
272.5581 144.9414 279.1754 131.1059 282.6834 120.5197 C
296.5 125.503 L
f
U
297 26 m
293.5 36.75 287.1875 50.25 281 60 C
265.6 53 L
270.7434 44.8954 277.4355 30.8937 281 20.2 C
297 26 L
f
u
18.8667 589.4136 m
13.5 590.3303 L
9.9886 576.8522 8.5 564.2212 8.5 549.9969 c
8.5 535.7727 9.9886 523.1416 13.5 509.6636 C
18.8667 510.5803 L
15.5151 523.4429 14.0001 535.7748 14.0001 549.9969 c
14.0001 564.2191 15.5151 576.5509 18.8667 589.4136 C
f
20.8334 489.5272 m
13 490.6606 L
9.5039 477.1872 8 464.4583 8 449.9939 c
8 435.5295 9.5039 422.8005 13 409.3272 C
20.8334 410.4606 L
17.5236 423.2124 16.0001 435.7498 16.0001 449.9939 c
16.0001 464.2379 17.5236 476.7752 20.8334 489.5272 C
f
24.8 389.65 m
14.5 391 L
11.0192 377.5314 9.5 364.7045 9.5 350 c
9.5 335.2954 11.0192 322.4685 14.5 309 C
24.8 310.35 L
21.532 322.9911 20 335.7341 20 350 c
20 364.2659 21.532 377.0087 24.8 389.65 C
f
26.7667 289.7636 m
14 291.3303 L
10.5345 277.8665 9 264.9416 9 249.9969 c
9 235.0522 10.5345 222.1273 14 208.6636 C
26.7667 210.2303 L
23.5406 222.7607 22.0001 235.7092 22.0001 249.9969 c
22.0001 264.2847 23.5406 277.2331 26.7667 289.7636 C
f
28.7333 189.8864 m
13.5 191.6697 L
10.0499 178.2107 8.5 165.1879 8.5 150.003 c
8.5 134.8182 10.0499 121.7953 13.5 108.3364 C
28.7333 110.1197 L
25.549 122.5394 24 135.6934 24 150.003 c
24 164.3127 25.549 177.4666 28.7333 189.8864 C
f
U
29.7 90 m
12 92 L
8.5652 78.5458 7 65.425 7 50 c
7 34.575 8.5652 21.4542 12 8 C
29.7 10 L
26.5576 22.309 25 35.6685 25 50 c
25 64.3315 26.5576 77.691 29.7 90 C
f
u
70 568.3302 m
80.1667 568.3302 L
79.1667 573.4969 L
69.6667 573.497 L
69.6667 591.1636 L
64.1666 591.1636 L
64.1666 573.497 L
32.5 573.497 L
32.5 568.3302 L
64.5 568.3302 L
64.5 530.6636 L
64.5 520.2165 59.2369 514.6637 50.1667 514.6637 c
41.6781 514.6637 36.6667 518.984 36.6667 526.3303 c
36.6667 533.6489 41.6503 537.9969 50.1667 537.9969 c
61.721 537.9969 74.516 530.5522 82.4833 518.1469 C
86.5 521.3303 L
77.8696 534.7682 63.6468 543.1636 50.3334 543.1636 c
38.632 543.1636 31.3333 536.7158 31.3333 526.3303 c
31.3333 515.8709 38.6875 509.4969 50.3334 509.4969 c
62.269 509.4969 70 517.2804 70 530.4969 C
70 568.3302 L
f
70.0001 466.6605 m
81.3334 466.6605 L
78.3334 473.9939 L
69.3334 473.9939 L
69.3334 491.3273 L
61.3332 491.3273 L
61.3332 473.9939 L
32 473.9939 L
32 466.6605 L
61.9999 466.6605 L
61.9999 430.3272 L
61.9999 421.2071 57.3228 416.3273 49.3333 416.3273 c
41.7486 416.3273 37.3334 420.1081 37.3334 426.6606 c
37.3334 433.1576 41.693 436.9938 49.3333 436.9938 c
60.3779 436.9938 72.0587 430.0853 80.4666 416.9938 C
86 421.6606 L
76.7054 436.1326 62.9183 444.3273 49.6667 444.3273 c
37.2718 444.3273 29.6666 437.5286 29.6666 426.6606 c
29.6666 415.6447 37.3829 408.9939 49.6667 408.9939 c
61.7838 408.9939 70.0001 416.9632 70.0001 429.9939 C
70.0001 466.6605 L
f
75 364 m
85.5 364 L
85.5 371.5 L
73.5 371.5 L
73.5 391.5 L
63.5 391.5 L
63.5 373.5 L
34.5 373.5 L
34.5 364 L
64.5 364 L
64.5 330 L
64.5 322.2068 60.4088 318 53.5 318 c
46.8191 318 43 321.2413 43 327 c
43 332.6754 46.7357 336 53.5 336 c
64.0349 336 74.6014 329.6275 83.45 315.85 C
90.5 322 L
80.5413 337.5061 67.1898 345.5 54 345.5 c
40.9117 345.5 33 338.3504 33 327 c
33 315.4277 41.0783 308.5 54 308.5 c
66.2985 308.5 75 316.6552 75 329.5 C
75 364 L
f
76 263.3302 m
86.6667 263.3302 L
86.6667 273.6636 L
74 273.6636 L
74 291.6636 L
61.6666 291.6636 L
61.6666 274.997 L
34 274.997 L
34 263.3302 L
63 263.3302 L
63 229.6636 L
63 223.1975 59.4947 219.6637 53.6667 219.6637 c
47.8896 219.6637 44.6667 222.3655 44.6667 227.3303 c
44.6667 232.1841 47.7785 234.9969 53.6667 234.9969 c
63.6919 234.9969 73.1441 229.1605 82.4333 214.6969 C
91 222.3303 L
80.3771 238.8706 67.4614 246.6636 54.3334 246.6636 c
40.5515 246.6636 32.3333 239.1631 32.3333 227.3303 c
32.3333 215.2015 40.7736 207.9969 54.3334 207.9969 c
66.8133 207.9969 76 216.338 76 228.9969 C
76 263.3302 L
f
77 161.6698 m
87.8333 161.6698 L
87.8333 173.8364 L
74.5 173.8364 L
74.5 191.8364 L
59.8334 191.8364 L
59.8334 175.503 L
33.5 175.503 L
33.5 161.6698 L
61.5001 161.6698 L
61.5001 129.3364 L
61.5001 124.1972 58.5807 121.3363 53.8333 121.3363 c
48.9601 121.3363 46.3333 123.4987 46.3333 127.6697 c
46.3333 131.702 48.8211 134.0031 53.8333 134.0031 c
63.3489 134.0031 71.6869 128.7027 81.4167 113.5531 C
91.5 122.6697 L
80.2129 140.2441 67.7329 147.8363 54.6667 147.8363 c
40.1913 147.8363 31.6667 139.9849 31.6667 127.6697 c
31.6667 114.9845 40.469 107.5031 54.6667 107.5031 c
67.328 107.5031 77 116.03 77 128.5031 C
77 161.6698 L
f
U
91 23 m
79.0487 41.6086 67.0044 49 54 49 c
38.8311 49 30 40.7977 30 28 c
30 14.7583 39.1643 7 54 7 c
66.8427 7 77 15.7128 77 28 C
77 60 L
88 60 L
88 74 L
74 74 L
74 92 L
57 92 L
57 76 L
32 76 L
32 60 L
59 60 L
59 29 L
59 25.1879 56.6666 23 53 23 c
49.0307 23 47 24.6228 47 28 c
47 31.2107 48.8639 33 53 33 c
62.0059 33 69.2295 28.2358 79.4 12.4 C
91 23 L
f
u
144.1667 581.0469 m
144.1667 586.497 L
109.5 586.497 L
109.5 581.3302 L
141.6667 581.3302 L
141.6667 585.1636 L
123.6537 575.1559 112.3333 556.6906 112.3333 539.3303 c
112.3333 521.614 124.9839 509.6636 143.1667 509.6636 c
164.6631 509.6636 176.5 520.76 176.5 540.8302 c
176.5 551.4047 173.7294 563.3169 166.5 579.3302 C
161.5833 577.9969 L
168.423 563.027 171 552.0924 171 541.4969 c
171 523.8677 161.6093 514.8303 143.1667 514.8303 c
128.1578 514.8303 117.8334 524.7705 117.8334 539.3303 c
117.8334 555.1225 128.1262 571.889 144.1667 581.0469 C
f
144.3333 479.2938 m
144.3333 486.9939 L
109 486.9939 L
109 479.6605 L
141.3333 479.6605 L
141.3333 485.3273 L
122.8973 475.0846 111.6666 456.7725 111.6666 439.6606 c
111.6666 421.4371 124.4188 409.3272 143.3333 409.3272 c
164.883 409.3272 177 420.3925 177 439.6605 c
177 449.9579 174.2836 461.5248 167 477.6605 C
159.8665 476.1938 L
166.5716 461.7 168.9999 451.5561 168.9999 440.9939 c
168.9999 424.9784 160.3121 416.6607 143.3333 416.6607 c
129.2127 416.6607 119.6668 425.8494 119.6668 439.6606 c
119.6668 454.3867 129.3417 470.4725 144.3333 479.2938 C
f
144.5 377.55 m
144.5 387.5 L
108.5 387.5 L
108.5 378 L
141 378 L
141 385.5 L
122.1411 375.0223 111 356.8634 111 340 c
111 321.2694 123.8539 309 143.5 309 c
165.1029 309 177.5 320.0342 177.5 338.5 c
177.5 348.5204 174.8376 359.742 167.5 376 C
158.15 374.4 L
164.7204 360.3822 167 351.0289 167 340.5 c
167 326.0981 159.015 318.5 143.5 318.5 c
130.2676 318.5 121.5 326.9373 121.5 340 c
121.5 353.6602 130.5572 369.0653 144.5 377.55 C
f
144.6667 275.7969 m
144.6667 287.997 L
108 287.997 L
108 276.3302 L
140.6667 276.3302 L
140.6667 285.6636 L
121.3848 274.951 110.3333 256.9453 110.3333 240.3303 c
110.3333 221.0925 123.2889 208.6636 143.6667 208.6636 c
165.3229 208.6636 178 219.6668 178 237.3302 c
178 247.0737 175.3918 257.9499 168 274.3302 C
156.4333 272.5969 L
162.869 259.0551 165 250.4925 165 239.9969 c
165 227.2088 157.7178 220.3303 143.6667 220.3303 c
131.3226 220.3303 123.3334 228.0162 123.3334 240.3303 c
123.3334 252.9245 131.7727 267.6488 144.6667 275.7969 C
f
144.8333 174.0531 m
144.8333 188.503 L
107.5 188.503 L
107.5 174.6698 L
140.3334 174.6698 L
140.3334 185.8364 L
120.6285 174.8888 109.6667 157.0363 109.6667 140.6697 c
109.6667 120.9248 122.7239 108.3364 143.8333 108.3364 c
165.5428 108.3364 178.5 119.3085 178.5 136.1697 c
178.5 145.6362 175.9459 156.1671 168.5 172.6698 C
154.7167 170.8031 L
161.0178 157.7373 163.0001 149.9654 163.0001 139.5031 c
163.0001 128.3285 156.4207 122.1697 143.8333 122.1697 c
132.3774 122.1697 125.1666 129.1041 125.1666 140.6697 c
125.1666 152.198 132.9881 166.2416 144.8333 174.0531 C
f
U
145 72.3 m
145 89 L
107 89 L
107 73 L
140 73 L
140 86 L
119.8722 74.8174 109 57.1181 109 41 c
109 20.7479 122.1589 8 144 8 c
165.7627 8 179 18.9411 179 35 c
179 44.1894 176.5 54.375 169 71 C
153 69 L
159.1664 56.4102 161 49.429 161 39 c
161 29.4392 155.1235 24 144 24 c
133.4324 24 127 30.183 127 41 c
127 51.4623 134.2036 64.8251 145 72.3 C
f
u
395.5 524.1636 m
354.5154 561.7014 351.3363 568.3303 340 568.3303 c
330.5729 568.3303 327.9974 561.6236 304.5 533.1636 C
308.6667 529.4969 L
331.9206 557.7481 333.2487 562.4969 340 562.4969 c
348.7213 562.4969 350.2736 557.8185 391.75 519.8302 C
395.5 524.1636 L
f
396 424.3273 m
354.9438 461.9306 351.4932 468.6606 340 468.6606 c
330.4583 468.6606 327.5646 461.8686 304 433.3273 C
309.9334 427.7938 L
332.569 455.3822 333.924 459.9938 340 459.9938 c
347.9698 459.9938 349.5113 455.4936 390.5999 417.8605 C
396 424.3273 L
f
396.5 324.5 m
355.3722 362.1689 351.6501 369 340 369 c
330.3437 369 327.1318 362.1226 303.5 333.5 C
311.2 326.1 L
333.2173 353.0257 334.5992 357.5 340 357.5 c
347.2183 357.5 348.749 353.1781 389.45 315.9 C
396.5 324.5 L
f
397 224.6636 m
355.8007 262.3981 351.8069 269.3303 340 269.3303 c
330.2292 269.3303 326.6989 262.3676 303 233.6636 C
312.4667 224.3969 L
333.8657 250.6598 335.2745 254.9969 340 254.9969 c
346.4668 254.9969 347.9866 250.8532 388.3 213.9302 C
397 224.6636 L
f
397.5 124.8364 m
356.2291 162.6364 351.9638 169.6697 340 169.6697 c
330.1146 169.6697 326.2661 162.6217 302.5 133.8364 C
313.7333 122.7031 L
334.5141 148.3033 335.9497 152.5031 340 152.5031 c
345.7153 152.5031 347.2243 148.5377 387.15 111.9698 C
397.5 124.8364 L
f
U
398 25 m
356.6575 62.8656 352.1207 70 340 70 c
330 70 325.8333 62.8667 302 34 C
315 21 L
335.1625 45.9375 336.625 50 340 50 c
344.9638 50 346.4619 46.2129 386 10 C
398 25 L
f
u
418.8667 589.4136 m
413.5 590.3303 L
409.9886 576.8522 408.5 564.2212 408.5 549.9969 c
408.5 535.7727 409.9886 523.1416 413.5 509.6636 C
418.8667 510.5803 L
415.5151 523.4429 414.0001 535.7748 414.0001 549.9969 c
414.0001 564.2191 415.5151 576.5509 418.8667 589.4136 C
f
420.8334 489.5272 m
413 490.6606 L
409.5039 477.1872 408 464.4583 408 449.9939 c
408 435.5295 409.5039 422.8005 413 409.3272 C
420.8334 410.4606 L
417.5236 423.2124 416.0001 435.7499 416.0001 449.9939 c
416.0001 464.2379 417.5236 476.7752 420.8334 489.5272 C
f
423.8 389.65 m
413.5 391 L
410.0192 377.5314 408.5 364.7045 408.5 350 c
408.5 335.2954 410.0192 322.4685 413.5 309 C
423.8 310.35 L
420.532 322.9911 419 335.7341 419 350 c
419 364.2659 420.532 377.0087 423.8 389.65 C
f
425.7667 289.7636 m
413 291.3303 L
409.5345 277.8665 408 264.9416 408 249.9969 c
408 235.0522 409.5345 222.1273 413 208.6636 C
425.7667 210.2303 L
422.5406 222.7607 421.0001 235.7092 421.0001 249.9969 c
421.0001 264.2847 422.5406 277.2331 425.7667 289.7636 C
f
427.7333 189.8864 m
412.5 191.6697 L
409.0499 178.2107 407.5 165.1879 407.5 150.003 c
407.5 134.8182 409.0499 121.7953 412.5 108.3364 C
427.7333 110.1197 L
424.549 122.5394 423 135.6934 423 150.003 c
423 164.3127 424.549 177.4666 427.7333 189.8864 C
f
U
429.7 90 m
412 92 L
408.5652 78.5458 407 65.425 407 50 c
407 34.575 408.5652 21.4542 412 8 C
429.7 10 L
426.5576 22.309 425 35.6685 425 50 c
425 64.3315 426.5576 77.691 429.7 90 C
f
u
476.1667 581.3302 m
476.1667 586.497 L
433.8333 586.497 L
433.8333 581.3302 L
464.5 581.3302 L
464.5 562.8303 L
433.8333 562.8303 L
433.8333 557.6636 L
464.6666 557.6636 L
464.6666 530.6636 L
464.6666 519.6863 460.0442 514.6637 451.3334 514.6637 c
442.4483 514.6637 437.8334 518.9467 437.8334 525.3303 c
437.8334 531.8068 442.3742 535.9969 451.3334 535.9969 c
462.9901 535.9969 474.8971 528.9969 483.15 516.1469 C
487.1667 519.3303 L
478.1795 533.3236 464.6703 541.1636 451.5 541.1636 c
439.2709 541.1636 432.5 534.8269 432.5 525.3303 c
432.5 515.7875 439.3265 509.4969 451.5 509.4969 c
463.0746 509.4969 470.1667 516.7527 470.1667 530.4969 C
470.1667 557.6636 L
486.5 557.6636 L
486.5 562.8303 L
469.8334 562.8303 L
469.8334 581.3302 L
476.1667 581.3302 L
f
475.3333 479.6605 m
475.3333 486.9939 L
432.6667 486.9939 L
432.6667 479.6605 L
461.9999 479.6605 L
461.9999 463.6606 L
432.6667 463.6606 L
432.6667 456.3272 L
462.3332 456.3272 L
462.3332 430.3272 L
462.3332 420.6497 458.302 416.3273 450.6667 416.3273 c
442.6782 416.3273 438.6668 420.0183 438.6668 425.6606 c
438.6668 431.3772 442.5856 434.9938 450.6667 434.9938 c
462.1933 434.9938 473.1636 428.441 481.8 414.9938 C
487.3334 419.6606 L
477.7534 434.577 464.5371 442.3273 451 442.3273 c
438.0829 442.3273 431 435.7508 431 425.6606 c
431 415.478 438.1941 408.9939 451 408.9939 c
462.8949 408.9939 470.3334 416.4077 470.3334 429.9939 C
470.3334 456.3272 L
486 456.3272 L
486 463.6606 L
469.6667 463.6606 L
469.6667 479.6605 L
475.3333 479.6605 L
f
474.5 378 m
474.5 387.5 L
434.5 387.5 L
434.5 378 L
462.5 378 L
462.5 363.5 L
434.5 363.5 L
434.5 354 L
463 354 L
463 330 L
463 321.6221 459.5598 318 453 318 c
445.9079 318 442.5 321.099 442.5 326 c
442.5 330.9569 445.7969 334 453 334 c
464.3964 334 474.4301 327.8943 483.45 313.85 C
490.5 320 L
480.3272 335.8394 467.4039 343.5 453.5 343.5 c
439.895 343.5 432.5 336.6837 432.5 326 c
432.5 315.1776 440.0617 308.5 453.5 308.5 c
465.7151 308.5 473.5 316.0719 473.5 329.5 C
473.5 354 L
487.5 354 L
487.5 363.5 L
472.5 363.5 L
472.5 378 L
474.5 378 L
f
474.3333 275.3302 m
474.3333 286.997 L
434.3333 286.997 L
434.3333 275.3302 L
462 275.3302 L
462 264.3303 L
434.3333 264.3303 L
434.3333 252.6636 L
462.6666 252.6636 L
462.6666 229.6636 L
462.6666 222.5855 459.8176 219.6637 454.3334 219.6637 c
448.1378 219.6637 445.3334 222.1706 445.3334 226.3303 c
445.3334 230.5273 448.0082 232.9969 454.3334 232.9969 c
464.5995 232.9969 473.6965 227.3384 483.1 212.6969 C
491.6667 220.3303 L
480.901 237.0928 468.2707 244.6636 455 244.6636 c
440.707 244.6636 433 237.6076 433 226.3303 c
433 214.868 440.9292 207.9969 455 207.9969 c
467.5354 207.9969 475.6667 215.727 475.6667 228.9969 C
475.6667 252.6636 L
488 252.6636 L
488 264.3303 L
475.0001 264.3303 L
475.0001 275.3302 L
474.3333 275.3302 L
f
472.8334 174.6698 m
472.8334 188.503 L
434.1667 188.503 L
434.1667 174.6698 L
460.5001 174.6698 L
460.5001 166.1697 L
434.1667 166.1697 L
434.1667 152.3364 L
461.3334 152.3364 L
461.3334 129.3364 L
461.3334 123.5579 459.0754 121.3363 454.6667 121.3363 c
449.3675 121.3363 447.1666 123.2513 447.1666 126.6697 c
447.1666 130.107 449.2195 132.0031 454.6667 132.0031 c
464.8027 132.0031 472.9631 126.7917 482.75 111.5531 C
492.8333 120.6697 L
481.4748 138.3552 469.1374 145.8363 455.5 145.8363 c
440.5191 145.8363 432.5 138.5406 432.5 126.6697 c
432.5 114.5676 440.7968 107.5031 455.5 107.5031 c
468.3557 107.5031 476.8333 115.3912 476.8333 128.5031 C
476.8333 152.3364 L
488.5 152.3364 L
488.5 166.1697 L
474.1667 166.1697 L
474.1667 174.6698 L
472.8334 174.6698 L
f
U
473 73 m
473 89 L
434 89 L
434 73 L
458 73 L
458 67 L
434 67 L
434 51 L
459 51 L
459 29 L
459 24.5213 457.3331 23 454 23 c
449.5974 23 448 24.3229 448 27 c
448 29.6774 449.4308 31 454 31 c
465.0058 31 472.2295 26.2358 482.4 10.4 C
494 21 L
482.0487 39.6086 470.0045 47 455 47 c
439.3311 47 431 39.4645 431 27 c
431 14.2581 439.6644 7 455 7 c
468.176 7 477 15.0463 477 28 C
477 51 L
490 51 L
490 67 L
475 67 L
475 73 L
473 73 L
f
u
382.5 572.247 m
382.5 567.7828 378.8808 564.1636 374.4167 564.1636 c
369.9524 564.1636 366.3334 567.7828 366.3334 572.247 c
366.3334 576.7113 369.9524 580.3303 374.4167 580.3303 c
378.8808 580.3303 382.5 576.7113 382.5 572.247 C
386.8334 572.247 L
386.8334 579.1045 381.2741 584.6637 374.4167 584.6637 c
367.5592 584.6637 362 579.1045 362 572.247 c
362 565.3895 367.5592 559.8303 374.4167 559.8303 c
381.2741 559.8303 386.8334 565.3895 386.8334 572.247 C
382.5 572.247 L
f
382 472.994 m
382 468.7599 378.5674 465.3273 374.3333 465.3273 c
370.0992 465.3273 366.6667 468.7599 366.6667 472.994 c
366.6667 477.2281 370.0992 480.6606 374.3333 480.6606 c
378.5674 480.6606 382 477.2281 382 472.994 C
387.6667 472.994 L
387.6667 480.3577 381.697 486.3273 374.3333 486.3273 c
366.9696 486.3273 360.9999 480.3577 360.9999 472.994 c
360.9999 465.6302 366.9696 459.6606 374.3333 459.6606 c
381.697 459.6606 387.6667 465.6302 387.6667 472.994 C
382 472.994 L
f
381.5 373.75 m
381.5 369.746 378.254 366.5 374.25 366.5 c
370.246 366.5 367 369.746 367 373.75 c
367 377.7541 370.246 381 374.25 381 c
378.254 381 381.5 377.7541 381.5 373.75 C
388.5 373.75 L
388.5 381.6199 382.1199 388 374.25 388 c
366.38 388 360 381.6199 360 373.75 c
360 365.88 366.38 359.5 374.25 359.5 c
382.1199 359.5 388.5 365.88 388.5 373.75 C
381.5 373.75 L
f
381 274.497 m
381 270.7231 377.9405 267.6636 374.1667 267.6636 c
370.3928 267.6636 367.3334 270.7231 367.3334 274.497 c
367.3334 278.2709 370.3928 281.3303 374.1667 281.3303 c
377.9405 281.3303 381 278.2709 381 274.497 C
389.3334 274.497 L
389.3334 282.8732 382.5429 289.6637 374.1667 289.6637 c
365.7904 289.6637 359 282.8732 359 274.497 c
359 266.1208 365.7904 259.3303 374.1667 259.3303 c
382.5429 259.3303 389.3334 266.1208 389.3334 274.497 C
381 274.497 L
f
380.5 175.253 m
380.5 171.7092 377.6271 168.8363 374.0833 168.8363 c
370.5396 168.8363 367.6667 171.7092 367.6667 175.253 c
367.6667 178.7968 370.5396 181.6697 374.0833 181.6697 c
377.6271 181.6697 380.5 178.7968 380.5 175.253 C
390.1667 175.253 L
390.1667 184.1354 382.9658 191.3363 374.0833 191.3363 c
365.2009 191.3363 358 184.1354 358 175.253 c
358 166.3706 365.2009 159.1697 374.0833 159.1697 c
382.9658 159.1697 390.1667 166.3706 390.1667 175.253 C
380.5 175.253 L
f
U
380 76 m
380 72.6863 377.3137 70 374 70 c
370.6864 70 368 72.6863 368 76 c
368 79.3137 370.6864 82 374 82 c
377.3137 82 380 79.3137 380 76 C
391 76 L
391 85.3887 383.3887 93 374 93 c
364.6113 93 357 85.3887 357 76 c
357 66.6113 364.6113 59 374 59 c
383.3887 59 391 66.6113 391 76 C
380 76 L
f
u
92.5833 577.747 m
92.5833 573.789 89.3746 570.5803 85.4166 570.5803 c
81.4587 570.5803 78.25 573.789 78.25 577.747 c
78.25 581.7049 81.4587 584.9136 85.4166 584.9136 c
89.3746 584.9136 92.5833 581.7049 92.5833 577.747 C
96.8333 577.747 L
96.8333 584.0521 91.7218 589.1636 85.4166 589.1636 c
79.1114 589.1636 74 584.0521 74 577.747 c
74 571.4418 79.1114 566.3303 85.4166 566.3303 c
91.7218 566.3303 96.8333 571.4418 96.8333 577.747 C
92.5833 577.747 L
f
92.1666 476.9939 m
92.1666 473.22 89.1071 470.1606 85.3333 470.1606 c
81.5594 470.1606 78.5 473.22 78.5 476.9939 c
78.5 480.7678 81.5594 483.8272 85.3333 483.8272 c
89.1071 483.8272 92.1666 480.7678 92.1666 476.9939 C
97.6667 476.9939 L
97.6667 483.8054 92.1447 489.3273 85.3333 489.3273 c
78.5218 489.3273 72.9999 483.8054 72.9999 476.9939 c
72.9999 470.1825 78.5218 464.6605 85.3333 464.6605 c
92.1447 464.6605 97.6667 470.1825 97.6667 476.9939 C
92.1666 476.9939 L
f
89.75 380.25 m
89.75 376.6602 86.8398 373.75 83.25 373.75 c
79.6602 373.75 76.75 376.6602 76.75 380.25 c
76.75 383.8398 79.6602 386.75 83.25 386.75 c
86.8398 386.75 89.75 383.8398 89.75 380.25 C
96.5 380.25 L
96.5 387.5677 90.5677 393.5 83.25 393.5 c
75.9323 393.5 70 387.5677 70 380.25 c
70 372.9323 75.9323 367 83.25 367 c
90.5677 367 96.5 372.9323 96.5 380.25 C
89.75 380.25 L
f
88.3333 280.4969 m
88.3333 277.0912 85.5723 274.3303 82.1666 274.3303 c
78.7609 274.3303 76 277.0912 76 280.4969 c
76 283.9026 78.7609 286.6636 82.1666 286.6636 c
85.5723 286.6636 88.3333 283.9026 88.3333 280.4969 C
96.3333 280.4969 L
96.3333 288.3209 89.9906 294.6636 82.1666 294.6636 c
74.3427 294.6636 68 288.3209 68 280.4969 c
68 272.673 74.3427 266.3303 82.1666 266.3303 c
89.9906 266.3303 96.3333 272.673 96.3333 280.4969 C
88.3333 280.4969 L
f
86.9167 180.753 m
86.9167 177.5314 84.305 174.9197 81.0834 174.9197 c
77.8617 174.9197 75.25 177.5314 75.25 180.753 c
75.25 183.9747 77.8617 186.5864 81.0834 186.5864 c
84.305 186.5864 86.9167 183.9747 86.9167 180.753 C
96.1667 180.753 L
96.1667 189.0832 89.4135 195.8363 81.0834 195.8363 c
72.7532 195.8363 66.0001 189.0832 66.0001 180.753 c
66.0001 172.4229 72.7532 165.6697 81.0834 165.6697 c
89.4135 165.6697 96.1667 172.4229 96.1667 180.753 C
86.9167 180.753 L
f
U
85.5 80 m
85.5 76.9625 83.0375 74.5 80 74.5 c
76.9625 74.5 74.5 76.9625 74.5 80 c
74.5 83.0375 76.9625 85.5 80 85.5 c
83.0375 85.5 85.5 83.0375 85.5 80 C
96 80 L
96 88.8364 88.8364 96 80 96 c
71.1636 96 64 88.8364 64 80 c
64 71.1636 71.1636 64 80 64 c
88.8364 64 96 71.1636 96 80 C
85.5 80 L
f
u
189.5833 582.9136 m
189.5833 578.9556 186.3746 575.7469 182.4166 575.7469 c
178.4587 575.7469 175.25 578.9556 175.25 582.9136 c
175.25 586.8716 178.4587 590.0803 182.4166 590.0803 c
186.3746 590.0803 189.5833 586.8716 189.5833 582.9136 C
193.8333 582.9136 L
193.8333 589.2188 188.7218 594.3303 182.4166 594.3303 c
176.1114 594.3303 171 589.2188 171 582.9136 c
171 576.6084 176.1114 571.4969 182.4166 571.4969 c
188.7218 571.4969 193.8333 576.6084 193.8333 582.9136 C
189.5833 582.9136 L
f
183.1666 480.3272 m
183.1666 476.5533 180.1071 473.4939 176.3333 473.4939 c
172.5594 473.4939 169.5 476.5533 169.5 480.3272 c
169.5 484.1011 172.5594 487.1605 176.3333 487.1605 c
180.1071 487.1605 183.1666 484.1011 183.1666 480.3272 C
188.6667 480.3272 L
188.6667 487.1386 183.1447 492.6606 176.3333 492.6606 c
169.5218 492.6606 163.9999 487.1386 163.9999 480.3272 c
163.9999 473.5158 169.5218 467.9938 176.3333 467.9938 c
183.1447 467.9938 188.6667 473.5158 188.6667 480.3272 C
183.1666 480.3272 L
f
182.75 379.75 m
182.75 376.1602 179.8398 373.25 176.25 373.25 c
172.6602 373.25 169.75 376.1602 169.75 379.75 c
169.75 383.3398 172.6602 386.25 176.25 386.25 c
179.8398 386.25 182.75 383.3398 182.75 379.75 C
189.5 379.75 L
189.5 387.0677 183.5677 393 176.25 393 c
168.9323 393 163 387.0677 163 379.75 c
163 372.4323 168.9323 366.5 176.25 366.5 c
183.5677 366.5 189.5 372.4323 189.5 379.75 C
182.75 379.75 L
f
182.3333 278.1636 m
182.3333 274.7579 179.5723 271.9969 176.1666 271.9969 c
172.7609 271.9969 170 274.7579 170 278.1636 c
170 281.5693 172.7609 284.3302 176.1666 284.3302 c
179.5723 284.3302 182.3333 281.5693 182.3333 278.1636 C
190.3333 278.1636 L
190.3333 285.9875 183.9906 292.3303 176.1666 292.3303 c
168.3427 292.3303 162 285.9875 162 278.1636 c
162 270.3397 168.3427 263.9969 176.1666 263.9969 c
183.9906 263.9969 190.3333 270.3397 190.3333 278.1636 C
182.3333 278.1636 L
f
181.9167 177.5864 m
181.9167 174.3648 179.305 171.753 176.0834 171.753 c
172.8617 171.753 170.25 174.3648 170.25 177.5864 c
170.25 180.808 172.8617 183.4197 176.0834 183.4197 c
179.305 183.4197 181.9167 180.808 181.9167 177.5864 C
191.1667 177.5864 L
191.1667 185.9165 184.4135 192.6697 176.0834 192.6697 c
167.7532 192.6697 161.0001 185.9165 161.0001 177.5864 c
161.0001 169.2562 167.7532 162.5031 176.0834 162.5031 c
184.4135 162.5031 191.1667 169.2562 191.1667 177.5864 C
181.9167 177.5864 L
f
U
182.5 79 m
182.5 75.9625 180.0375 73.5 177 73.5 c
173.9625 73.5 171.5 75.9625 171.5 79 c
171.5 82.0375 173.9625 84.5 177 84.5 c
180.0375 84.5 182.5 82.0375 182.5 79 C
193 79 L
193 87.8364 185.8364 95 177 95 c
168.1636 95 161 87.8364 161 79 c
161 70.1636 168.1636 63 177 63 c
185.8364 63 193 70.1636 193 79 C
182.5 79 L
f
u
282.9167 580.4136 m
282.9167 576.4556 279.708 573.247 275.75 573.247 c
271.792 573.247 268.5834 576.4556 268.5834 580.4136 c
268.5834 584.3716 271.792 587.5803 275.75 587.5803 c
279.708 587.5803 282.9167 584.3716 282.9167 580.4136 C
287.1667 580.4136 L
287.1667 586.7188 282.0552 591.8303 275.75 591.8303 c
269.4448 591.8303 264.3333 586.7188 264.3333 580.4136 c
264.3333 574.1084 269.4448 568.9969 275.75 568.9969 c
282.0552 568.9969 287.1667 574.1084 287.1667 580.4136 C
282.9167 580.4136 L
f
282.8333 480.3272 m
282.8333 476.5533 279.7739 473.4939 276 473.4939 c
272.2261 473.4939 269.1667 476.5533 269.1667 480.3272 c
269.1667 484.1011 272.2261 487.1605 276 487.1605 c
279.7739 487.1605 282.8333 484.1011 282.8333 480.3272 C
288.3334 480.3272 L
288.3334 487.1387 282.8115 492.6606 276 492.6606 c
269.1886 492.6606 263.6666 487.1387 263.6666 480.3272 c
263.6666 473.5158 269.1886 467.9938 276 467.9938 c
282.8115 467.9938 288.3334 473.5158 288.3334 480.3272 C
282.8333 480.3272 L
f
282.75 380.25 m
282.75 376.6602 279.8398 373.75 276.25 373.75 c
272.6602 373.75 269.75 376.6602 269.75 380.25 c
269.75 383.8398 272.6602 386.75 276.25 386.75 c
279.8398 386.75 282.75 383.8398 282.75 380.25 C
289.5 380.25 L
289.5 387.5677 283.5677 393.5 276.25 393.5 c
268.9323 393.5 263 387.5677 263 380.25 c
263 372.9323 268.9323 367 276.25 367 c
283.5677 367 289.5 372.9323 289.5 380.25 C
282.75 380.25 L
f
282.6667 280.1636 m
282.6667 276.7579 279.9057 273.9969 276.5 273.9969 c
273.0943 273.9969 270.3334 276.7579 270.3334 280.1636 c
270.3334 283.5693 273.0943 286.3303 276.5 286.3303 c
279.9057 286.3303 282.6667 283.5693 282.6667 280.1636 C
290.6667 280.1636 L
290.6667 287.9875 284.3239 294.3303 276.5 294.3303 c
268.6761 294.3303 262.3333 287.9875 262.3333 280.1636 c
262.3333 272.3397 268.6761 265.9969 276.5 265.9969 c
284.3239 265.9969 290.6667 272.3397 290.6667 280.1636 C
282.6667 280.1636 L
f
282.5833 180.0864 m
282.5833 176.8648 279.9716 174.253 276.75 174.253 c
273.5284 174.253 270.9167 176.8648 270.9167 180.0864 c
270.9167 183.308 273.5284 185.9197 276.75 185.9197 c
279.9716 185.9197 282.5833 183.308 282.5833 180.0864 C
291.8333 180.0864 L
291.8333 188.4165 285.0801 195.1697 276.75 195.1697 c
268.4198 195.1697 261.6667 188.4165 261.6667 180.0864 c
261.6667 171.7562 268.4198 165.0031 276.75 165.0031 c
285.0801 165.0031 291.8333 171.7562 291.8333 180.0864 C
282.5833 180.0864 L
f
U
282.5 80 m
282.5 76.9625 280.0375 74.5 277 74.5 c
273.9625 74.5 271.5 76.9625 271.5 80 c
271.5 83.0375 273.9625 85.5 277 85.5 c
280.0375 85.5 282.5 83.0375 282.5 80 C
293 80 L
293 88.8364 285.8364 96 277 96 c
268.1636 96 261 88.8364 261 80 c
261 71.1636 268.1636 64 277 64 c
285.8364 64 293 71.1636 293 80 C
282.5 80 L
f
u
491.75 580.5803 m
491.75 576.6223 488.5413 573.4136 484.5833 573.4136 c
480.6253 573.4136 477.4167 576.6223 477.4167 580.5803 c
477.4167 584.5382 480.6253 587.7469 484.5833 587.7469 c
488.5413 587.7469 491.75 584.5382 491.75 580.5803 C
496 580.5803 L
496 586.8854 490.8885 591.9969 484.5833 591.9969 c
478.2781 591.9969 473.1666 586.8854 473.1666 580.5803 c
473.1666 574.2751 478.2781 569.1636 484.5833 569.1636 c
490.8885 569.1636 496 574.2751 496 580.5803 C
491.75 580.5803 L
f
491.4999 479.6605 m
491.4999 475.8866 488.4405 472.8272 484.6666 472.8272 c
480.8927 472.8272 477.8333 475.8866 477.8333 479.6605 c
477.8333 483.4344 480.8927 486.4938 484.6666 486.4938 c
488.4405 486.4938 491.4999 483.4344 491.4999 479.6605 C
497 479.6605 L
497 486.472 491.4781 491.9939 484.6666 491.9939 c
477.8552 491.9939 472.3332 486.472 472.3332 479.6605 c
472.3332 472.8491 477.8552 467.3271 484.6666 467.3271 c
491.4781 467.3271 497 472.8491 497 479.6605 C
491.4999 479.6605 L
f
488.25 379.75 m
488.25 376.1602 485.3398 373.25 481.75 373.25 c
478.1602 373.25 475.25 376.1602 475.25 379.75 c
475.25 383.3398 478.1602 386.25 481.75 386.25 c
485.3398 386.25 488.25 383.3398 488.25 379.75 C
495 379.75 L
495 387.0677 489.0677 393 481.75 393 c
474.4323 393 468.5 387.0677 468.5 379.75 c
468.5 372.4323 474.4323 366.5 481.75 366.5 c
489.0677 366.5 495 372.4323 495 379.75 C
488.25 379.75 L
f
487 281.8302 m
487 278.4245 484.239 275.6636 480.8333 275.6636 c
477.4276 275.6636 474.6667 278.4245 474.6667 281.8302 c
474.6667 285.2359 477.4276 287.9969 480.8333 287.9969 c
484.239 287.9969 487 285.2359 487 281.8302 C
495 281.8302 L
495 289.6542 488.6572 295.9969 480.8333 295.9969 c
473.0094 295.9969 466.6666 289.6542 466.6666 281.8302 c
466.6666 274.0063 473.0094 267.6636 480.8333 267.6636 c
488.6572 267.6636 495 274.0063 495 281.8302 C
487 281.8302 L
f
485.75 176.9197 m
485.75 173.6981 483.1383 171.0864 479.9167 171.0864 c
476.6951 171.0864 474.0834 173.6981 474.0834 176.9197 c
474.0834 180.1414 476.6951 182.7531 479.9167 182.7531 c
483.1383 182.7531 485.75 180.1414 485.75 176.9197 C
495 176.9197 L
495 185.2499 488.2468 192.003 479.9167 192.003 c
471.5865 192.003 464.8334 185.2499 464.8334 176.9197 c
464.8334 168.5896 471.5865 161.8364 479.9167 161.8364 c
488.2468 161.8364 495 168.5896 495 176.9197 C
485.75 176.9197 L
f
U
485.5 76 m
485.5 72.9625 483.0375 70.5 480 70.5 c
476.9625 70.5 474.5 72.9625 474.5 76 c
474.5 79.0375 476.9625 81.5 480 81.5 c
483.0375 81.5 485.5 79.0375 485.5 76 C
496 76 L
496 84.8364 488.8364 92 480 92 c
471.1636 92 464 84.8364 464 76 c
464 67.1636 471.1636 60 480 60 c
488.8364 60 496 67.1636 496 76 C
485.5 76 L
f
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
