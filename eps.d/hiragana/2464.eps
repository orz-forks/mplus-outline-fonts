%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(TM) 7.0
%%For: (coz) (underforest)
%%Title: (2464.eps)
%%CreationDate: (2/2/04) (1:48 PM)
%%BoundingBox: 0 0 300 500
%%HiResBoundingBox: 0 0 300 500
%%DocumentProcessColors: Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_ColorImage_AI6 1.1 0
%%+ procset Adobe_Illustrator_AI5 1.2 0
%%+ procset Adobe_cshow 2.0 8
%AI5_FileFormat 3
%AI3_ColorUsage: Black&White
%AI3_IncludePlacedImages
%AI7_ImageSettings: 1
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 8.5 0 0 0 0 0 0 0 0 -1 -1
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () 
%AI3_TemplateBox: 244.5 256.5 244.5 256.5
%AI3_TileBox: -41.5 -119.5 534.5 642.5
%AI3_DocumentPreview: Macintosh_ColorPic
%AI5_ArtSize: 592 840
%AI5_RulerUnits: 2
%AI5_ArtFlags: 1 0 0 1 0 0 1 1 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI5_OpenToView: -139.5 520.5 1 794 556 25 0 0 3 40 0 0
%AI5_OpenViewLayers: 5
%%PageOrigin:-41.5 -119.5
%%AI3_PaperRect:-10 808 585 -34
%%AI3_Margin:10 -43 -9 34
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 25 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			0
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			1
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop 
			0 eq
			{
				pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				pop
				3
				{
					1 exch sub
					3 index mul 
					1 exch sub
					3 1 roll
				} repeat
				4 -1 roll pop
				setrgbcolor
			} ifelse
		}
		def
	} if
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	level2?
	{
		gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
		add add add 4 eq
	}
	{
		1 0 0 0 testCMYKColorThrough
		0 1 0 0 testCMYKColorThrough
		0 0 1 0 testCMYKColorThrough
		0 0 0 1 testCMYKColorThrough
		and and and
	} ifelse
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.1 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 24 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize
{ 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6
	{
		dup type /arraytype eq
		{
			dup xcheck
			{
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not
{
	/Adobe_ColorImage_AI6_Vars 15 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/channelcount 0 def
	/sourcecount 0 def
	/sourcearray 4 array def
	/plateindex -1 def
	/XIMask 0 def
	/XIBinary 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIBuffer null def
	/XIDataProc null def
	/XIVersion 6 def
end
/WalkRGBString null def
/WalkCMYKString null def
/StuffRGBIntoGrayString null def
/RGBToGrayImageProc null def
/StuffCMYKIntoGrayString null def
/CMYKToGrayImageProc null def
/ColorImageCompositeEmulator null def
/SeparateCMYKImageProc null def
/FourEqual null def
/TestPlateIndex null def
currentdict /_colorimage known not
{
	/colorimage where
	{
		/colorimage get /_colorimage exch def
	}
	{
		/_colorimage null def
	} ifelse
} if
/_currenttransfer systemdict /currenttransfer get def
/colorimage null def
/XI null def
/WalkRGBString
{
	0 3 index
	dup length 1 sub 0 3 3 -1 roll
	{
		3 getinterval { } forall
		5 index exec
		3 index
	} for
	
	 5 { pop } repeat
} def
/WalkCMYKString
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll
	{
		4 getinterval { } forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/StuffRGBIntoGrayString
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/RGBToGrayImageProc
{	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		dup length 3 idiv string
		dup 3 1 roll 
		
		/StuffRGBIntoGrayString load exch
		WalkRGBString
 end
} def
/StuffCMYKIntoGrayString
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/CMYKToGrayImageProc
{	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		dup length 4 idiv string
		dup 3 1 roll 
		
		/StuffCMYKIntoGrayString load exch
		WalkCMYKString
 end
} def
/ColorImageCompositeEmulator
{
	pop true eq
	{
		Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat
	}
	{
		Adobe_ColorImage_AI6_Vars /channelcount get 1 ne
		{
			Adobe_ColorImage_AI6_Vars begin
				sourcearray 0 3 -1 roll put
			
				channelcount 3 eq 
				{ 
					/RGBToGrayImageProc 
				}
				{ 
					/CMYKToGrayImageProc
				} ifelse
				load
		 end
		} if
		image
	} ifelse
} def
/SeparateCMYKImageProc
{	
	Adobe_ColorImage_AI6_Vars begin
		sourcecount 0 ne
		{
			sourcearray plateindex get exec
		}
		{			
			sourcearray 0 get exec
			
			dup length 4 idiv string
			
			0 2 index
			
			plateindex 4 2 index length 1 sub
			{
				get 255 exch sub
				
				3 copy put pop 1 add
				
				2 index
			} for
			pop pop exch pop
		} ifelse
 end
} def
	
/FourEqual
{
	4 index ne
	{
		pop pop pop false
	}
	{
		4 index ne
		{
			pop pop false
		}
		{
			4 index ne
			{
				pop false
			}
			{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/TestPlateIndex
{
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where
		{
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 FourEqual 
			{ 
				/plateindex 0 def
			}
			{
				0 1 0 0 FourEqual
				{ 
					/plateindex 1 def
				}
				{
					0 0 1 0 FourEqual
					{
						/plateindex 2 def
					}
					{
						0 0 0 1 FourEqual
						{ 
							/plateindex 3 def
						}
						{
							0 0 0 0 FourEqual
							{
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/colorimage
{
	Adobe_ColorImage_AI6_Vars begin
		/channelcount 1 index def
		/sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def
		4 sourcecount add index dup 
		8 eq exch 1 eq or not
 end
	
	{
		/_colorimage load null ne
		{
			_colorimage
		}
		{
			Adobe_ColorImage_AI6_Vars /sourcecount get
			7 add { pop } repeat
		} ifelse
	}
	{
		dup 3 eq
		TestPlateIndex
		dup -1 eq exch 5 eq or or
		{
			/_colorimage load null eq
			{
				ColorImageCompositeEmulator
			}
			{
				dup 1 eq
				{
					pop pop image
				}
				{
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
					{
						gsave
						
						0 _currenttransfer exec
						1 _currenttransfer exec
						eq
						{ 0 _currenttransfer exec 0.5 lt }
						{ 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse
						
						{ { pop 0 } } { { pop 1 } } ifelse
						systemdict /settransfer get exec
					} if
					
					_colorimage
					
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
					{
						grestore
					} if
				} ifelse
			} ifelse
		}
		{
			dup 1 eq
			{
				pop pop
				image
			}
			{
				pop pop
				Adobe_ColorImage_AI6_Vars begin
					sourcecount -1 0
					{			
						exch sourcearray 3 1 roll put
					} for
					/SeparateCMYKImageProc load
			 end
				systemdict /image get exec
			} ifelse
		} ifelse
	} ifelse
} def
/XG
{
	pop pop
} def
/XF
{
	13 {pop} repeat
} def
/Xh
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIMask exch 0 ne def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		XIMask
		{
			/_lp /null ddef
			_fc
			/_lp /imagemask ddef
		}
		if
		/XIVersion 7 def
 end
} def
/XH
{
	Adobe_ColorImage_AI6_Vars begin
		/XIVersion 6 def
		grestore
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIMask exch 0 ne def
		/XIBinary exch 0 ne def
		pop
		pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq
		{
			XIImageWidth 8 div ceiling cvi
		}
		{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIBuffer exch string def
		XIBinary
		{
			/XIDataProc { currentfile XIBuffer readstring pop } def
			XIVersion 6 le
			{
				currentfile 128 string readline pop pop
			}
			if
		}
		{
			/XIDataProc { currentfile XIBuffer readhexstring pop } def
		} ifelse
		
		XIVersion 6 le
		{
			0 0 moveto
			XIImageMatrix concat
			XIImageWidth XIImageHeight scale
			XIMask
			{
				/_lp /null ddef
				_fc
				/_lp /imagemask ddef
			} if
		} if
		
		XIMask
		{
			XIImageWidth XIImageHeight
			false
			[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
			/XIDataProc load
			imagemask
		}
		{
			XIImageWidth XIImageHeight
			XIBitsPerPixel
			[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
			/XIDataProc load
			
			XIChannelCount 1 eq
			{
				gsave
				0 setgray
				image
				grestore
			}
			{
				false
				XIChannelCount
				colorimage
			} ifelse
		} ifelse
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 7.0 Full Prolog)
%%Version: 1.2 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 107 dict dup begin
put
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XA
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/_rgbtocmyk
{
3
	{
	1 exch sub 3 1 roll
	} repeat
3 copy 1 4 1 roll
3
	{
	3 index 2 copy gt
		{
		exch
		} if
	pop 4 1 roll
	} repeat
pop pop pop
4 1 roll
3
	{
	3 index sub
	3 1 roll
	} repeat
4 -1 roll
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq
	{
		findcmykcustomcolor
	}
	{
		/findrgbcustomcolor where not {
			4 1 roll _rgbtocmyk
			5 -1 roll
			findcmykcustomcolor
		}
		{
			pop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq
	{
		findcmykcustomcolor
	}
	{
		/findrgbcustomcolor where not {
			4 1 roll _rgbtocmyk
			5 -1 roll
			findcmykcustomcolor
		}
		{
			pop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%EndProlog
%%BeginSetup
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_BeginPalette
0 0 Pb
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 0 1 1 0 0 3 79 79 255 Lb
(glyphs) Ln
0 A
u
1 Ap
800 Ar
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
0 XR
100 400 m
100 500 L
0 500 L
0 400 L
100 400 L
n
200 400 m
200 500 L
100 500 L
100 400 L
200 400 L
n
300 400 m
300 500 L
200 500 L
200 400 L
300 400 L
n
100 300 m
100 400 L
0 400 L
0 300 L
100 300 L
n
200 300 m
200 400 L
100 400 L
100 300 L
200 300 L
n
300 300 m
300 400 L
200 400 L
200 300 L
300 300 L
n
100 200 m
100 300 L
0 300 L
0 200 L
100 200 L
n
200 200 m
200 300 L
100 300 L
100 200 L
200 200 L
n
300 200 m
300 300 L
200 300 L
200 200 L
300 200 L
n
100 100 m
100 200 L
0 200 L
0 100 L
100 100 L
n
200 100 m
200 200 L
100 200 L
100 100 L
200 100 L
n
300 100 m
300 200 L
200 200 L
200 100 L
300 100 L
n
100 0 m
100 100 L
0 100 L
0 0 L
100 0 L
n
200 0 m
200 100 L
100 100 L
100 0 L
200 0 L
n
300 0 m
300 100 L
200 100 L
200 0 L
300 0 L
n
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
*u
0 Ap
0 O
0 g
1 D
233.4 406.2 m
245.5429 406.2 253.6 414.1013 253.6 428 C
253.6 435.0185 L
266.0115 431.6255 276.7697 424.7477 284.6 415.3 C
288.4 418.2 L
279.3912 429.0696 267.3824 436.5404 253.6 440.0008 C
253.6 470.4 L
283.6 470.4 L
283.6 475.2 L
253.6 475.2 L
253.6 493.8 L
248.6 493.8 L
248.6 441.063 L
244.397 441.8008 240.059 442.2 235.6 442.2 c
221.0539 442.2 212 434.1456 212 424.2 c
212 412.7572 219.3878 406.2 233.4 406.2 c
f
0 D
235.6 437.4 m
240.0655 437.4 244.4077 436.9604 248.6 436.1572 C
248.6 428 L
248.6 416.7449 242.7614 411 233.4 411 c
222.1666 411 217 415.5033 217 424.2 c
217 431.6424 224.0462 437.4 235.6 437.4 c
f
*U
*u
1 D
117 427 m
117 454.1691 132.7021 472.7012 156.1057 474.7964 C
156.408 461.7078 156.6 449.3622 156.6 442 c
156.6 438.119 156.4636 434.7682 156.128 431.8466 C
146.774 432.8973 139.8632 437.4087 134.8 445.9 C
130.8 443.2 L
136.4653 433.6987 144.605 428.3932 155.3093 427.1143 C
153.0973 417.9654 147.5927 413.968 135.5 409.9 C
137.4 405.2 L
151.2842 409.8705 157.8055 415.3602 160.3051 426.8076 C
160.4047 426.8069 160.5001 426.8 160.6 426.8 c
181.3211 426.8 191.8 436.2784 191.8 453.6 c
191.8 469.8304 181.5577 479.6712 160.9861 479.7942 C
160.8682 484.5229 160.7381 489.2587 160.6 493.8 C
155.6 493.8 L
155.7408 489.1711 155.8722 484.3726 155.9906 479.6036 C
135.3392 477.9252 120.2596 464.9101 114.533 444.5012 C
114.2964 447.6873 114.1792 450.8538 114.2 454 c
114.2591 462.9282 115.248 473.0881 117 483.4 C
112 483.8 L
110.25 473.5 109.2625 463.4375 109.2 454 c
109.1375 444.5625 110.125 435.375 112 426.2 C
117 427 L
f
0 D
186.8 453.6 m
186.8 439.2613 178.8385 431.7422 161.0859 431.6064 C
161.4398 434.6846 161.6 438.1208 161.6 442 c
161.6 449.582 161.4033 461.9965 161.1018 474.9866 C
178.5977 474.8453 186.8 467.4974 186.8 453.6 c
f
*U
8.4 449.9 m
15.2248 453.3716 21.5097 456.3878 27.2826 458.9963 C
32.6404 441.5737 37.4506 424.3403 42 406.2 C
46.8 407.4 L
42.2043 425.7248 37.3625 443.2454 31.9119 461.0479 C
51.1233 469.3928 64.0309 472.8 71.2 472.8 c
82.3076 472.8 87.8 467.6478 87.8 458.8 c
87.8 447.4918 82.1617 442.5815 61.8 440.8 C
62.6 436 L
84.9417 437.9547 92.8 444.891 92.8 458.8 c
92.8 470.0883 85.0706 477.6 71.2 477.6 c
68.2709 477.6 64.6823 477.1337 60.4324 476.1713 C
58.5824 481.598 56.5123 487.3407 54.7 492.3 C
50 490.6 L
51.8643 485.4971 53.7597 480.3072 55.5986 474.9407 C
48.6733 472.9991 40.3116 469.9577 30.4782 465.7009 C
28.1709 473.1102 25.7617 480.5796 23.2 488.2 C
18.4 486.6 L
21.0107 478.8339 23.4734 471.2184 25.8386 463.652 C
19.8029 460.9334 13.2598 457.7911 6.2 454.2 C
8.4 449.9 L
f
*u
1 D
233.4 306.1 m
246.5594 306.1 255.1 314.3683 255.1 328.4 C
255.1 334.3749 L
266.188 330.7368 275.9492 324.0785 283 315.2 C
288.5 319.3 L
279.9819 330.0606 268.3231 337.7427 255.1 341.5597 C
255.1 369.1 L
283.7 369.1 L
283.7 375.9 L
255.1 375.9 L
255.1 393.9 L
247.6 393.9 L
247.6 343.2782 L
243.6903 343.9474 239.6802 344.3 235.6 344.3 c
220.7705 344.3 211.3 335.8872 211.3 325.2 c
211.3 313.324 219.2878 306.1 233.4 306.1 c
f
0 D
235.6 337.5 m
239.6845 337.5 243.697 337.0815 247.6 336.3215 C
247.6 328.4 L
247.6 317.9801 242.4639 312.9 233.4 312.9 c
223.4556 312.9 218.6 317.1874 218.6 325.2 c
218.6 332.1531 225.008 337.5 235.6 337.5 c
f
*U
*u
1 D
233.4 206 m
247.5759 206 256.6 214.6352 256.6 228.8 C
256.6 233.5745 L
266.404 229.7455 275.1265 223.3585 281.4 215.1 C
288.6 220.4 L
280.5598 231.0301 269.2828 238.8805 256.6 243.0379 C
256.6 267.8 L
283.8 267.8 L
283.8 276.6 L
256.6 276.6 L
256.6 294 L
246.6 294 L
246.6 245.4869 L
242.9899 246.0857 239.3118 246.4 235.6 246.4 c
220.4871 246.4 210.6 237.6289 210.6 226.2 c
210.6 213.8907 219.1878 206 233.4 206 c
f
0 D
235.6 237.6 m
239.3085 237.6 242.9909 237.2082 246.6 236.4955 C
246.6 228.8 L
246.6 219.2153 242.1664 214.8 233.4 214.8 c
224.7446 214.8 220.2 218.8714 220.2 226.2 c
220.2 232.6637 225.9697 237.6 235.6 237.6 c
f
*U
*u
1 D
233.4 105.9 m
248.5924 105.9 258.1 114.9022 258.1 129.2 C
258.1 132.5845 L
266.6504 128.6365 274.2996 122.5833 279.8 115 C
288.7 121.5 L
281.1251 131.978 270.2562 139.9468 258.1 144.4241 C
258.1 166.5 L
283.9 166.5 L
283.9 177.3 L
258.1 177.3 L
258.1 194.1 L
245.6 194.1 L
245.6 147.6966 L
242.2963 148.2236 238.9519 148.5 235.6 148.5 c
220.2037 148.5 209.9 139.3705 209.9 127.2 c
209.9 114.4574 219.0877 105.9 233.4 105.9 c
f
0 D
235.6 137.7 m
238.9381 137.7 242.2897 137.3418 245.6 136.6805 C
245.6 129.2 L
245.6 120.4506 241.8689 116.7 233.4 116.7 c
226.0336 116.7 221.8 120.5554 221.8 127.2 c
221.8 133.1744 226.9314 137.7 235.6 137.7 c
f
*U
*u
1 D
259.6 45.7252 m
259.6 65.2 L
284 65.2 L
284 78 L
259.6 78 L
259.6 94.2 L
244.6 94.2 L
244.6 49.9042 L
241.6091 50.3589 238.5994 50.6 235.6 50.6 c
219.9203 50.6 209.2 41.1121 209.2 28.2 c
209.2 15.0242 218.9877 5.8 233.4 5.8 c
249.6089 5.8 259.6 15.1692 259.6 29.6 C
259.6 31.3625 L
266.9162 27.3877 273.4674 21.747 278.2 14.9 C
288.8 22.6 L
281.6768 32.9057 271.2399 40.9525 259.6 45.7252 C
f
0 D
244.6 29.6 m
244.6 21.6858 241.5713 18.6 233.4 18.6 c
227.3226 18.6 223.4 22.2395 223.4 28.2 c
223.4 33.685 227.8931 37.8 235.6 37.8 c
238.5741 37.8 241.5934 37.4835 244.6 36.8777 C
244.6 29.6 L
f
*U
*u
1 D
118.9 327.2 m
119.1865 353.0986 133.457 370.6597 154.6529 373.4106 C
154.9366 360.7502 155.1 348.9683 155.1 342 c
155.1 338.8678 154.9995 336.1083 154.764 333.6515 C
146.9216 334.9367 140.9363 339.016 136.4 346.4 C
130.8 342.6 L
136.0279 333.8323 143.6992 328.5997 153.5493 326.9612 C
151.2223 319.1404 145.8409 315.5425 134.6 311.9 C
137.3 305.1 L
151.3119 309.6099 158.2694 315.2888 161.0616 326.4071 C
181.3947 326.5572 192 336.5268 192 353.8 c
192 370.0676 181.8561 380.2301 161.9791 380.6785 C
161.8648 385.1449 161.7377 389.6083 161.6 393.9 C
154.1 393.9 L
154.2421 389.4748 154.3718 384.8954 154.4874 380.337 C
136.6697 378.2673 122.8884 367.11 116.2519 349.9116 C
116.2139 351.2819 116.191 352.647 116.2 354 c
116.2577 362.7153 117.2504 372.9021 119 383.2 C
111.9 383.9 L
110.15 373.6 109.1625 363.4375 109.1 354 c
109.0375 344.5625 110.025 335.275 111.9 326.1 C
118.9 327.2 L
f
0 D
184.7 353.8 m
184.7 340.5461 177.7162 333.6863 162.2059 333.243 C
162.4731 335.9037 162.6 338.8057 162.6 342 c
162.6 349.3339 162.4301 361.2064 162.1459 373.759 C
177.5635 373.3355 184.7 366.5943 184.7 353.8 c
f
*U
*u
1 D
120.8 227.4 m
121.3558 251.9639 134.198 268.5593 153.2005 271.9473 C
153.4633 259.7593 153.6 248.5721 153.6 242 c
153.6 239.6405 153.5357 237.5092 153.3914 235.5667 C
147.0192 237.0298 141.97 240.6509 138 246.9 C
130.8 242 L
135.5875 233.9709 142.7402 228.8829 151.7422 226.9227 C
149.3116 220.3316 144.0787 217.1271 133.7 213.9 C
137.2 205 L
151.3279 209.3516 158.6952 215.2084 161.7845 226.0192 C
181.5742 226.4197 192.2 236.8526 192.2 254 c
192.2 270.29 182.1719 280.7559 162.9717 281.5462 C
162.8609 285.7548 162.7367 289.9529 162.6 294 C
152.6 294 L
152.7432 289.7625 152.8718 285.3842 152.9852 281.0201 C
137.6796 278.6437 125.2754 269.0698 118.2123 254.6185 C
118.3106 262.9977 119.2942 272.9597 121 283 C
111.8 284 L
110.05 273.7 109.0625 263.4375 109 254 c
108.9375 244.5625 109.925 235.175 111.8 226 C
120.8 227.4 L
f
0 D
182.6 254 m
182.6 241.8488 176.6238 235.5974 163.3182 234.8724 C
163.5071 237.0875 163.6 239.4539 163.6 242 c
163.6 249.0859 163.4546 260.4253 163.189 272.5316 C
176.5397 271.8448 182.6 265.6781 182.6 254 c
f
*U
*u
1 D
122.7 127.6 m
123.5037 150.7502 134.9228 166.3762 151.7485 170.377 C
151.9877 158.7197 152.1 148.1685 152.1 142 c
152.1 140.4398 152.0691 138.985 152.0008 137.6248 C
147.0468 139.1894 142.9528 142.319 139.6 147.4 C
130.8 141.4 L
135.1446 134.1137 141.7197 129.2226 149.8732 126.9908 C
147.3519 121.5364 142.2971 118.7208 132.8 115.9 C
137.1 104.9 L
151.3331 109.0961 159.0937 115.1074 162.4832 125.632 C
181.7645 126.2924 192.4 137.1749 192.4 154.2 c
192.4 170.4971 182.5031 181.246 163.9637 182.3928 C
163.8561 186.3498 163.735 190.2912 163.6 194.1 C
151.1 194.1 L
151.2448 190.0161 151.3727 185.8021 151.4848 181.5975 C
138.4439 179.0026 127.4429 170.8566 120.337 158.8112 C
120.6614 166.101 121.5782 174.4315 123 182.8 C
111.7 184.1 L
109.95 173.8 108.9625 163.4375 108.9 154 c
108.8375 144.5625 109.825 135.075 111.7 125.9 C
122.7 127.6 L
f
0 D
180.5 154.2 m
180.5 143.21 175.4972 137.5845 164.4243 136.5803 C
164.5408 138.3001 164.6 140.1019 164.6 142 c
164.6 148.8248 164.4774 159.6118 164.2323 171.238 C
175.4746 170.2901 180.5 164.7194 180.5 154.2 c
f
*U
*u
1 D
164.9557 83.2134 m
164.8511 86.9272 164.7327 90.6214 164.6 94.2 C
149.6 94.2 L
149.7466 90.2465 149.8746 86.1716 149.9858 82.1027 C
138.9841 79.3862 129.4003 72.4809 122.5582 62.5415 C
122.9968 68.7892 123.8259 75.689 125 82.6 C
111.6 84.2 L
109.85 73.9 108.8625 63.4375 108.8 54 c
108.7375 44.5625 109.725 34.975 111.6 25.8 C
124.6 27.8 L
125.6252 49.4385 135.6285 64.0856 150.2971 68.6653 C
150.5101 57.6124 150.6 47.7523 150.6 42 c
150.6 41.2678 150.5895 40.5684 150.5732 39.885 C
146.9772 41.4434 143.8672 44.0297 141.2 47.9 C
130.8 40.8 L
134.6984 34.2619 140.6409 29.6248 147.9354 27.184 C
145.3442 22.7601 140.5004 20.3271 131.9 17.9 C
137 4.8 L
151.3414 8.8472 159.4848 14.9954 163.1714 25.2712 C
181.9573 26.2105 192.6 37.5032 192.6 54.4 c
192.6 70.688 182.8488 81.6967 164.9557 83.2134 C
f
0 D
165.5132 38.3306 m
165.5704 39.5168 165.6 40.738 165.6 42 c
165.6 48.5574 165.498 58.7869 165.2747 69.9129 C
174.4098 68.7251 178.4 63.7226 178.4 54.4 c
178.4 44.6259 174.3827 39.5886 165.5132 38.3306 C
f
*U
27.3266 357.2514 m
32.4689 340.3356 37.103 323.5325 41.5 306 C
48.7 307.8 L
44.1583 325.9095 39.4265 343.0767 34.1918 360.2819 C
54.4832 368.9684 65.6822 371.2 70.9 371.2 c
77.0033 371.2 85.6 368.9355 85.6 358.5 c
85.6 347.9099 80.2119 343.2423 61.3 341.5 C
62.5 334.7 L
84.5917 336.6328 93 344.4045 93 358.5 c
93 369.9967 84.604 378.1 70.9 378.1 c
68.4558 378.1 65.5561 377.7747 62.2007 377.1088 C
60.3838 382.5327 58.3271 388.2405 56.5 393.2 C
49.7 390.7 L
51.5229 385.7102 53.3758 380.6371 55.1764 375.3976 C
48.7404 373.5794 41.0663 370.8099 32.1216 366.9999 C
29.8517 374.2795 27.4921 381.5867 25 389 C
17.9 386.7 L
20.4775 379.0325 22.9114 371.4868 25.2493 363.981 C
19.3252 361.3014 12.9136 358.2168 6 354.7 C
9 348.4 L
15.7212 351.819 21.8099 354.7447 27.3266 357.2514 C
f
27.3589 255.492 m
32.289 239.0818 36.7554 222.7248 41 205.8 C
50.6 208.2 L
46.121 226.0594 41.5032 242.8666 36.4762 259.4951 C
54.4147 267.0514 65.3597 269.6 70.6 269.6 c
76.5322 269.6 83.4 266.8897 83.4 258.2 c
83.4 248.3279 78.2621 243.9032 60.8 242.1999 C
62.4 233.4 L
84.2416 235.311 93.2 243.9181 93.2 258.2 c
93.2 269.905 84.1373 278.6 70.6 278.6 c
68.6772 278.6 66.471 278.3954 63.9901 277.9861 C
62.2004 283.4247 60.1486 289.122 58.3 294.1 C
49.4 290.8 L
51.1816 285.9232 52.992 280.9674 54.7543 275.8543 C
48.8194 274.1651 41.836 271.6672 33.7715 268.2908 C
31.5389 275.4418 29.2242 282.5884 26.8 289.8 C
17.4 286.8 L
19.9448 279.2299 22.3502 271.7543 24.6611 264.3093 C
18.8482 261.6692 12.5684 258.6429 5.8 255.2 C
9.6 246.9 L
16.0509 250.1815 21.9619 253.0295 27.3589 255.492 C
f
27.3786 153.726 m
32.1009 137.8185 36.4068 121.9211 40.5 105.6 C
52.5 108.6 L
48.0901 126.1835 43.5789 142.6255 38.7491 158.7042 C
54.5563 165.2659 65.0947 168 70.3 168 c
76.0612 168 81.2 164.844 81.2 157.9 c
81.2 148.746 76.3123 144.5641 60.3 142.9 C
62.3 132.1 L
83.8916 133.9891 93.4 143.4316 93.4 157.9 c
93.4 169.8133 83.6706 179.1 70.3 179.1 c
68.9401 179.1 67.4387 178.9968 65.8027 178.7936 C
64.0345 184.2679 61.978 189.982 60.1 195 C
49.1 190.9 L
50.8404 186.1362 52.6085 181.2978 54.3322 176.3108 C
48.9095 174.7556 42.6171 172.5276 35.4202 169.5696 C
33.2244 176.5945 30.9587 183.5835 28.6 190.6 C
16.9 186.9 L
19.4123 179.4264 21.7897 172.0212 24.0738 164.6375 C
18.3725 162.0377 12.2233 159.0691 5.6 155.7 C
10.2 145.4 L
16.3721 148.5395 22.0958 151.3036 27.3786 153.726 C
f
70 79.6 m
69.256 79.6 68.4695 79.5685 67.644 79.5082 C
65.8912 85.0467 63.8182 90.8134 61.9 95.9 C
48.8 91 L
50.4991 86.3491 52.2252 81.6287 53.9102 76.7671 C
49.0129 75.352 43.413 73.3918 37.0723 70.8372 C
34.9128 77.7381 32.6951 84.5727 30.4 91.4 C
16.4 87 L
18.8802 79.6219 21.2297 72.2877 23.4872 64.9658 C
17.8979 62.4069 11.878 59.4952 5.4 56.2 C
10.8 43.9 L
16.6809 46.8915 22.2185 49.574 27.3925 51.9607 C
31.9122 36.5515 36.0565 21.1241 40 5.4 C
54.4 9 L
50.0651 26.2848 45.6641 42.3611 41.0213 57.916 C
54.9026 63.604 64.8931 66.4 70 66.4 c
75.5902 66.4 79 62.7983 79 57.6 c
79 49.164 74.3625 45.225 59.8 43.6 C
62.2 30.8 L
83.5415 32.6672 93.6 42.9452 93.6 57.6 c
93.6 69.7217 83.2039 79.6 70 79.6 c
f
U
u
U
u
U
u
U
u
U
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
