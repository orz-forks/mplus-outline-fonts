%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(TM) 7.0
%%For: (coz) (underforest)
%%Title: (244A.eps)
%%CreationDate: (2/23/04) (2:26 AM)
%%BoundingBox: 0 0 500 500
%%HiResBoundingBox: 0 0 500 500
%%DocumentProcessColors: Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_ColorImage_AI6 1.1 0
%%+ procset Adobe_Illustrator_AI5 1.2 0
%%+ procset Adobe_cshow 2.0 8
%AI5_FileFormat 3
%AI3_ColorUsage: Black&White
%AI3_IncludePlacedImages
%AI7_ImageSettings: 1
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 8.5 0 0 0 0 0 0 0 0 -1 -1
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () 
%AI3_TemplateBox: 244.5 256.5 244.5 256.5
%AI3_TileBox: -41.5 -119.5 534.5 642.5
%AI3_DocumentPreview: Macintosh_ColorPic
%AI5_ArtSize: 592 840
%AI5_RulerUnits: 2
%AI5_ArtFlags: 1 0 0 1 0 0 1 1 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI5_OpenToView: -139.5 520.5 1 794 556 25 0 0 3 40 0 0
%AI5_OpenViewLayers: 5
%%PageOrigin:-41.5 -119.5
%%AI3_PaperRect:-10 808 585 -34
%%AI3_Margin:10 -43 -9 34
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 25 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			0
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			1
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop 
			0 eq
			{
				pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				pop
				3
				{
					1 exch sub
					3 index mul 
					1 exch sub
					3 1 roll
				} repeat
				4 -1 roll pop
				setrgbcolor
			} ifelse
		}
		def
	} if
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	level2?
	{
		gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
		add add add 4 eq
	}
	{
		1 0 0 0 testCMYKColorThrough
		0 1 0 0 testCMYKColorThrough
		0 0 1 0 testCMYKColorThrough
		0 0 0 1 testCMYKColorThrough
		and and and
	} ifelse
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.1 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 24 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize
{ 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6
	{
		dup type /arraytype eq
		{
			dup xcheck
			{
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not
{
	/Adobe_ColorImage_AI6_Vars 15 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/channelcount 0 def
	/sourcecount 0 def
	/sourcearray 4 array def
	/plateindex -1 def
	/XIMask 0 def
	/XIBinary 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIBuffer null def
	/XIDataProc null def
	/XIVersion 6 def
end
/WalkRGBString null def
/WalkCMYKString null def
/StuffRGBIntoGrayString null def
/RGBToGrayImageProc null def
/StuffCMYKIntoGrayString null def
/CMYKToGrayImageProc null def
/ColorImageCompositeEmulator null def
/SeparateCMYKImageProc null def
/FourEqual null def
/TestPlateIndex null def
currentdict /_colorimage known not
{
	/colorimage where
	{
		/colorimage get /_colorimage exch def
	}
	{
		/_colorimage null def
	} ifelse
} if
/_currenttransfer systemdict /currenttransfer get def
/colorimage null def
/XI null def
/WalkRGBString
{
	0 3 index
	dup length 1 sub 0 3 3 -1 roll
	{
		3 getinterval { } forall
		5 index exec
		3 index
	} for
	
	 5 { pop } repeat
} def
/WalkCMYKString
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll
	{
		4 getinterval { } forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/StuffRGBIntoGrayString
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/RGBToGrayImageProc
{	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		dup length 3 idiv string
		dup 3 1 roll 
		
		/StuffRGBIntoGrayString load exch
		WalkRGBString
 end
} def
/StuffCMYKIntoGrayString
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/CMYKToGrayImageProc
{	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		dup length 4 idiv string
		dup 3 1 roll 
		
		/StuffCMYKIntoGrayString load exch
		WalkCMYKString
 end
} def
/ColorImageCompositeEmulator
{
	pop true eq
	{
		Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat
	}
	{
		Adobe_ColorImage_AI6_Vars /channelcount get 1 ne
		{
			Adobe_ColorImage_AI6_Vars begin
				sourcearray 0 3 -1 roll put
			
				channelcount 3 eq 
				{ 
					/RGBToGrayImageProc 
				}
				{ 
					/CMYKToGrayImageProc
				} ifelse
				load
		 end
		} if
		image
	} ifelse
} def
/SeparateCMYKImageProc
{	
	Adobe_ColorImage_AI6_Vars begin
		sourcecount 0 ne
		{
			sourcearray plateindex get exec
		}
		{			
			sourcearray 0 get exec
			
			dup length 4 idiv string
			
			0 2 index
			
			plateindex 4 2 index length 1 sub
			{
				get 255 exch sub
				
				3 copy put pop 1 add
				
				2 index
			} for
			pop pop exch pop
		} ifelse
 end
} def
	
/FourEqual
{
	4 index ne
	{
		pop pop pop false
	}
	{
		4 index ne
		{
			pop pop false
		}
		{
			4 index ne
			{
				pop false
			}
			{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/TestPlateIndex
{
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where
		{
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 FourEqual 
			{ 
				/plateindex 0 def
			}
			{
				0 1 0 0 FourEqual
				{ 
					/plateindex 1 def
				}
				{
					0 0 1 0 FourEqual
					{
						/plateindex 2 def
					}
					{
						0 0 0 1 FourEqual
						{ 
							/plateindex 3 def
						}
						{
							0 0 0 0 FourEqual
							{
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/colorimage
{
	Adobe_ColorImage_AI6_Vars begin
		/channelcount 1 index def
		/sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def
		4 sourcecount add index dup 
		8 eq exch 1 eq or not
 end
	
	{
		/_colorimage load null ne
		{
			_colorimage
		}
		{
			Adobe_ColorImage_AI6_Vars /sourcecount get
			7 add { pop } repeat
		} ifelse
	}
	{
		dup 3 eq
		TestPlateIndex
		dup -1 eq exch 5 eq or or
		{
			/_colorimage load null eq
			{
				ColorImageCompositeEmulator
			}
			{
				dup 1 eq
				{
					pop pop image
				}
				{
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
					{
						gsave
						
						0 _currenttransfer exec
						1 _currenttransfer exec
						eq
						{ 0 _currenttransfer exec 0.5 lt }
						{ 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse
						
						{ { pop 0 } } { { pop 1 } } ifelse
						systemdict /settransfer get exec
					} if
					
					_colorimage
					
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
					{
						grestore
					} if
				} ifelse
			} ifelse
		}
		{
			dup 1 eq
			{
				pop pop
				image
			}
			{
				pop pop
				Adobe_ColorImage_AI6_Vars begin
					sourcecount -1 0
					{			
						exch sourcearray 3 1 roll put
					} for
					/SeparateCMYKImageProc load
			 end
				systemdict /image get exec
			} ifelse
		} ifelse
	} ifelse
} def
/XG
{
	pop pop
} def
/XF
{
	13 {pop} repeat
} def
/Xh
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIMask exch 0 ne def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		XIMask
		{
			/_lp /null ddef
			_fc
			/_lp /imagemask ddef
		}
		if
		/XIVersion 7 def
 end
} def
/XH
{
	Adobe_ColorImage_AI6_Vars begin
		/XIVersion 6 def
		grestore
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIMask exch 0 ne def
		/XIBinary exch 0 ne def
		pop
		pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq
		{
			XIImageWidth 8 div ceiling cvi
		}
		{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIBuffer exch string def
		XIBinary
		{
			/XIDataProc { currentfile XIBuffer readstring pop } def
			XIVersion 6 le
			{
				currentfile 128 string readline pop pop
			}
			if
		}
		{
			/XIDataProc { currentfile XIBuffer readhexstring pop } def
		} ifelse
		
		XIVersion 6 le
		{
			0 0 moveto
			XIImageMatrix concat
			XIImageWidth XIImageHeight scale
			XIMask
			{
				/_lp /null ddef
				_fc
				/_lp /imagemask ddef
			} if
		} if
		
		XIMask
		{
			XIImageWidth XIImageHeight
			false
			[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
			/XIDataProc load
			imagemask
		}
		{
			XIImageWidth XIImageHeight
			XIBitsPerPixel
			[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
			/XIDataProc load
			
			XIChannelCount 1 eq
			{
				gsave
				0 setgray
				image
				grestore
			}
			{
				false
				XIChannelCount
				colorimage
			} ifelse
		} ifelse
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 7.0 Full Prolog)
%%Version: 1.2 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 107 dict dup begin
put
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XA
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/_rgbtocmyk
{
3
	{
	1 exch sub 3 1 roll
	} repeat
3 copy 1 4 1 roll
3
	{
	3 index 2 copy gt
		{
		exch
		} if
	pop 4 1 roll
	} repeat
pop pop pop
4 1 roll
3
	{
	3 index sub
	3 1 roll
	} repeat
4 -1 roll
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq
	{
		findcmykcustomcolor
	}
	{
		/findrgbcustomcolor where not {
			4 1 roll _rgbtocmyk
			5 -1 roll
			findcmykcustomcolor
		}
		{
			pop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq
	{
		findcmykcustomcolor
	}
	{
		/findrgbcustomcolor where not {
			4 1 roll _rgbtocmyk
			5 -1 roll
			findcmykcustomcolor
		}
		{
			pop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%EndProlog
%%BeginSetup
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_BeginPalette
0 0 Pb
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 0 1 1 0 0 3 79 79 255 Lb
(glyphs) Ln
0 A
u
1 Ap
800 Ar
0 J 0 j 1 w 4 M []0 d
%AI3_Note:
0 D
0 XR
100 400 m
100 500 L
0 500 L
0 400 L
100 400 L
n
500 400 m
500 500 L
400 500 L
400 400 L
500 400 L
n
200 400 m
200 500 L
100 500 L
100 400 L
200 400 L
n
300 400 m
300 500 L
200 500 L
200 400 L
300 400 L
n
400 400 m
400 500 L
300 500 L
300 400 L
400 400 L
n
100 300 m
100 400 L
0 400 L
0 300 L
100 300 L
n
500 300 m
500 400 L
400 400 L
400 300 L
500 300 L
n
200 300 m
200 400 L
100 400 L
100 300 L
200 300 L
n
300 300 m
300 400 L
200 400 L
200 300 L
300 300 L
n
400 300 m
400 400 L
300 400 L
300 300 L
400 300 L
n
100 200 m
100 300 L
0 300 L
0 200 L
100 200 L
n
500 200 m
500 300 L
400 300 L
400 200 L
500 200 L
n
200 200 m
200 300 L
100 300 L
100 200 L
200 200 L
n
300 200 m
300 300 L
200 300 L
200 200 L
300 200 L
n
400 200 m
400 300 L
300 300 L
300 200 L
400 200 L
n
100 100 m
100 200 L
0 200 L
0 100 L
100 100 L
n
500 100 m
500 200 L
400 200 L
400 100 L
500 100 L
n
200 100 m
200 200 L
100 200 L
100 100 L
200 100 L
n
300 100 m
300 200 L
200 200 L
200 100 L
300 100 L
n
400 100 m
400 200 L
300 200 L
300 100 L
400 100 L
n
100 0 m
100 100 L
0 100 L
0 0 L
100 0 L
n
500 0 m
500 100 L
400 100 L
400 0 L
500 0 L
n
200 0 m
200 100 L
100 100 L
100 0 L
200 0 L
n
300 0 m
300 100 L
200 100 L
200 0 L
300 0 L
n
400 0 m
400 100 L
300 100 L
300 0 L
400 0 L
n
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
0 Ap
0 O
0 g
242.5 425.8 m
234.9643 445.9628 228.7565 467.1181 223.7 489.8 C
219 488.6 L
224.1651 465.431 230.4686 444.3512 238 424.2 C
242.5 425.8 L
f
296 416.2 m
286.2697 433.3203 281.0953 436.6 270.6 436.6 c
261.0703 436.6 254 430.0966 254 422.2 c
254 413.1041 260.0369 407.4 269.6 407.4 c
282.7534 407.4 292.8 418.8476 292.8 441.8 c
292.8 463.1671 276.1968 478 253.4 478 c
226.5239 478 207.2 459.7217 207.2 435.6 c
207.2 420.1686 215.033 411.2 224.8 411.2 c
238.0942 411.2 258.156 437.9739 270.4 494.4 C
265.6 495.4 L
254.027 442.066 235.0954 416 224.8 416 c
217.6438 416 212.2 423.1546 212.2 435.6 c
212.2 457.0161 228.9113 473.2 253.4 473.2 c
273.7263 473.2 287.8 460.5813 287.8 441.8 c
287.8 421.5988 280.1213 412.2 269.6 412.2 c
262.8998 412.2 259 415.4993 259 422.2 c
259 427.2498 263.6498 431.8 270.6 431.8 c
279.1188 431.8 282.9398 429.3893 291.8 413.8 C
296 416.2 L
f
U
u
236.7 325.4 m
229.1029 345.7269 223.3226 365.5214 218.2 388.5 C
225 390.1 L
229.9779 367.7703 235.599 348.0375 243.2 327.7 C
236.7 325.4 L
f
235.4 226.6 m
227.7373 247.1026 222.4802 265.6119 217.4 288.4 C
226.3 290.4 L
231.1994 268.4226 236.2337 250.1121 243.8999 229.6 C
235.4 226.6 L
f
234.1 127.8 m
226.3717 148.4783 221.6377 165.7023 216.6 188.3 C
227.6 190.7 L
232.4208 169.0748 236.8685 152.1868 244.5999 131.5 C
234.1 127.8 L
f
U
u
263.9 395.3 m
252.7509 343.9198 234.6008 318.2 224.8 318.2 c
218.812 318.2 214.1 324.5382 214.1 336 c
214.1 356.1348 229.8345 371.6 253.4 371.6 c
272.8858 371.6 285.8 359.7284 285.8 342.2 c
285.8 323.1342 278.7317 313.9 269.3 313.9 c
263.5248 313.9 260.1 316.864 260.1 322.5 c
260.1 326.9671 264.1019 331 270.3 331 c
278.1424 331 282.1633 328.296 290.8 313.1 C
296.3 316.7 L
286.5697 333.8203 280.7953 337.5 270.3 337.5 c
260.7564 337.5 253.2 330.5771 253.2 322.5 c
253.2 313.3625 259.5147 307.3 269.3 307.3 c
282.5366 307.3 293.1 319.4978 293.1 342.2 c
293.1 363.4004 276.4744 378.4 253.4 378.4 c
226.3572 378.4 206.8 359.9828 206.8 336 c
206.8 320.1048 214.7247 311.1 224.8 311.1 c
238.4187 311.1 258.5982 337.3074 270.9 394 C
263.9 395.3 L
f
262.2 295.2 m
251.4749 245.7736 234.1062 220.4 224.8 220.4 c
219.9801 220.4 216 225.9218 216 236.4 c
216 255.2536 230.7576 270 253.4 270 c
272.0453 270 283.8 258.8755 283.8 242.6 c
283.8 224.6695 277.3421 215.6 269 215.6 c
264.1498 215.6 261.2 218.2288 261.2 222.8 c
261.2 226.6843 264.5541 230.2 270 230.2 c
277.166 230.2 281.3869 227.2027 289.8 212.4 C
296.6 217.2 L
286.8697 234.3203 280.4953 238.4 270 238.4 c
260.4425 238.4 252.4 231.0577 252.4 222.8 c
252.4 213.6209 258.9924 207.2 269 207.2 c
282.3198 207.2 293.4 220.148 293.4 242.6 c
293.4 263.6337 276.7521 278.8 253.4 278.8 c
226.1905 278.8 206.4 260.2439 206.4 236.4 c
206.4 220.041 214.4163 211 224.8 211 c
238.7432 211 259.0404 236.6409 271.4 293.6 C
262.2 295.2 L
f
260.5 195.1 m
250.1988 147.6274 233.6115 122.6 224.8 122.6 c
221.1483 122.6 217.9 127.3055 217.9 136.8 c
217.9 154.3723 231.6808 168.4 253.4 168.4 c
271.2048 168.4 281.8 158.0226 281.8 143 c
281.8 126.2049 275.9526 117.3 268.7 117.3 c
264.7748 117.3 262.3 119.5935 262.3 123.1 c
262.3 126.4016 265.0062 129.4 269.7 129.4 c
276.1896 129.4 280.6105 126.1094 288.8 111.7 C
296.9 117.7 L
287.1697 134.8203 280.1953 139.3 269.7 139.3 c
260.1285 139.3 251.6 131.5383 251.6 123.1 c
251.6 113.8793 258.4702 107.1 268.7 107.1 c
282.1031 107.1 293.7 120.7983 293.7 143 c
293.7 163.867 277.0297 179.2 253.4 179.2 c
226.0239 179.2 206 160.505 206 136.8 c
206 119.9772 214.108 110.9 224.8 110.9 c
239.0677 110.9 259.4825 135.9745 271.9 193.2 C
260.5 195.1 L
f
U
u
232.8 29 m
225.006 49.854 220.7953 65.7928 215.8 88.2 C
228.9 91 L
233.6423 69.7271 237.5032 54.2615 245.2999 33.4 C
232.8 29 L
f
258.8 95 m
248.9228 49.4812 233.1169 24.8 224.8 24.8 c
222.3165 24.8 219.8 28.6891 219.8 37.2 c
219.8 53.4911 232.604 66.8 253.4 66.8 c
270.3643 66.8 279.8 57.1697 279.8 43.4 c
279.8 27.7403 274.563 19 268.4 19 c
265.3998 19 263.4 20.9583 263.4 23.4 c
263.4 26.1189 265.4583 28.6 269.4 28.6 c
275.2132 28.6 279.834 25.0161 287.8 11 C
297.2 18.2 L
287.4697 35.3203 279.8953 40.2 269.4 40.2 c
259.8146 40.2 250.8 32.0189 250.8 23.4 c
250.8 14.1378 257.948 7 268.4 7 c
281.8863 7 294 21.4485 294 43.4 c
294 64.1003 277.3074 79.6 253.4 79.6 c
225.8572 79.6 205.6 60.7661 205.6 37.2 c
205.6 19.9135 213.7996 10.8 224.8 10.8 c
239.3922 10.8 259.9247 35.308 272.4 92.8 C
258.8 95 L
f
U
u
396.2 20.7999 m
386.091 38.5867 376.3961 45 365.8 45 c
353.7589 45 345.4 37.3079 345.4 27 c
345.4 16.2155 354.0592 8.4 364.8 8.4 c
378.8978 8.4 392.2 21.4592 392.2 44.2 c
392.2 73.611 382.0505 84 361.8 84 c
349.7763 84 331.6424 70.3347 304.8 32 C
315.2 23.8 L
338.6618 57.3069 354.3903 70 361.8 70 c
374.2157 70 377.8 65.5331 377.8 44.2 c
377.8 28.1647 372.2184 20 364.8 20 c
361.3777 20 358.4 22.8663 358.4 27 c
358.4 30.7456 361.47 33.4 365.8 33.4 c
371.7294 33.4 376.5536 30.1247 386.4 12.8 C
396.2 20.7999 L
f
324.8 5.8 m
338.6 5.8 L
338.6 94.2 L
324.8 94.2 L
324.8 77.8 L
305.8 77.8 L
305.8 64.6 L
324.8 64.6 L
324.8 5.8 L
f
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
U
u
185.9 478 m
185.9 482.8 L
144.1 482.8 L
144.1 478 L
185.9 478 L
f
153.8 444.7 m
147.3829 440.2982 143.2 433.9708 143.2 430.8 c
143.2 423.577 150.9304 418 167 418 c
174.375 418 180.0753 418.8042 187.6 420.6 C
188.6 415.8 L
180.5103 413.8694 174.6043 413.2 167 413.2 c
147.967 413.2 138.2 420.5238 138.2 430.8 c
138.2 435.6971 143.0332 443.1352 151 448.6 C
153.8 444.7 L
f
123 409.2 m
119.2485 423.268 117.6 436.0862 117.6 450 c
117.6 463.9138 119.2485 476.732 123 490.8 C
118.2 491.8 L
114.6 478.3 112.6 465.5 112.6 450 c
112.6 434.5 114.6 421.7 118.2 408.2 C
123 409.2 L
f
U
u
117.9 308.1 m
114.3 321.6 112.3 334.5 112.3 350 c
112.3 365.5 114.3 378.4 117.9 391.9 C
125 390.8 L
121.2831 376.862 119.55 363.7771 119.55 350 c
119.55 336.2229 121.2831 323.138 125 309.2 C
117.9 308.1 L
f
117.6 208 m
114 221.5 112 234.5 112 250 c
112 265.5 114 278.5 117.6 292 C
127 290.8 L
123.3178 276.9919 121.5 263.6404 121.5 250 c
121.5 236.3596 123.3178 223.008 127 209.2 C
117.6 208 L
f
117.3 107.9 m
113.7 121.4 111.7 134.5 111.7 150 c
111.7 165.5 113.7 178.6 117.3 192.1 C
129 190.8 L
125.3524 177.1219 123.45 163.5037 123.45 150 c
123.45 136.4963 125.3524 122.8781 129 109.2 C
117.3 107.9 L
f
U
u
186.2 376.2 m
186.2 383.2 L
144.2 383.2 L
144.2 376.2 L
186.2 376.2 L
f
186.5 274.4 m
186.5 283.6 L
144.3 283.6 L
144.3 274.4 L
186.5 274.4 L
f
186.8 172.6 m
186.8 184 L
144.4 184 L
144.4 172.6 L
186.8 172.6 L
f
U
u
145.45 331.2 m
145.45 324.6203 152.1539 319.9 167.2 319.9 c
174.4497 319.9 180.2933 320.7002 187.625 322.45 C
188.9 315.5 L
180.8103 313.5694 174.8043 312.9 167.2 312.9 c
147.7504 312.9 138.1 320.3156 138.1 331.1 c
138.1 336.4424 142.9915 344.1066 151 349.6 C
155.3 344.375 L
149.2833 340.2478 145.45 334.3337 145.45 331.2 c
f
147.7 231.6 m
147.7 225.6636 153.3774 221.8 167.4 221.8 c
174.5244 221.8 180.5112 222.5963 187.65 224.3 C
189.2 215.2 L
181.1103 213.2694 175.0043 212.6 167.4 212.6 c
147.5337 212.6 138 220.1075 138 231.4 c
138 237.1877 142.9499 245.078 151 250.5999 C
156.8 244.0499 L
151.1837 240.1975 147.7 234.6967 147.7 231.6 c
f
149.95 132 m
149.95 126.707 154.6009 123.7 167.6 123.7 c
174.5991 123.7 180.7292 124.4923 187.675 126.15 C
189.5 114.9 L
181.4103 112.9694 175.2043 112.3 167.6 112.3 c
147.3171 112.3 137.9 119.8993 137.9 131.7 c
137.9 137.933 142.9082 146.0494 151 151.5999 C
158.3 143.7249 L
153.0841 140.1472 149.95 135.0596 149.95 132 c
f
U
u
187.1 70.8 m
187.1 84.4 L
144.5 84.4 L
144.5 70.8 L
187.1 70.8 L
f
152.2 32.4 m
152.2 27.7503 155.8245 25.6 167.8 25.6 c
174.6739 25.6 180.9472 26.3884 187.7 28 C
189.8 14.6 L
181.7103 12.6694 175.4043 12 167.8 12 c
147.1005 12 137.8 19.6912 137.8 32 c
137.8 38.6783 142.8666 47.0208 151 52.5999 C
159.8 43.3999 L
154.9846 40.0969 152.2 35.4226 152.2 32.4 c
f
125.4 50 m
125.4 36.633 127.3871 22.7481 131 9.2 C
117 7.8 L
113.4 21.3 111.4 34.5 111.4 50 c
111.4 65.5 113.4 78.7 117 92.2 C
131 90.8 L
127.3871 77.2519 125.4 63.367 125.4 50 c
f
U
u
U
u
U
u
U
u
U
u
U
u
U
u
66 478.1 m
75.6414 475.4069 83.412 472.4892 92.2 468.1 C
94.4 472.4 L
85.4589 476.8656 77.729 479.8706 67.6 482.7 C
66 478.1 L
f
88.2 416.2 m
80.9457 427.4954 67.4096 435 54.2 435 c
44.7544 435 39.4 430.1231 39.4 423 c
39.4 415.7648 44.7809 411 54.2 411 c
63.9077 411 69.8 416.8631 69.8 428 c
69.8 460.2 L
74.8 460.2 L
74.8 428 l
74.8 414.2678 66.6435 406.2 54.2 406.2 c
42.1322 406.2 34.4 413.0886 34.4 423 c
34.4 432.6345 42.0212 439.8 54.2 439.8 c
69.0141 439.8 83.9951 431.7754 92.2 419 C
88.2 416.2 L
f
31.7 492.9 m
26.5212 466.672 20.3374 445.5041 11.4 422.2 C
6.8 424 L
15.6333 447.0333 21.6333 467.6333 26.8 493.8 C
31.7 492.9 L
f
52.4 479.2 m
11.8 479.2 L
11.8 474.4 L
52.4 474.4 L
52.4 479.2 L
f
U
u
33.5 392.9 m
28.2587 366.3555 21.9684 344.5851 13 321.2 C
6.3 323.9 L
15.1333 346.9333 21.1333 367.7333 26.3 393.9 C
33.5 392.9 L
f
35.3 292.9 m
29.9962 266.039 23.5994 243.666 14.6 220.2 C
5.8 223.8 L
14.6333 246.8333 20.6333 267.8333 25.8 294 C
35.3 292.9 L
f
37.1 192.9 m
31.7337 165.7226 25.2304 142.747 16.2 119.2 C
5.3 123.7 L
14.1333 146.7333 20.1333 167.9333 25.3 194.1 C
37.1 192.9 L
f
U
u
52.3 379.9 m
11.3 379.9 L
11.3 373.1 L
52.3 373.1 L
52.3 379.9 L
f
52.2 280.6 m
10.8 280.6 L
10.8 271.8 L
52.2 271.8 L
52.2 280.6 L
f
52.1 181.3 m
10.3 181.3 L
10.3 170.5 L
52.1 170.5 L
52.1 181.3 L
f
U
u
67.4 383.4 m
77.529 380.5706 85.5589 377.5656 94.5 373.1 C
91.4 366.9 L
82.684 371.1513 74.721 374.1125 65.1 376.8 C
67.4 383.4 L
f
67.2 284.1 m
77.329 281.2706 85.6589 278.2656 94.6 273.8 C
90.6 265.7 L
81.956 269.8133 73.8006 272.8182 64.2 275.5 C
67.2 284.1 L
f
67 184.8 m
77.129 181.9706 85.7589 178.9656 94.7 174.5 C
89.8 164.5 L
81.228 168.4754 72.8802 171.5238 63.3 174.2 C
67 184.8 L
f
U
u
86.6 316.4 m
79.5785 327.3329 66.5035 334.7 54 334.7 c
45.5771 334.7 40.7 330.1619 40.7 323.7 c
40.7 317.1284 45.6529 312.7 54 312.7 c
62.8277 312.7 68.1 317.9378 68.1 327.9 c
68.1 360.2 L
75.4 360.2 L
75.4 327.9 l
75.4 314.4179 66.96 306.1 54 306.1 c
41.7071 306.1 33.5 313.4387 33.5 323.7 c
33.5 333.7261 41.6795 341.3 54 341.3 c
68.8706 341.3 84.1218 333.0337 92.3 320.3 C
86.6 316.4 L
f
85 216.6 m
78.2113 227.1703 65.5973 234.4 53.8 234.4 c
46.3999 234.4 42 230.2007 42 224.4 c
42 218.4921 46.525 214.4 53.8 214.4 c
61.7478 214.4 66.4 219.0124 66.4 227.8 c
66.4 260.2 L
76 260.2 L
76 227.8 l
76 214.568 67.2766 206 53.8 206 c
41.2821 206 32.6 213.7888 32.6 224.4 c
32.6 234.8178 41.3378 242.8 53.8 242.8 c
68.7272 242.8 84.2486 234.2921 92.4 221.6 C
85 216.6 L
f
83.4 116.8 m
76.8441 127.0078 64.6912 134.1 53.6 134.1 c
47.2226 134.1 43.3 130.2395 43.3 125.1 c
43.3 119.8557 47.3971 116.1 53.6 116.1 c
60.6678 116.1 64.7 120.0871 64.7 127.7 c
64.7 160.2 L
76.6 160.2 L
76.6 127.7 l
76.6 114.7181 67.5932 105.9 53.6 105.9 c
40.8571 105.9 31.7 114.1389 31.7 125.1 c
31.7 135.9095 40.9961 144.3 53.6 144.3 c
68.5837 144.3 84.3753 135.5504 92.5 122.9 C
83.4 116.8 L
f
U
u
66.8 85.5 m
76.929 82.6706 85.8589 79.6656 94.8 75.2 C
89 63.3 L
80.5 67.1375 71.9599 70.2295 62.4 72.9 C
66.8 85.5 L
f
81.8 17 m
75.4769 26.8453 63.7851 33.8 53.4 33.8 c
48.0454 33.8 44.6 30.2783 44.6 25.8 c
44.6 21.2194 48.2692 17.8 53.4 17.8 c
59.5879 17.8 63 21.1618 63 27.6 c
63 60.2 L
77.2 60.2 L
77.2 27.6 l
77.2 14.8682 67.9098 5.8 53.4 5.8 c
40.4321 5.8 30.8 14.489 30.8 25.8 c
30.8 37.0012 40.6545 45.8 53.4 45.8 c
68.4403 45.8 84.5021 36.8088 92.6 24.2 C
81.8 17 L
f
38.9 92.9 m
33.4712 65.4061 26.8614 41.828 17.8 18.2 C
4.8 23.6 L
13.6333 46.6333 19.6333 68.0333 24.8 94.2 C
38.9 92.9 L
f
52 82 m
9.8 82 L
9.8 69.2 L
52 69.2 L
52 82 L
f
U
u
325.6 105.9 m
337.2 105.9 L
337.2 194.1 L
325.6 194.1 L
325.6 177.4 L
305.9 177.4 L
305.9 166.3 L
325.6 166.3 L
325.6 105.9 L
f
326.4 206 m
335.8 206 L
335.8 294 L
326.4 294 L
326.4 277 L
306 277 L
306 268 L
326.4 268 L
326.4 206 L
f
327.2 306.1 m
334.4 306.1 L
334.4 393.9 L
327.2 393.9 L
327.2 376.6 L
306.1 376.6 L
306.1 369.7 L
327.2 369.7 L
327.2 306.1 L
f
U
u
395.9 120.0999 m
385.8778 137.7339 377.1204 143.5 366.5 143.5 c
354.8228 143.5 346.8 136.144 346.8 126.3 c
346.8 115.9515 355.0675 108.5 365.5 108.5 c
379.57 108.5 392.1 121.1814 392.1 144.2 c
392.1 173.3194 382.1587 183.5 362.1 183.5 c
349.5192 183.5 331.9466 170.4264 304.9 131.8 C
313.7 124.95 L
337.8545 159.4461 353.5085 171.8 362.1 171.8 c
375.5973 171.8 380.05 166.6086 380.05 144.2 c
380.05 126.8254 373.8507 118.4 365.5 118.4 c
361.1963 118.4 357.8 121.6394 357.8 126.3 c
357.8 130.5212 361.2551 133.6 366.5 133.6 c
373.1634 133.6 377.8788 130.4284 387.5 113.5 C
395.9 120.0999 L
f
395.6 219.3999 m
385.6647 236.8811 377.8448 242 367.2 242 c
355.8867 242 348.2 234.9801 348.2 225.6 c
348.2 215.6876 356.0758 208.6 366.2 208.6 c
380.2423 208.6 392 220.9036 392 244.2 c
392 273.0278 382.267 283 362.4 283 c
349.2621 283 332.2509 270.5181 305 231.6 C
312.2 226.1 L
337.0472 261.5853 352.6267 273.6 362.4 273.6 c
376.979 273.6 382.3 267.6841 382.3 244.2 c
382.3 225.486 375.483 216.8 366.2 216.8 c
361.015 216.8 357.2 220.4126 357.2 225.6 c
357.2 230.2968 361.0402 233.8 367.2 233.8 c
374.5974 233.8 379.204 230.7322 388.6 214.2 C
395.6 219.3999 L
f
395.3 318.7 m
385.4515 336.0284 378.5691 340.5 367.9 340.5 c
356.9507 340.5 349.6 333.8162 349.6 324.9 c
349.6 315.4236 357.0842 308.7 366.9 308.7 c
380.9145 308.7 391.9 320.6258 391.9 344.2 c
391.9 372.7362 382.3752 382.5 362.7 382.5 c
349.005 382.5 332.5551 370.6099 305.1 331.4 C
310.7 327.25 L
336.2399 363.7246 351.7449 375.4 362.7 375.4 c
378.3606 375.4 384.55 368.7596 384.55 344.2 c
384.55 324.1467 377.1152 315.2 366.9 315.2 c
360.8336 315.2 356.6 319.1857 356.6 324.9 c
356.6 330.0724 360.8254 334 367.9 334 c
376.0314 334 380.5292 331.0359 389.7 314.9 C
395.3 318.7 L
f
U
u
395 418 m
385.2383 435.1756 379.2935 439 368.6 439 c
358.0146 439 351 432.6523 351 424.2 c
351 415.1597 358.0925 408.8 367.6 408.8 c
381.5868 408.8 391.8 420.348 391.8 444.2 c
391.8 472.4446 382.4835 482 363 482 c
348.7479 482 332.8594 470.7016 305.2 431.2 C
309.2 428.4 L
335.4326 465.8638 350.8631 477.2 363 477.2 c
379.7422 477.2 386.8 469.8351 386.8 444.2 c
386.8 422.8074 378.7475 413.6 367.6 413.6 c
360.6523 413.6 356 417.9589 356 424.2 c
356 429.848 360.6105 434.2 368.6 434.2 c
377.4654 434.2 381.8544 431.3397 390.8 415.6 C
395 418 L
f
328 406.2 m
333 406.2 L
333 493.8 L
328 493.8 L
328 476.2 L
306.2 476.2 L
306.2 471.4 L
328 471.4 L
328 406.2 L
f
U
447.8 485 m
443.0888 431.1516 435.1613 418 426.6 418 c
419.3083 418 411.6 428.4336 411.6 445.2 c
411.6 467.5656 428.1216 483.8 454 483.8 c
473.4374 483.8 488.4 469.0468 488.4 450 c
488.4 428.7946 476.5771 415.2328 460.2 413.8 C
461 409 L
479.8585 410.6499 493.4 426.5683 493.4 450 c
493.4 471.6671 476.3316 488.6 454 488.6 c
425.6115 488.6 406.6 470.6222 406.6 445.2 c
406.6 425.403 416.5324 413 426.6 413 c
438.6692 413 448.0044 427.9002 453 485 C
447.8 485 L
f
u
454.85 385.1 m
449.912 328.6588 440.3196 312.8 427 312.8 c
416.2435 312.8 406.4 324.8446 406.4 345.2 c
406.4 370.4832 425.5282 388.8 454 388.8 c
476.3872 388.8 493.6 371.6671 493.6 350 c
493.6 326.0888 480.2473 310.6102 460.7 308.9 C
459.5 315.8 L
475.4884 317.3115 486.2 329.7259 486.2 350 c
486.2 368.0292 472.3503 382 454 382 c
429.4008 382 413.8 366.5363 413.8 345.2 c
413.8 329.5326 420.7162 320.1 427 320.1 c
434.6047 320.1 442.6132 335.2586 447 385.4 C
454.85 385.1 L
f
456.7 285.2 m
451.8197 229.4175 441.9701 212.6 427.4 212.6 c
415.9546 212.6 406.2 224.2862 406.2 245.2 c
406.2 270.3443 425.4449 289 454 289 c
476.4427 289 493.8 271.6671 493.8 250 c
493.8 225.6094 480.6361 210.5705 460.4 208.8 C
458.8 217.8 L
474.3996 219.3902 484 230.6572 484 250 c
484 267.0116 471.2633 280.2 454 280.2 c
430.6799 280.2 416 265.5071 416 245.2 c
416 230.6316 422.124 222.2 427.4 222.2 c
434.0481 222.2 442.1375 239.3656 446.2 285.8 C
456.7 285.2 L
f
458.55 185.3 m
453.7273 130.1762 443.6205 112.4 427.8 112.4 c
415.6658 112.4 406 123.7278 406 145.2 c
406 170.2053 425.3615 189.2 454 189.2 c
476.4982 189.2 494 171.6671 494 150 c
494 125.1299 481.025 110.5308 460.1 108.7 C
458.1 119.8 L
473.3108 121.4689 481.8 131.5886 481.8 150 c
481.8 165.9941 470.1762 178.4 454 178.4 c
431.9591 178.4 418.2 164.4779 418.2 145.2 c
418.2 131.7307 423.5319 124.3 427.8 124.3 c
433.4915 124.3 441.6618 143.4727 445.4 186.2 C
458.55 185.3 L
f
U
460.4 85.4 m
455.6349 30.9349 445.271 12.2 428.2 12.2 c
415.3769 12.2 405.8 23.1694 405.8 45.2 c
405.8 70.0664 425.2782 89.4 454 89.4 c
476.5538 89.4 494.2 71.6671 494.2 50 c
494.2 24.6505 481.4138 10.4911 459.8 8.6 C
457.4 21.8 L
472.222 23.5476 479.6 32.5199 479.6 50 c
479.6 64.9765 469.0892 76.6 454 76.6 c
433.2382 76.6 420.4 63.4487 420.4 45.2 c
420.4 32.8297 424.9397 26.4 428.2 26.4 c
432.9349 26.4 441.1862 47.5797 444.6 86.6 C
460.4 85.4 L
f
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
